stages:
  - build
  - package
  - deploy
  - test

include:
  - template: Code-Quality.gitlab-ci.yml

cache:
  key: 
    files:
      - Package.resolved
      - ~/.swiftpm
  paths:
    - .build/

build focal:
  except:
    - /.*WIP$/
    - /styling\/.*$/
  stage: build
  image: brightdigit/publish-xml
  script:
    - export ARCH_PREFIX=$(uname -i)
    - swift build
    - swift test

build macos:
  except:
    - /.*WIP$/
    - /styling\/.*$/
  stage: build
  tags:
    - macos  
  script:
    - swift build    
    - swift run swiftformat --lint .
    - swift run swiftlint
    - swift test

package macos:
  except:
    - /.*WIP$/
    - /styling\/.*$/
  stage: package
  artifacts:
    paths:
      - brightdigitwg-*
  tags:
    - macos  
  script:
    - swift build -c release --product brightdigitwg
    - BIN_PATH=`swift build -c release --product brightdigitwg --show-bin-path`
    - cp $BIN_PATH/brightdigitwg brightdigitwg-`uname`-`arch`

package focal:
  timeout: 3h
  only:
    - main
    - develop
  except:
    - /.*WIP$/
    - /styling\/.*$/
  stage: package
  artifacts:
    paths:
      - brightdigitwg-*
  image: brightdigit/publish-xml
  script:
    - swift build -c release --product brightdigitwg
    - BIN_PATH=`swift build -c release --product brightdigitwg --show-bin-path`
    - cp $BIN_PATH/brightdigitwg brightdigitwg-`uname`-`arch`

deploy:
  cache: []
  stage: deploy
  tags:
    - macos  
  script:    
    - if [ "$CI_COMMIT_REF_NAME" = "main" ]; then SITE_ID=$NETLIFY_PRODUCTION_SITE_ID; else SITE_ID=$NETLIFY_BETA_SITE_ID; fi
    - if [ "$CI_COMMIT_REF_NAME" = "main" ]; then PUBLISHING_MODE=production; else PUBLISHING_MODE=drafts; fi
    - if [ "$CI_COMMIT_REF_NAME" = "main" ]; then PROD_FLAG="--prod"; else PROD_FLAG=""; fi    
    - ./brightdigitwg-`uname`-`arch` --mode $PUBLISHING_MODE
    - netlify deploy --site $SITE_ID --auth $NETLIFY_AUTH_TOKEN $PROD_FLAG

code_quality:
  cache: []
  artifacts:
    paths: [gl-code-quality-report.json]
