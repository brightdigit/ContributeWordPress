<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/5.7.2" created="2021-05-20 15:06" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Learning Swift</title>
	<link>https://learningswift.brightdigit.com</link>
	<description>learning the quirks of Swift</description>
	<pubDate>Thu, 20 May 2021 15:06:18 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://brightdigit.com/</wp:base_site_url>
	<wp:base_blog_url>https://learningswift.brightdigit.com</wp:base_blog_url>

		<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[leo]]></wp:author_login><wp:author_email><![CDATA[admin@brightdigit.com]]></wp:author_email><wp:author_display_name><![CDATA[leo]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

		<wp:category>
		<wp:term_id>20</wp:term_id>
		<wp:category_nicename><![CDATA[watch]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Apple Watch]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>7</wp:term_id>
		<wp:category_nicename><![CDATA[building-icons-and-image-sets]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Building Icons and Image Sets]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>8</wp:term_id>
		<wp:category_nicename><![CDATA[building-speculid]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Building Speculid]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>9</wp:term_id>
		<wp:category_nicename><![CDATA[empowerapps-show-podcast]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[EmpowerApps.Show Podcast]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>19</wp:term_id>
		<wp:category_nicename><![CDATA[guides]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Guides]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>3</wp:term_id>
		<wp:category_nicename><![CDATA[healthkit]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[HealthKit]]></wp:cat_name>
<wp:category_description><![CDATA[The Apple Watch has become the premier device for health, fitness, and workout tracking. Here are some article to help people get started with HealthKit on the iPhone and Apple Watch,]]></wp:category_description>
	</wp:category>
		<wp:category>
		<wp:term_id>1</wp:term_id>
		<wp:category_nicename><![CDATA[uncategorized]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>10</wp:term_id>
		<wp:category_nicename><![CDATA[vapor]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Vapor]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>2</wp:term_id>
		<wp:category_nicename><![CDATA[wwdc-2018]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[WWDC 2018]]></wp:cat_name>
<wp:category_description><![CDATA[With WWDC 2018, Apple has introduced some interesting new changes to make developing in that space easier. Here are some articles regarding the changes for developers.]]></wp:category_description>
	</wp:category>
			<wp:tag>
		<wp:term_id>14</wp:term_id>
		<wp:tag_slug><![CDATA[apple-watch]]></wp:tag_slug>
		<wp:tag_name><![CDATA[apple-watch]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>23</wp:term_id>
		<wp:tag_slug><![CDATA[combine]]></wp:tag_slug>
		<wp:tag_name><![CDATA[combine]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>18</wp:term_id>
		<wp:tag_slug><![CDATA[continuous-integration]]></wp:tag_slug>
		<wp:tag_name><![CDATA[continuous-integration]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>11</wp:term_id>
		<wp:tag_slug><![CDATA[empowerapps-show]]></wp:tag_slug>
		<wp:tag_name><![CDATA[empowerapps.show]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>22</wp:term_id>
		<wp:tag_slug><![CDATA[functional-programming]]></wp:tag_slug>
		<wp:tag_name><![CDATA[functional programming]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>25</wp:term_id>
		<wp:tag_slug><![CDATA[gcd]]></wp:tag_slug>
		<wp:tag_name><![CDATA[GCD]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>21</wp:term_id>
		<wp:tag_slug><![CDATA[optionals]]></wp:tag_slug>
		<wp:tag_name><![CDATA[optionals]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>24</wp:term_id>
		<wp:tag_slug><![CDATA[promises]]></wp:tag_slug>
		<wp:tag_name><![CDATA[promises]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>6</wp:term_id>
		<wp:tag_slug><![CDATA[smarthiit]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Smart Intensity]]></wp:tag_name>
<wp:tag_description><![CDATA[Blog articles related to the development of Smart Intensity.]]></wp:tag_description>
	</wp:tag>
		<wp:tag>
		<wp:term_id>17</wp:term_id>
		<wp:tag_slug><![CDATA[swift-package]]></wp:tag_slug>
		<wp:tag_name><![CDATA[swift-package]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>26</wp:term_id>
		<wp:tag_slug><![CDATA[swift-package-manager]]></wp:tag_slug>
		<wp:tag_name><![CDATA[swift-package-manager]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>12</wp:term_id>
		<wp:tag_slug><![CDATA[swiftui]]></wp:tag_slug>
		<wp:tag_name><![CDATA[swiftui]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>13</wp:term_id>
		<wp:tag_slug><![CDATA[vapor]]></wp:tag_slug>
		<wp:tag_name><![CDATA[vapor]]></wp:tag_name>
	</wp:tag>
				<wp:term><wp:term_id>4</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[social]]></wp:term_slug><wp:term_name><![CDATA[Social]]></wp:term_name>
</wp:term>

	<generator>https://wordpress.org/?v=5.7.2</generator>
<site xmlns="com-wordpress:feed-additions:1">135195680</site>
		<item>
		<title><![CDATA[Photo by Bence Boros]]></title>
		<link>https://learningswift.brightdigit.com/photo-by-bence-boros/</link>
		<pubDate>Wed, 23 May 2018 15:02:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/h4l3ezdpwzc.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date><![CDATA[2018-05-23 15:02:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-05-23 15:02:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-05-23 15:02:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-05-23 15:02:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo-by-bence-boros]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/h4l3ezdpwzc-e1529095698138.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/05/h4l3ezdpwzc-e1529095698138.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1016;s:6:"height";i:508;s:4:"file";s:38:"2018/05/h4l3ezdpwzc-e1529095698138.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:38:"h4l3ezdpwzc-e1529095698138-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:38:"h4l3ezdpwzc-e1529095698138-300x150.jpg";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:38:"h4l3ezdpwzc-e1529095698138-768x384.jpg";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:24:"h4l3ezdpwzc-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:38:"h4l3ezdpwzc-e1529095698138-640x320.jpg";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:9:"full-orig";a:3:{s:5:"width";i:1600;s:6:"height";i:1067;s:4:"file";s:15:"h4l3ezdpwzc.jpg";}s:14:"thumbnail-orig";a:4:{s:4:"file";s:23:"h4l3ezdpwzc-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:11:"medium-orig";a:4:{s:4:"file";s:23:"h4l3ezdpwzc-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:17:"medium_large-orig";a:4:{s:4:"file";s:23:"h4l3ezdpwzc-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:10:"large-orig";a:4:{s:4:"file";s:24:"h4l3ezdpwzc-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}s:14:"arke-blog-orig";a:4:{s:4:"file";s:23:"h4l3ezdpwzc-640x427.jpg";s:5:"width";i:640;s:6:"height";i:427;s:9:"mime-type";s:10:"image/jpeg";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/healthkit-getting-started/de3f41b0-4c3c-441f-a2c3-42355532cddc/</link>
		<pubDate>Wed, 23 May 2018 15:07:23 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/DE3F41B0-4C3C-441F-A2C3-42355532CDDC.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date><![CDATA[2018-05-23 15:07:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-05-23 15:07:23]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-06-08 18:42:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-06-08 18:42:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[de3f41b0-4c3c-441f-a2c3-42355532cddc]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>23</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/DE3F41B0-4C3C-441F-A2C3-42355532CDDC-e1529095622952.jpeg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/05/DE3F41B0-4C3C-441F-A2C3-42355532CDDC-e1529095622952.jpeg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1556;s:6:"height";i:778;s:4:"file";s:64:"2018/05/DE3F41B0-4C3C-441F-A2C3-42355532CDDC-e1529095622952.jpeg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:64:"DE3F41B0-4C3C-441F-A2C3-42355532CDDC-e1529095622952-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:64:"DE3F41B0-4C3C-441F-A2C3-42355532CDDC-e1529095622952-300x150.jpeg";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:64:"DE3F41B0-4C3C-441F-A2C3-42355532CDDC-e1529095622952-768x384.jpeg";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:65:"DE3F41B0-4C3C-441F-A2C3-42355532CDDC-e1529095622952-1024x512.jpeg";s:5:"width";i:1024;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:64:"DE3F41B0-4C3C-441F-A2C3-42355532CDDC-e1529095622952-640x320.jpeg";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"1.8";s:6:"credit";s:0:"";s:6:"camera";s:13:"iPhone 8 Plus";s:7:"caption";s:196:"{"cameraType":"Dual","macroEnabled":false,"qualityMode":3,"deviceTilt":0.03982510045170784,"customExposureMode":1,"extendedExposure":false,"whiteBalanceProgram":0,"cameraPosition":1,"focusMode":1}";s:17:"created_timestamp";s:10:"1527073294";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.99";s:3:"iso";s:3:"100";s:13:"shutter_speed";s:16:"0.11111111111111";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[workout on apple watch]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:9:"full-orig";a:3:{s:5:"width";i:1912;s:6:"height";i:1946;s:4:"file";s:41:"DE3F41B0-4C3C-441F-A2C3-42355532CDDC.jpeg";}s:14:"thumbnail-orig";a:4:{s:4:"file";s:49:"DE3F41B0-4C3C-441F-A2C3-42355532CDDC-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:11:"medium-orig";a:4:{s:4:"file";s:49:"DE3F41B0-4C3C-441F-A2C3-42355532CDDC-295x300.jpeg";s:5:"width";i:295;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:17:"medium_large-orig";a:4:{s:4:"file";s:49:"DE3F41B0-4C3C-441F-A2C3-42355532CDDC-768x782.jpeg";s:5:"width";i:768;s:6:"height";i:782;s:9:"mime-type";s:10:"image/jpeg";}s:10:"large-orig";a:4:{s:4:"file";s:51:"DE3F41B0-4C3C-441F-A2C3-42355532CDDC-1006x1024.jpeg";s:5:"width";i:1006;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:14:"arke-blog-orig";a:4:{s:4:"file";s:49:"DE3F41B0-4C3C-441F-A2C3-42355532CDDC-640x651.jpeg";s:5:"width";i:640;s:6:"height";i:651;s:9:"mime-type";s:10:"image/jpeg";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[My Interval Exercise]]></title>
		<link>https://learningswift.brightdigit.com/healthkit-getting-started/img_208f0706d0d0-1/</link>
		<pubDate>Wed, 23 May 2018 21:06:01 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/IMG_208F0706D0D0-1.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date><![CDATA[2018-05-23 21:06:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-05-23 21:06:01]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-05-23 21:06:23]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-05-23 21:06:23]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_208f0706d0d0-1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>23</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/IMG_208F0706D0D0-1.jpeg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/05/IMG_208F0706D0D0-1.jpeg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1242;s:6:"height";i:648;s:4:"file";s:31:"2018/05/IMG_208F0706D0D0-1.jpeg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"IMG_208F0706D0D0-1-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:31:"IMG_208F0706D0D0-1-300x157.jpeg";s:5:"width";i:300;s:6:"height";i:157;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:31:"IMG_208F0706D0D0-1-768x401.jpeg";s:5:"width";i:768;s:6:"height";i:401;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:32:"IMG_208F0706D0D0-1-1024x534.jpeg";s:5:"width";i:1024;s:6:"height";i:534;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:31:"IMG_208F0706D0D0-1-640x334.jpeg";s:5:"width";i:640;s:6:"height";i:334;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Workout Apps and the Iphone]]></title>
		<link>https://learningswift.brightdigit.com/workout-iphone/</link>
		<pubDate>Wed, 23 May 2018 21:30:06 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/workout_iphone_1527111006.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date><![CDATA[2018-05-23 21:30:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-05-23 21:30:06]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-05-23 21:30:34]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-05-23 21:30:34]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[workout-iphone]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/workout_iphone_1527111006.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/05/workout_iphone_1527111006.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1280;s:6:"height";i:719;s:4:"file";s:37:"2018/05/workout_iphone_1527111006.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:37:"workout_iphone_1527111006-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:37:"workout_iphone_1527111006-300x169.jpg";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:37:"workout_iphone_1527111006-768x431.jpg";s:5:"width";i:768;s:6:"height";i:431;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:38:"workout_iphone_1527111006-1024x575.jpg";s:5:"width";i:1024;s:6:"height";i:575;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[HKObjectType Hierarchy]]></title>
		<link>https://learningswift.brightdigit.com/healthkit-getting-started/diagram/</link>
		<pubDate>Thu, 24 May 2018 00:52:29 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/diagram.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[HKObjectType Hierarchy]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date><![CDATA[2018-05-24 00:52:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-05-24 00:52:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-05-24 00:52:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-05-24 00:52:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[diagram]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>23</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/diagram.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/05/diagram.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:800;s:6:"height";i:275;s:4:"file";s:19:"2018/05/diagram.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"diagram-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:19:"diagram-300x103.png";s:5:"width";i:300;s:6:"height";i:103;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:19:"diagram-768x264.png";s:5:"width";i:768;s:6:"height";i:264;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:19:"diagram-640x220.png";s:5:"width";i:640;s:6:"height";i:220;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Requesting Authorization]]></title>
		<link>https://learningswift.brightdigit.com/healthkit-getting-started/artboard-1/</link>
		<pubDate>Thu, 24 May 2018 01:04:43 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/Artboard-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Diagram of Requesting Authorization]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date><![CDATA[2018-05-24 01:04:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-05-24 01:04:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-05-24 01:05:15]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-05-24 01:05:15]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[artboard-1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>23</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/Artboard-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/05/Artboard-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:800;s:6:"height";i:950;s:4:"file";s:22:"2018/05/Artboard-1.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"Artboard-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:22:"Artboard-1-253x300.png";s:5:"width";i:253;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:22:"Artboard-1-768x912.png";s:5:"width";i:768;s:6:"height";i:912;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:22:"Artboard-1-640x760.png";s:5:"width";i:640;s:6:"height";i:760;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/photo-by-jonathan-petersson/</link>
		<pubDate>Mon, 04 Jun 2018 21:25:07 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/06/a6n685qlshq.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date><![CDATA[2018-06-04 21:25:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-04 21:25:07]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-06-05 00:49:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-06-05 00:49:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo-by-jonathan-petersson]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/06/a6n685qlshq.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/06/a6n685qlshq.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:1064;s:4:"file";s:23:"2018/06/a6n685qlshq.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"a6n685qlshq-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"a6n685qlshq-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:23:"a6n685qlshq-768x511.jpg";s:5:"width";i:768;s:6:"height";i:511;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:24:"a6n685qlshq-1024x681.jpg";s:5:"width";i:1024;s:6:"height";i:681;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:23:"a6n685qlshq-640x426.jpg";s:5:"width";i:640;s:6:"height";i:426;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Random Dice]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Example Health Data Prompt on Apple Watch]]></title>
		<link>https://learningswift.brightdigit.com/healthkit-apple-watch-data-authorization/simulator-screen-shot-apple-watch-series-3-38mm-2018-06-08-at-14-36-24/</link>
		<pubDate>Fri, 08 Jun 2018 18:39:20 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/06/Simulator-Screen-Shot-Apple-Watch-Series-3-38mm-2018-06-08-at-14.36.24.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date><![CDATA[2018-06-08 18:39:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-08 18:39:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-06-08 18:39:37]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-06-08 18:39:37]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[simulator-screen-shot-apple-watch-series-3-38mm-2018-06-08-at-14-36-24]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>74</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/06/Simulator-Screen-Shot-Apple-Watch-Series-3-38mm-2018-06-08-at-14.36.24.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/06/Simulator-Screen-Shot-Apple-Watch-Series-3-38mm-2018-06-08-at-14.36.24.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:272;s:6:"height";i:486;s:4:"file";s:82:"2018/06/Simulator-Screen-Shot-Apple-Watch-Series-3-38mm-2018-06-08-at-14.36.24.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:82:"Simulator-Screen-Shot-Apple-Watch-Series-3-38mm-2018-06-08-at-14.36.24-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:82:"Simulator-Screen-Shot-Apple-Watch-Series-3-38mm-2018-06-08-at-14.36.24-168x300.png";s:5:"width";i:168;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[andres-urena-438712-unsplash]]></title>
		<link>https://learningswift.brightdigit.com/healthkit-apple-watch-data-authorization/andres-urena-438712-unsplash/</link>
		<pubDate>Fri, 08 Jun 2018 19:16:13 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/06/andres-urena-438712-unsplash.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date><![CDATA[2018-06-08 19:16:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-08 19:16:13]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-06-08 19:16:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-06-08 19:16:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[andres-urena-438712-unsplash]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>74</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/06/andres-urena-438712-unsplash-e1528485621309.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/06/andres-urena-438712-unsplash-e1528485621309.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:800;s:4:"file";s:55:"2018/06/andres-urena-438712-unsplash-e1528485621309.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:55:"andres-urena-438712-unsplash-e1528485572413-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:55:"andres-urena-438712-unsplash-e1528485572413-300x150.jpg";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:55:"andres-urena-438712-unsplash-e1528485572413-768x384.jpg";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:56:"andres-urena-438712-unsplash-e1528485572413-1024x512.jpg";s:5:"width";i:1024;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:55:"andres-urena-438712-unsplash-e1528485572413-640x320.jpg";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:9:"full-orig";a:3:{s:5:"width";i:4000;s:6:"height";i:2667;s:4:"file";s:32:"andres-urena-438712-unsplash.jpg";}s:14:"thumbnail-orig";a:4:{s:4:"file";s:40:"andres-urena-438712-unsplash-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:11:"medium-orig";a:4:{s:4:"file";s:40:"andres-urena-438712-unsplash-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:17:"medium_large-orig";a:4:{s:4:"file";s:40:"andres-urena-438712-unsplash-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:10:"large-orig";a:4:{s:4:"file";s:41:"andres-urena-438712-unsplash-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}s:14:"arke-blog-orig";a:4:{s:4:"file";s:40:"andres-urena-438712-unsplash-640x427.jpg";s:5:"width";i:640;s:6:"height";i:427;s:9:"mime-type";s:10:"image/jpeg";}s:18:"full-1528485621309";a:3:{s:5:"width";i:3620;s:6:"height";i:1810;s:4:"file";s:47:"andres-urena-438712-unsplash-e1528485572413.jpg";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[iOS and watchOS Simulation of Health Data Authorization]]></title>
		<link>https://learningswift.brightdigit.com/healthkit-apple-watch-data-authorization/ezgif-com-gif-maker/</link>
		<pubDate>Fri, 08 Jun 2018 20:05:40 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/06/ezgif.com-gif-maker.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date><![CDATA[2018-06-08 20:05:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-08 20:05:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-06-08 20:06:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-06-08 20:06:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ezgif-com-gif-maker]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>74</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/06/ezgif.com-gif-maker.gif]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/06/ezgif.com-gif-maker.gif]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:640;s:6:"height";i:640;s:4:"file";s:31:"2018/06/ezgif.com-gif-maker.gif";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"ezgif.com-gif-maker-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/gif";}s:6:"medium";a:4:{s:4:"file";s:31:"ezgif.com-gif-maker-300x300.gif";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/gif";}s:9:"arke-blog";a:4:{s:4:"file";s:31:"ezgif.com-gif-maker-640x640.gif";s:5:"width";i:640;s:6:"height";i:640;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[iOS and watchOS Simulation of Health Data Authorization]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[try!Swift Group Photo]]></title>
		<link>https://learningswift.brightdigit.com/swift-thoughts-tryswift-nyc-2018/dmxegndxsaax6ug-jpg-large/</link>
		<pubDate>Fri, 07 Sep 2018 13:33:11 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/09/DmXeGNdXsAAx6UG.jpg-large.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date><![CDATA[2018-09-07 09:33:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-09-07 13:33:11]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-09-07 09:34:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-09-07 13:34:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[dmxegndxsaax6ug-jpg-large]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>158</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/09/DmXeGNdXsAAx6UG.jpg-large.jpeg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/09/DmXeGNdXsAAx6UG.jpg-large.jpeg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1800;s:6:"height";i:1187;s:4:"file";s:38:"2018/09/DmXeGNdXsAAx6UG.jpg-large.jpeg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:38:"DmXeGNdXsAAx6UG.jpg-large-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:38:"DmXeGNdXsAAx6UG.jpg-large-300x198.jpeg";s:5:"width";i:300;s:6:"height";i:198;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:38:"DmXeGNdXsAAx6UG.jpg-large-768x506.jpeg";s:5:"width";i:768;s:6:"height";i:506;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:39:"DmXeGNdXsAAx6UG.jpg-large-1024x675.jpeg";s:5:"width";i:1024;s:6:"height";i:675;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:38:"DmXeGNdXsAAx6UG.jpg-large-640x422.jpeg";s:5:"width";i:640;s:6:"height";i:422;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Artboard 1]]></title>
		<link>https://learningswift.brightdigit.com/speaking-a2-speculid-tryswiftnyc/artboard-1-2/</link>
		<pubDate>Mon, 01 Oct 2018 19:42:30 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/Artboard-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date><![CDATA[2018-10-01 15:42:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-01 19:42:30]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-10-01 15:42:30]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-10-01 19:42:30]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[artboard-1-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>169</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/Artboard-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/10/Artboard-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:512;s:4:"file";s:22:"2018/10/Artboard-1.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"Artboard-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:22:"Artboard-1-300x150.png";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:22:"Artboard-1-768x384.png";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:22:"Artboard-1-640x320.png";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Sketch, Photoshop, and Xcode]]></title>
		<link>https://learningswift.brightdigit.com/app-icon-templates-graphics-xcode/templates-export/</link>
		<pubDate>Fri, 26 Oct 2018 17:51:24 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/templates-export.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date><![CDATA[2018-10-26 13:51:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-26 17:51:24]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-10-26 13:58:43]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-10-26 17:58:43]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[templates-export]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>176</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/templates-export.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/10/templates-export.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:928;s:6:"height";i:366;s:4:"file";s:28:"2018/10/templates-export.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"templates-export-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:28:"templates-export-300x118.jpg";s:5:"width";i:300;s:6:"height";i:118;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:28:"templates-export-768x303.jpg";s:5:"width";i:768;s:6:"height";i:303;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:28:"templates-export-640x252.jpg";s:5:"width";i:640;s:6:"height";i:252;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Sketch, Photoshop, and Xcode]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/asset-catalogs-image-sets-app-icons/appicons-jpg/</link>
		<pubDate>Mon, 29 Oct 2018 12:23:11 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/AppIcons.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date><![CDATA[2018-10-29 08:23:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-29 12:23:11]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-10-29 08:23:18]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-10-29 12:23:18]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[appicons-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>188</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/AppIcons.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/10/AppIcons.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:903;s:4:"file";s:20:"2018/10/AppIcons.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"AppIcons-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"AppIcons-300x141.jpg";s:5:"width";i:300;s:6:"height";i:141;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"AppIcons-768x361.jpg";s:5:"width";i:768;s:6:"height";i:361;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"AppIcons-1024x482.jpg";s:5:"width";i:1024;s:6:"height";i:482;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:20:"AppIcons-640x301.jpg";s:5:"width";i:640;s:6:"height";i:301;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/appicons-jpg-2/</link>
		<pubDate>Mon, 29 Oct 2018 12:23:19 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/AppIcons-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date><![CDATA[2018-10-29 08:23:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-29 12:23:19]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-11-07 08:02:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-11-07 13:02:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[appicons-jpg-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/AppIcons-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/10/AppIcons-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:903;s:4:"file";s:22:"2018/10/AppIcons-1.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"AppIcons-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:22:"AppIcons-1-300x141.jpg";s:5:"width";i:300;s:6:"height";i:141;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:22:"AppIcons-1-768x361.jpg";s:5:"width";i:768;s:6:"height";i:361;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:23:"AppIcons-1-1024x482.jpg";s:5:"width";i:1024;s:6:"height";i:482;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:22:"AppIcons-1-640x301.jpg";s:5:"width";i:640;s:6:"height";i:301;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Asset Catalog Example]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/integrating-c-plus-plus-swift/pixman_example-png/</link>
		<pubDate>Wed, 31 Oct 2018 13:56:34 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/pixman_example.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>193</wp:post_id>
		<wp:post_date><![CDATA[2018-10-31 09:56:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-31 13:56:34]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-10-31 09:57:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-10-31 13:57:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[pixman_example-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>195</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/pixman_example.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/10/pixman_example.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1280;s:6:"height";i:832;s:4:"file";s:26:"2018/10/pixman_example.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"pixman_example-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:26:"pixman_example-300x195.png";s:5:"width";i:300;s:6:"height";i:195;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:26:"pixman_example-768x499.png";s:5:"width";i:768;s:6:"height";i:499;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:27:"pixman_example-1024x666.png";s:5:"width";i:1024;s:6:"height";i:666;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:26:"pixman_example-640x416.png";s:5:"width";i:640;s:6:"height";i:416;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/cswift-png/</link>
		<pubDate>Wed, 31 Oct 2018 13:57:06 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/cswift.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>194</wp:post_id>
		<wp:post_date><![CDATA[2018-10-31 09:57:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-31 13:57:06]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-01-15 16:33:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-01-15 21:33:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cswift-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/cswift.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/10/cswift.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:537;s:4:"file";s:18:"2018/10/cswift.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:18:"cswift-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:18:"cswift-300x157.png";s:5:"width";i:300;s:6:"height";i:157;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:18:"cswift-768x403.png";s:5:"width";i:768;s:6:"height";i:403;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:18:"cswift-640x336.png";s:5:"width";i:640;s:6:"height";i:336;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Integrating C++ with Swift]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[500px-Cairo_banner_1.svg]]></title>
		<link>https://learningswift.brightdigit.com/integrating-c-plus-plus-swift/500px-cairo_banner_1-svg/</link>
		<pubDate>Thu, 01 Nov 2018 17:59:01 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/11/500px-Cairo_banner_1.svg_.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>200</wp:post_id>
		<wp:post_date><![CDATA[2018-11-01 13:59:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-01 17:59:01]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-11-01 14:01:32]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-11-01 18:01:32]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[500px-cairo_banner_1-svg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>195</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/11/500px-Cairo_banner_1.svg_-e1541095276942.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/11/500px-Cairo_banner_1.svg_-e1541095276942.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:420;s:6:"height";i:100;s:4:"file";s:52:"2018/11/500px-Cairo_banner_1.svg_-e1541095276942.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:37:"500px-Cairo_banner_1.svg_-150x119.png";s:5:"width";i:150;s:6:"height";i:119;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:36:"500px-Cairo_banner_1.svg_-300x71.png";s:5:"width";i:300;s:6:"height";i:71;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:500;s:6:"height";i:119;s:4:"file";s:29:"500px-Cairo_banner_1.svg_.png";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[440px-Librsvg.svg]]></title>
		<link>https://learningswift.brightdigit.com/integrating-c-plus-plus-swift/440px-librsvg-svg/</link>
		<pubDate>Thu, 01 Nov 2018 17:59:20 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/11/440px-Librsvg.svg_.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>201</wp:post_id>
		<wp:post_date><![CDATA[2018-11-01 13:59:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-01 17:59:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-11-01 14:03:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-11-01 18:03:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[440px-librsvg-svg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>195</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/11/440px-Librsvg.svg_-e1541095349996.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/11/440px-Librsvg.svg_-e1541095349996.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:131;s:6:"height";i:100;s:4:"file";s:45:"2018/11/440px-Librsvg.svg_-e1541095349996.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"440px-Librsvg.svg_-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:30:"440px-Librsvg.svg_-300x228.png";s:5:"width";i:300;s:6:"height";i:228;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:440;s:6:"height";i:335;s:4:"file";s:22:"440px-Librsvg.svg_.png";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/objective-c-and-swift-being-friendly/2m411z/</link>
		<pubDate>Fri, 09 Nov 2018 10:47:36 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/11/2m411z.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>212</wp:post_id>
		<wp:post_date><![CDATA[2018-11-09 05:47:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-09 10:47:36]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-11-09 05:48:59]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-11-09 10:48:59]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2m411z]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>211</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/11/2m411z.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/11/2m411z.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:640;s:6:"height";i:459;s:4:"file";s:18:"2018/11/2m411z.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:18:"2m411z-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:18:"2m411z-300x215.jpg";s:5:"width";i:300;s:6:"height";i:215;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Objective-C - the glue holding c++ and swift together]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[ScriptingBridge and Swift working together]]></title>
		<link>https://learningswift.brightdigit.com/scriptingbridge-applescript-swift/0nrlpzldopn4ahly6/</link>
		<pubDate>Fri, 16 Nov 2018 14:56:59 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/11/0nrlPZlDopn4aHLy6.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>247</wp:post_id>
		<wp:post_date><![CDATA[2018-11-16 09:56:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-16 14:56:59]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-11-16 09:57:32]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-11-16 14:57:32]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[0nrlpzldopn4ahly6]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>246</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/11/0nrlPZlDopn4aHLy6.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/11/0nrlPZlDopn4aHLy6.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:837;s:6:"height";i:292;s:4:"file";s:29:"2018/11/0nrlPZlDopn4aHLy6.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"0nrlPZlDopn4aHLy6-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:29:"0nrlPZlDopn4aHLy6-300x105.png";s:5:"width";i:300;s:6:"height";i:105;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:29:"0nrlPZlDopn4aHLy6-768x268.png";s:5:"width";i:768;s:6:"height";i:268;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:29:"0nrlPZlDopn4aHLy6-640x223.png";s:5:"width";i:640;s:6:"height";i:223;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Swift Development Tips with Speculid and Try!Swift NYC]]></title>
		<link>https://learningswift.brightdigit.com/swift-development-tips-speculid-tryswift/title-card/</link>
		<pubDate>Sat, 17 Nov 2018 21:22:50 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/11/title-card.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>264</wp:post_id>
		<wp:post_date><![CDATA[2018-11-17 16:22:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-17 21:22:50]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-11-17 16:23:14]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-11-17 21:23:14]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[title-card]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>260</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/11/title-card.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/11/title-card.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:3840;s:6:"height";i:2160;s:4:"file";s:22:"2018/11/title-card.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"title-card-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:22:"title-card-300x169.jpg";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:22:"title-card-768x432.jpg";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:23:"title-card-1024x576.jpg";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:22:"title-card-640x360.jpg";s:5:"width";i:640;s:6:"height";i:360;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Speaking at LaDev on Freelancing]]></title>
		<link>https://learningswift.brightdigit.com/freelancing-prepare-started/screen-shot-2018-12-10-at-12-55-30-pm/</link>
		<pubDate>Mon, 10 Dec 2018 17:55:43 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/12/Screen-Shot-2018-12-10-at-12.55.30-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Speaking at LaDev on Freelancing]]></excerpt:encoded>
		<wp:post_id>282</wp:post_id>
		<wp:post_date><![CDATA[2018-12-10 12:55:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-10 17:55:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-12-10 12:56:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-12-10 17:56:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2018-12-10-at-12-55-30-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>280</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/12/Screen-Shot-2018-12-10-at-12.55.30-PM.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/12/Screen-Shot-2018-12-10-at-12.55.30-PM.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1064;s:6:"height";i:486;s:4:"file";s:49:"2018/12/Screen-Shot-2018-12-10-at-12.55.30-PM.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:49:"Screen-Shot-2018-12-10-at-12.55.30-PM-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:49:"Screen-Shot-2018-12-10-at-12.55.30-PM-300x137.png";s:5:"width";i:300;s:6:"height";i:137;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:49:"Screen-Shot-2018-12-10-at-12.55.30-PM-768x351.png";s:5:"width";i:768;s:6:"height";i:351;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:50:"Screen-Shot-2018-12-10-at-12.55.30-PM-1024x468.png";s:5:"width";i:1024;s:6:"height";i:468;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:49:"Screen-Shot-2018-12-10-at-12.55.30-PM-640x292.png";s:5:"width";i:640;s:6:"height";i:292;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Speaking at LaDev on Freelancing]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_failed]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Apple Products Which Can Use Swift]]></title>
		<link>https://learningswift.brightdigit.com/swift-5-0-xcode-10-1/michal-kubalczyk-787999-unsplash/</link>
		<pubDate>Tue, 18 Dec 2018 20:53:15 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/12/michal-kubalczyk-787999-unsplash.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>303</wp:post_id>
		<wp:post_date><![CDATA[2018-12-18 15:53:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-18 20:53:15]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-12-18 17:58:32]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-12-18 22:58:32]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[michal-kubalczyk-787999-unsplash]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>295</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/12/michal-kubalczyk-787999-unsplash-e1545166561795.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/12/michal-kubalczyk-787999-unsplash-e1545166561795.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1077;s:4:"file";s:59:"2018/12/michal-kubalczyk-787999-unsplash-e1545166561795.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:59:"michal-kubalczyk-787999-unsplash-e1545166532509-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:59:"michal-kubalczyk-787999-unsplash-e1545166532509-300x168.jpg";s:5:"width";i:300;s:6:"height";i:168;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:59:"michal-kubalczyk-787999-unsplash-e1545166532509-768x431.jpg";s:5:"width";i:768;s:6:"height";i:431;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:60:"michal-kubalczyk-787999-unsplash-e1545166532509-1024x574.jpg";s:5:"width";i:1024;s:6:"height";i:574;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:59:"michal-kubalczyk-787999-unsplash-e1545166532509-640x359.jpg";s:5:"width";i:640;s:6:"height";i:359;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:8:{s:9:"full-orig";a:3:{s:5:"width";i:5077;s:6:"height";i:3173;s:4:"file";s:36:"michal-kubalczyk-787999-unsplash.jpg";}s:14:"thumbnail-orig";a:4:{s:4:"file";s:44:"michal-kubalczyk-787999-unsplash-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:11:"medium-orig";a:4:{s:4:"file";s:44:"michal-kubalczyk-787999-unsplash-300x187.jpg";s:5:"width";i:300;s:6:"height";i:187;s:9:"mime-type";s:10:"image/jpeg";}s:17:"medium_large-orig";a:4:{s:4:"file";s:44:"michal-kubalczyk-787999-unsplash-768x480.jpg";s:5:"width";i:768;s:6:"height";i:480;s:9:"mime-type";s:10:"image/jpeg";}s:10:"large-orig";a:4:{s:4:"file";s:45:"michal-kubalczyk-787999-unsplash-1024x640.jpg";s:5:"width";i:1024;s:6:"height";i:640;s:9:"mime-type";s:10:"image/jpeg";}s:14:"arke-blog-orig";a:4:{s:4:"file";s:44:"michal-kubalczyk-787999-unsplash-640x400.jpg";s:5:"width";i:640;s:6:"height";i:400;s:9:"mime-type";s:10:"image/jpeg";}s:18:"full-1545166555865";a:3:{s:5:"width";i:3845;s:6:"height";i:2157;s:4:"file";s:51:"michal-kubalczyk-787999-unsplash-e1545166532509.jpg";}s:18:"full-1545166561795";a:3:{s:5:"width";i:1920;s:6:"height";i:1077;s:4:"file";s:51:"michal-kubalczyk-787999-unsplash-e1545166555865.jpg";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Apple Products Which Can Use Swift]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Xcode Toolchain Menu Item]]></title>
		<link>https://learningswift.brightdigit.com/swift-5-0-xcode-10-1/xcode-toolchain-menu/</link>
		<pubDate>Tue, 18 Dec 2018 22:39:55 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/12/Xcode-Toolchain-Menu.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Xcode Toolchain Menu Item]]></excerpt:encoded>
		<wp:post_id>308</wp:post_id>
		<wp:post_date><![CDATA[2018-12-18 17:39:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-18 22:39:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-12-18 17:54:46]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-12-18 22:54:46]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[xcode-toolchain-menu]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>295</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/12/Xcode-Toolchain-Menu.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/12/Xcode-Toolchain-Menu.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:541;s:6:"height";i:339;s:4:"file";s:32:"2018/12/Xcode-Toolchain-Menu.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:32:"Xcode-Toolchain-Menu-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:32:"Xcode-Toolchain-Menu-300x188.png";s:5:"width";i:300;s:6:"height";i:188;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Xcode Toolchain Menu Item]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Xcode Project Settings Menu Item]]></title>
		<link>https://learningswift.brightdigit.com/swift-5-0-xcode-10-1/xcode-projectsettings-menu/</link>
		<pubDate>Tue, 18 Dec 2018 22:48:25 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/12/Xcode-ProjectSettings-Menu.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Xcode Project Settings Menu Item]]></excerpt:encoded>
		<wp:post_id>309</wp:post_id>
		<wp:post_date><![CDATA[2018-12-18 17:48:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-18 22:48:25]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-12-18 17:55:32]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-12-18 22:55:32]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[xcode-projectsettings-menu]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>295</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/12/Xcode-ProjectSettings-Menu-e1545173707171.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/12/Xcode-ProjectSettings-Menu-e1545173707171.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:291;s:6:"height";i:400;s:4:"file";s:53:"2018/12/Xcode-ProjectSettings-Menu-e1545173707171.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:38:"Xcode-ProjectSettings-Menu-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:38:"Xcode-ProjectSettings-Menu-218x300.png";s:5:"width";i:218;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:582;s:6:"height";i:800;s:4:"file";s:30:"Xcode-ProjectSettings-Menu.png";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Xcode Project Settings Menu Item]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Xcode Project Settings Window]]></title>
		<link>https://learningswift.brightdigit.com/swift-5-0-xcode-10-1/xcode-projectsettings-window/</link>
		<pubDate>Tue, 18 Dec 2018 22:49:43 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/12/Xcode-ProjectSettings-Window.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Xcode Project Settings Window]]></excerpt:encoded>
		<wp:post_id>310</wp:post_id>
		<wp:post_date><![CDATA[2018-12-18 17:49:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-18 22:49:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-12-18 17:57:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-12-18 22:57:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[xcode-projectsettings-window]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>295</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/12/Xcode-ProjectSettings-Window-e1545173841972.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/12/Xcode-ProjectSettings-Window-e1545173841972.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:489;s:6:"height";i:400;s:4:"file";s:55:"2018/12/Xcode-ProjectSettings-Window-e1545173841972.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:40:"Xcode-ProjectSettings-Window-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:40:"Xcode-ProjectSettings-Window-300x245.png";s:5:"width";i:300;s:6:"height";i:245;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:40:"Xcode-ProjectSettings-Window-768x628.png";s:5:"width";i:768;s:6:"height";i:628;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:40:"Xcode-ProjectSettings-Window-640x524.png";s:5:"width";i:640;s:6:"height";i:524;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Xcode Project Settings Window]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:978;s:6:"height";i:800;s:4:"file";s:32:"Xcode-ProjectSettings-Window.png";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[img_0009]]></title>
		<link>https://learningswift.brightdigit.com/empowerapps-show-project-estimation/img_0009-2/</link>
		<pubDate>Tue, 08 Jan 2019 15:43:08 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=323</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>323</wp:post_id>
		<wp:post_date><![CDATA[2019-01-08 10:43:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-08 15:43:08]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-01-08 10:43:08]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-01-08 15:43:08]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>322</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/01/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/01/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/01/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_884]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-01-04 16:36:51]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-01-04]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/photo-by-mike-alonzo/</link>
		<pubDate>Tue, 15 Jan 2019 21:58:37 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/01xe7za0jttem.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>350</wp:post_id>
		<wp:post_date><![CDATA[2019-01-15 16:58:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-15 21:58:37]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-01-15 17:01:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-01-15 22:01:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo-by-mike-alonzo]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/01/xe7za0jttem-e1547589635824.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/01/xe7za0jttem-e1547589635824.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Linking]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1200;s:6:"height";i:602;s:4:"file";s:38:"2019/01/xe7za0jttem-e1547589635824.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:38:"xe7za0jttem-e1547589614468-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:38:"xe7za0jttem-e1547589614468-300x150.jpg";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:38:"xe7za0jttem-e1547589614468-768x385.jpg";s:5:"width";i:768;s:6:"height";i:385;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:39:"xe7za0jttem-e1547589614468-1024x513.jpg";s:5:"width";i:1024;s:6:"height";i:513;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:38:"xe7za0jttem-e1547589614468-640x321.jpg";s:5:"width";i:640;s:6:"height";i:321;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:9:"full-orig";a:3:{s:5:"width";i:1600;s:6:"height";i:1064;s:4:"file";s:15:"xe7za0jttem.jpg";}s:14:"thumbnail-orig";a:4:{s:4:"file";s:23:"xe7za0jttem-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:11:"medium-orig";a:4:{s:4:"file";s:23:"xe7za0jttem-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:17:"medium_large-orig";a:4:{s:4:"file";s:23:"xe7za0jttem-768x511.jpg";s:5:"width";i:768;s:6:"height";i:511;s:9:"mime-type";s:10:"image/jpeg";}s:10:"large-orig";a:4:{s:4:"file";s:24:"xe7za0jttem-1024x681.jpg";s:5:"width";i:1024;s:6:"height";i:681;s:9:"mime-type";s:10:"image/jpeg";}s:14:"arke-blog-orig";a:4:{s:4:"file";s:23:"xe7za0jttem-640x426.jpg";s:5:"width";i:640;s:6:"height";i:426;s:9:"mime-type";s:10:"image/jpeg";}s:18:"full-1547589635824";a:3:{s:5:"width";i:1588;s:6:"height";i:796;s:4:"file";s:30:"xe7za0jttem-e1547589614468.jpg";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/photo-by-ybrayym-esenov/</link>
		<pubDate>Tue, 15 Jan 2019 21:59:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/01eiwvoa9zb10.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>351</wp:post_id>
		<wp:post_date><![CDATA[2019-01-15 16:59:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-15 21:59:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-01-15 17:01:51]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-01-15 22:01:51]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo-by-ybrayym-esenov]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/01/eiwvoa9zb10-e1547589673408.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/01/eiwvoa9zb10-e1547589673408.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Dependency Hell]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1200;s:6:"height";i:600;s:4:"file";s:38:"2019/01/eiwvoa9zb10-e1547589673408.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:38:"eiwvoa9zb10-e1547589663680-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:38:"eiwvoa9zb10-e1547589663680-300x150.jpg";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:38:"eiwvoa9zb10-e1547589663680-768x384.jpg";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:39:"eiwvoa9zb10-e1547589663680-1024x512.jpg";s:5:"width";i:1024;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:38:"eiwvoa9zb10-e1547589663680-640x320.jpg";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:7:{s:9:"full-orig";a:3:{s:5:"width";i:1600;s:6:"height";i:1067;s:4:"file";s:15:"eiwvoa9zb10.jpg";}s:14:"thumbnail-orig";a:4:{s:4:"file";s:23:"eiwvoa9zb10-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:11:"medium-orig";a:4:{s:4:"file";s:23:"eiwvoa9zb10-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:17:"medium_large-orig";a:4:{s:4:"file";s:23:"eiwvoa9zb10-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:10:"large-orig";a:4:{s:4:"file";s:24:"eiwvoa9zb10-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}s:14:"arke-blog-orig";a:4:{s:4:"file";s:23:"eiwvoa9zb10-640x427.jpg";s:5:"width";i:640;s:6:"height";i:427;s:9:"mime-type";s:10:"image/jpeg";}s:18:"full-1547589673408";a:3:{s:5:"width";i:1368;s:6:"height";i:684;s:4:"file";s:30:"eiwvoa9zb10-e1547589663680.jpg";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Screen Shot 2019-01-15 at 6.42.01 PM]]></title>
		<link>https://learningswift.brightdigit.com/speaker/screen-shot-2019-01-15-at-6-42-01-pm/</link>
		<pubDate>Tue, 15 Jan 2019 23:43:33 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/01/Screen-Shot-2019-01-15-at-6.42.01-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>358</wp:post_id>
		<wp:post_date><![CDATA[2019-01-15 18:43:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-15 23:43:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-01-15 18:43:33]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-01-15 23:43:33]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2019-01-15-at-6-42-01-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/01/Screen-Shot-2019-01-15-at-6.42.01-PM.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/01/Screen-Shot-2019-01-15-at-6.42.01-PM.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1510;s:6:"height";i:826;s:4:"file";s:48:"2019/01/Screen-Shot-2019-01-15-at-6.42.01-PM.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:48:"Screen-Shot-2019-01-15-at-6.42.01-PM-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:48:"Screen-Shot-2019-01-15-at-6.42.01-PM-300x164.png";s:5:"width";i:300;s:6:"height";i:164;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:48:"Screen-Shot-2019-01-15-at-6.42.01-PM-768x420.png";s:5:"width";i:768;s:6:"height";i:420;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:49:"Screen-Shot-2019-01-15-at-6.42.01-PM-1024x560.png";s:5:"width";i:1024;s:6:"height";i:560;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:48:"Screen-Shot-2019-01-15-at-6.42.01-PM-640x350.png";s:5:"width";i:640;s:6:"height";i:350;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_failed]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-2/</link>
		<pubDate>Thu, 07 Feb 2019 16:13:20 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=394</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>394</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:13:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:13:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:13:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:13:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1529]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-3/</link>
		<pubDate>Thu, 07 Feb 2019 16:13:20 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=395</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>395</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:13:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:13:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:13:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:13:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1542]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-4/</link>
		<pubDate>Thu, 07 Feb 2019 16:13:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=396</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>396</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:13:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:13:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-4]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1555]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-5/</link>
		<pubDate>Thu, 07 Feb 2019 16:13:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=397</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>397</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:13:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:13:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-5]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1568]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-6/</link>
		<pubDate>Thu, 07 Feb 2019 16:13:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=398</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>398</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:13:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:13:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-6]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1581]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-7/</link>
		<pubDate>Thu, 07 Feb 2019 16:13:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=399</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>399</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:13:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:13:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-7]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1594]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-8/</link>
		<pubDate>Thu, 07 Feb 2019 16:13:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=400</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>400</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:13:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:13:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-8]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1607]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-9/</link>
		<pubDate>Thu, 07 Feb 2019 16:13:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=401</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>401</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:13:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:13:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-9]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1620]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-10/</link>
		<pubDate>Thu, 07 Feb 2019 16:13:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=403</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>403</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:13:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:13:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:13:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-10]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1633]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-11/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:16 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-2/img_0009-2-11/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>404</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-11]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1651]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-12/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:16 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-3/img_0009-2-12/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>405</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-12]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1669]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-13/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:16 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-4/img_0009-2-13/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>406</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-13]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1687]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-14/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:17 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-5/img_0009-2-14/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>407</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:17]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:17]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-14]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1705]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-15/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:17 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-6/img_0009-2-15/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>408</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:17]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:17]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-15]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1723]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-16/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:17 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-7/img_0009-2-16/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>409</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:17]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:17]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-16]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1741]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-17/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:17 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-8/img_0009-2-17/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>410</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:17]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:17]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-17]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1759]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-18/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:17 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show/img_0009-2-18/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>411</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:17]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:17]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-18]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1776]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/apple-2019-empowerapps-show/img_0009-2-19/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:20 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=413</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>413</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-19]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>412</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1791]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-20/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:20 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-2/img_0009-2-20/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>414</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-20]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1807]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-21/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:20 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-3/img_0009-2-21/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>415</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-21]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1823]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-22/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:20 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-4/img_0009-2-22/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>416</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-22]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1839]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-23/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-5/img_0009-2-23/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>417</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-23]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1855]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-24/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-6/img_0009-2-24/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>418</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-24]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1871]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-25/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-7/img_0009-2-25/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>419</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-25]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1887]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-26/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-8/img_0009-2-26/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>420</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-26]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1903]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/img_0009-2-27/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show-9/img_0009-2-27/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>421</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-27]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1920]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/apple-2019-empowerapps-show/img_0009-2-28/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show/img_0009-2-28/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>423</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-07 11:24:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-07 16:24:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-28]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>412</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_1936]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[JSON to Swift using Codable]]></title>
		<link>https://learningswift.brightdigit.com/codable-4-ways-improve-decode-json/codable_image/</link>
		<pubDate>Fri, 15 Feb 2019 02:09:59 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/codable_image.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>457</wp:post_id>
		<wp:post_date><![CDATA[2019-02-14 21:09:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-15 02:09:59]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-14 21:10:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-15 02:10:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[codable_image]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>436</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/codable_image.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/codable_image.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1119;s:6:"height";i:402;s:4:"file";s:25:"2019/02/codable_image.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"codable_image-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"codable_image-300x108.png";s:5:"width";i:300;s:6:"height";i:108;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:25:"codable_image-768x276.png";s:5:"width";i:768;s:6:"height";i:276;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:26:"codable_image-1024x368.png";s:5:"width";i:1024;s:6:"height";i:368;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:25:"codable_image-640x230.png";s:5:"width";i:640;s:6:"height";i:230;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[JSON to Swift using Codable]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Photo by Malcolm Lightbody]]></title>
		<link>https://learningswift.brightdigit.com/photo-by-malcolm-lightbody/</link>
		<pubDate>Fri, 15 Feb 2019 02:10:43 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02401od83ke6o.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>458</wp:post_id>
		<wp:post_date><![CDATA[2019-02-14 21:10:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-15 02:10:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-14 21:16:03]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-15 02:16:03]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo-by-malcolm-lightbody]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/401od83ke6o-e1550196900944.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/401od83ke6o-e1550196900944.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:800;s:6:"height";i:531;s:4:"file";s:38:"2019/02/401od83ke6o-e1550196900944.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"401od83ke6o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"401od83ke6o-300x199.jpg";s:5:"width";i:300;s:6:"height";i:199;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:23:"401od83ke6o-768x510.jpg";s:5:"width";i:768;s:6:"height";i:510;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:24:"401od83ke6o-1024x680.jpg";s:5:"width";i:1024;s:6:"height";i:680;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:23:"401od83ke6o-640x425.jpg";s:5:"width";i:640;s:6:"height";i:425;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:1600;s:6:"height";i:1062;s:4:"file";s:15:"401od83ke6o.jpg";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Photo by Kambani Ramano]]></title>
		<link>https://learningswift.brightdigit.com/photo-by-kambani-ramano/</link>
		<pubDate>Fri, 15 Feb 2019 02:11:45 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02hrtdxy5urbu.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>459</wp:post_id>
		<wp:post_date><![CDATA[2019-02-14 21:11:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-15 02:11:45]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-14 21:11:45]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-15 02:11:45]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo-by-kambani-ramano]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/hrtdxy5urbu.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/hrtdxy5urbu.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:1067;s:4:"file";s:23:"2019/02/hrtdxy5urbu.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"hrtdxy5urbu-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"hrtdxy5urbu-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:23:"hrtdxy5urbu-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:24:"hrtdxy5urbu-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:23:"hrtdxy5urbu-640x427.jpg";s:5:"width";i:640;s:6:"height";i:427;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Photo by rawpixel]]></title>
		<link>https://learningswift.brightdigit.com/photo-by-rawpixel/</link>
		<pubDate>Fri, 15 Feb 2019 02:12:33 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02zmmxsrmsoi8.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>460</wp:post_id>
		<wp:post_date><![CDATA[2019-02-14 21:12:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-15 02:12:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-14 21:12:33]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-15 02:12:33]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo-by-rawpixel]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/zmmxsrmsoi8.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/zmmxsrmsoi8.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:1123;s:4:"file";s:23:"2019/02/zmmxsrmsoi8.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"zmmxsrmsoi8-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"zmmxsrmsoi8-300x211.jpg";s:5:"width";i:300;s:6:"height";i:211;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:23:"zmmxsrmsoi8-768x539.jpg";s:5:"width";i:768;s:6:"height";i:539;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:24:"zmmxsrmsoi8-1024x719.jpg";s:5:"width";i:1024;s:6:"height";i:719;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:23:"zmmxsrmsoi8-640x449.jpg";s:5:"width";i:640;s:6:"height";i:449;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Photo by Mike Petrucci]]></title>
		<link>https://learningswift.brightdigit.com/photo-by-mike-petrucci/</link>
		<pubDate>Fri, 15 Feb 2019 02:13:01 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02f6xv0xs9jwg.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>461</wp:post_id>
		<wp:post_date><![CDATA[2019-02-14 21:13:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-15 02:13:01]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-14 21:13:01]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-15 02:13:01]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo-by-mike-petrucci]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/f6xv0xs9jwg.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/f6xv0xs9jwg.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:1200;s:4:"file";s:23:"2019/02/f6xv0xs9jwg.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"f6xv0xs9jwg-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"f6xv0xs9jwg-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:23:"f6xv0xs9jwg-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:24:"f6xv0xs9jwg-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:23:"f6xv0xs9jwg-640x480.jpg";s:5:"width";i:640;s:6:"height";i:480;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Photo by rawpixel]]></title>
		<link>https://learningswift.brightdigit.com/photo-by-rawpixel-2/</link>
		<pubDate>Fri, 15 Feb 2019 02:13:30 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02xde_p0expc8.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>462</wp:post_id>
		<wp:post_date><![CDATA[2019-02-14 21:13:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-15 02:13:30]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-14 21:13:30]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-15 02:13:30]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo-by-rawpixel-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/xde_p0expc8.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/xde_p0expc8.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:1067;s:4:"file";s:23:"2019/02/xde_p0expc8.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"xde_p0expc8-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"xde_p0expc8-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:23:"xde_p0expc8-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:24:"xde_p0expc8-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:23:"xde_p0expc8-640x427.jpg";s:5:"width";i:640;s:6:"height";i:427;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/apple-2019-empowerapps-show/img_0009-2-29/</link>
		<pubDate>Sun, 17 Feb 2019 01:25:01 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show/img_0009-2-29/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>475</wp:post_id>
		<wp:post_date><![CDATA[2019-02-16 20:25:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-17 01:25:01]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-16 20:25:01]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-17 01:25:01]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-29]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>412</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_2065]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/apple-2019-empowerapps-show/img_0009-2-30/</link>
		<pubDate>Sun, 17 Feb 2019 01:25:04 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show/img_0009-2-30/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>476</wp:post_id>
		<wp:post_date><![CDATA[2019-02-16 20:25:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-17 01:25:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-16 20:25:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-17 01:25:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-30]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>412</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_2081]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/empowerapps-show-cloud-and-backend-services-for-apps/img_0009-2-2-2/</link>
		<pubDate>Sun, 24 Feb 2019 15:11:16 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=478</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>478</wp:post_id>
		<wp:post_date><![CDATA[2019-02-24 10:11:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-24 15:11:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-24 10:11:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-24 15:11:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-2-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>477</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/02/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/02/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1532]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_2095]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-16 20:25:04]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-16]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/apple-2019-empowerapps-show/img_0009-2-31/</link>
		<pubDate>Mon, 11 Mar 2019 15:36:39 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/apple-2019-empowerapps-show/img_0009-2-31/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>493</wp:post_id>
		<wp:post_date><![CDATA[2019-03-11 11:36:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-11 15:36:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-11 11:36:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-11 15:36:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-31]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>412</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/03/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_2190]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/empowerapps-show-project-estimation/img_0009-2-32/</link>
		<pubDate>Mon, 11 Mar 2019 15:36:40 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/empowerapps-show-project-estimation/img_0009-2-32/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>495</wp:post_id>
		<wp:post_date><![CDATA[2019-03-11 11:36:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-11 15:36:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-11 11:36:40]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-11 15:36:40]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-32]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>322</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:288;s:6:"height";i:288;s:4:"file";s:20:"2019/03/img_0009.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0009-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:20:"img_0009-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:20:"img_0009-288x200.jpg";s:5:"width";i:288;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:20:"img_0009-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:20:"img_0009-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_2206]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-07 11:02:06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/screen-shot-2019-03-12-at-10-18-32-am-png/</link>
		<pubDate>Tue, 12 Mar 2019 21:06:10 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/Screen-Shot-2019-03-12-at-10.18.32-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>498</wp:post_id>
		<wp:post_date><![CDATA[2019-03-12 17:06:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-12 21:06:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-12 17:06:12]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-12 21:06:12]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2019-03-12-at-10-18-32-am-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/Screen-Shot-2019-03-12-at-10.18.32-AM.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/Screen-Shot-2019-03-12-at-10.18.32-AM.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1396;s:6:"height";i:930;s:4:"file";s:49:"2019/03/Screen-Shot-2019-03-12-at-10.18.32-AM.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:49:"Screen-Shot-2019-03-12-at-10.18.32-AM-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:49:"Screen-Shot-2019-03-12-at-10.18.32-AM-300x200.png";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:49:"Screen-Shot-2019-03-12-at-10.18.32-AM-768x512.png";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:50:"Screen-Shot-2019-03-12-at-10.18.32-AM-1024x682.png";s:5:"width";i:1024;s:6:"height";i:682;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:49:"Screen-Shot-2019-03-12-at-10.18.32-AM-640x426.png";s:5:"width";i:640;s:6:"height";i:426;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/screen-shot-2019-03-12-at-10-18-42-am-png/</link>
		<pubDate>Tue, 12 Mar 2019 21:06:13 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/Screen-Shot-2019-03-12-at-10.18.42-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>499</wp:post_id>
		<wp:post_date><![CDATA[2019-03-12 17:06:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-12 21:06:13]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-12 17:06:15]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-12 21:06:15]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2019-03-12-at-10-18-42-am-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/Screen-Shot-2019-03-12-at-10.18.42-AM.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/Screen-Shot-2019-03-12-at-10.18.42-AM.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1284;s:6:"height";i:708;s:4:"file";s:49:"2019/03/Screen-Shot-2019-03-12-at-10.18.42-AM.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:49:"Screen-Shot-2019-03-12-at-10.18.42-AM-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:49:"Screen-Shot-2019-03-12-at-10.18.42-AM-300x165.png";s:5:"width";i:300;s:6:"height";i:165;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:49:"Screen-Shot-2019-03-12-at-10.18.42-AM-768x423.png";s:5:"width";i:768;s:6:"height";i:423;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:50:"Screen-Shot-2019-03-12-at-10.18.42-AM-1024x565.png";s:5:"width";i:1024;s:6:"height";i:565;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:49:"Screen-Shot-2019-03-12-at-10.18.42-AM-640x353.png";s:5:"width";i:640;s:6:"height";i:353;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/deep-dive-into-vapor-jpg/</link>
		<pubDate>Thu, 14 Mar 2019 00:52:32 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/deep-dive-into-vapor.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>504</wp:post_id>
		<wp:post_date><![CDATA[2019-03-13 20:52:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-14 00:52:32]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-13 20:52:34]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-14 00:52:34]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[deep-dive-into-vapor-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>506</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/deep-dive-into-vapor.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/deep-dive-into-vapor.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:3200;s:6:"height";i:1800;s:4:"file";s:32:"2019/03/deep-dive-into-vapor.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:32:"deep-dive-into-vapor-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:32:"deep-dive-into-vapor-300x169.jpg";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:32:"deep-dive-into-vapor-768x432.jpg";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:33:"deep-dive-into-vapor-1024x576.jpg";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:32:"deep-dive-into-vapor-640x360.jpg";s:5:"width";i:640;s:6:"height";i:360;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/deep-dive-into-vapor-jpg-2/</link>
		<pubDate>Thu, 14 Mar 2019 00:52:39 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/deep-dive-into-vapor-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>505</wp:post_id>
		<wp:post_date><![CDATA[2019-03-13 20:52:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-14 00:52:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-13 20:52:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-14 00:52:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[deep-dive-into-vapor-jpg-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/deep-dive-into-vapor-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/deep-dive-into-vapor-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:3200;s:6:"height";i:1800;s:4:"file";s:34:"2019/03/deep-dive-into-vapor-1.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"deep-dive-into-vapor-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:34:"deep-dive-into-vapor-1-300x169.jpg";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:34:"deep-dive-into-vapor-1-768x432.jpg";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:35:"deep-dive-into-vapor-1-1024x576.jpg";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:34:"deep-dive-into-vapor-1-640x360.jpg";s:5:"width";i:640;s:6:"height";i:360;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[macos_xcode_switch_target]]></title>
		<link>https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/macos_xcode_switch_target/</link>
		<pubDate>Thu, 14 Mar 2019 13:38:28 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/macos_xcode_switch_target.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>514</wp:post_id>
		<wp:post_date><![CDATA[2019-03-14 09:38:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-14 13:38:28]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-14 09:38:28]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-14 13:38:28]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[macos_xcode_switch_target]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>506</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/macos_xcode_switch_target.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/macos_xcode_switch_target.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:440;s:6:"height";i:154;s:4:"file";s:37:"2019/03/macos_xcode_switch_target.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:37:"macos_xcode_switch_target-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:37:"macos_xcode_switch_target-300x105.jpg";s:5:"width";i:300;s:6:"height";i:105;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[macos_xcode_run]]></title>
		<link>https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/macos_xcode_run/</link>
		<pubDate>Thu, 14 Mar 2019 13:38:40 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/macos_xcode_run.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>515</wp:post_id>
		<wp:post_date><![CDATA[2019-03-14 09:38:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-14 13:38:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-14 09:38:40]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-14 13:38:40]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[macos_xcode_run]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>506</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/macos_xcode_run.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/macos_xcode_run.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:440;s:6:"height";i:154;s:4:"file";s:27:"2019/03/macos_xcode_run.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"macos_xcode_run-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:27:"macos_xcode_run-300x105.jpg";s:5:"width";i:300;s:6:"height";i:105;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image]]></title>
		<link>https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/image/</link>
		<pubDate>Thu, 14 Mar 2019 21:58:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/image.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>517</wp:post_id>
		<wp:post_date><![CDATA[2019-03-14 17:58:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-14 21:58:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-14 17:58:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-14 21:58:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>506</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/image.jpeg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/image.jpeg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:240;s:6:"height";i:136;s:4:"file";s:18:"2019/03/image.jpeg";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:18:"image-150x136.jpeg";s:5:"width";i:150;s:6:"height";i:136;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[javier-allegue-barros-761133-unsplash]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-backend-review/javier-allegue-barros-761133-unsplash/</link>
		<pubDate>Mon, 18 Mar 2019 18:13:57 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/javier-allegue-barros-761133-unsplash.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>547</wp:post_id>
		<wp:post_date><![CDATA[2019-03-18 14:13:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-18 18:13:57]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-18 14:13:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-18 18:13:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[javier-allegue-barros-761133-unsplash]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>544</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/javier-allegue-barros-761133-unsplash.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/javier-allegue-barros-761133-unsplash.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:5434;s:6:"height";i:3623;s:4:"file";s:49:"2019/03/javier-allegue-barros-761133-unsplash.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:49:"javier-allegue-barros-761133-unsplash-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:49:"javier-allegue-barros-761133-unsplash-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:49:"javier-allegue-barros-761133-unsplash-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:50:"javier-allegue-barros-761133-unsplash-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:49:"javier-allegue-barros-761133-unsplash-640x427.jpg";s:5:"width";i:640;s:6:"height";i:427;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[vapor-swift-backend-review]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-backend-review/vapor-swift-backend-review-2/</link>
		<pubDate>Mon, 18 Mar 2019 18:14:07 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/vapor-swift-backend-review.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>548</wp:post_id>
		<wp:post_date><![CDATA[2019-03-18 14:14:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-18 18:14:07]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-18 14:14:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-18 18:14:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[vapor-swift-backend-review-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>544</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/vapor-swift-backend-review.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/vapor-swift-backend-review.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:3200;s:6:"height";i:1800;s:4:"file";s:38:"2019/03/vapor-swift-backend-review.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:38:"vapor-swift-backend-review-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:38:"vapor-swift-backend-review-300x169.jpg";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:38:"vapor-swift-backend-review-768x432.jpg";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:39:"vapor-swift-backend-review-1024x576.jpg";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:38:"vapor-swift-backend-review-640x360.jpg";s:5:"width";i:640;s:6:"height";i:360;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Where do you go for the right back end choice?]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-backend-review/jared-murray-974070-unsplash/</link>
		<pubDate>Mon, 18 Mar 2019 19:39:41 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/jared-murray-974070-unsplash.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>551</wp:post_id>
		<wp:post_date><![CDATA[2019-03-18 15:39:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-18 19:39:41]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-22 11:05:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-22 15:05:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[jared-murray-974070-unsplash]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>544</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/jared-murray-974070-unsplash-e1552938232840.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/jared-murray-974070-unsplash-e1552938232840.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:960;s:4:"file";s:55:"2019/03/jared-murray-974070-unsplash-e1552938232840.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:55:"jared-murray-974070-unsplash-e1552938209336-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:55:"jared-murray-974070-unsplash-e1552938209336-300x150.jpg";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:55:"jared-murray-974070-unsplash-e1552938209336-768x384.jpg";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:56:"jared-murray-974070-unsplash-e1552938209336-1024x512.jpg";s:5:"width";i:1024;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:55:"jared-murray-974070-unsplash-e1552938209336-640x320.jpg";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:14:{s:9:"full-orig";a:3:{s:5:"width";i:2242;s:6:"height";i:2802;s:4:"file";s:32:"jared-murray-974070-unsplash.jpg";}s:14:"thumbnail-orig";a:4:{s:4:"file";s:40:"jared-murray-974070-unsplash-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:11:"medium-orig";a:4:{s:4:"file";s:40:"jared-murray-974070-unsplash-240x300.jpg";s:5:"width";i:240;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:17:"medium_large-orig";a:4:{s:4:"file";s:40:"jared-murray-974070-unsplash-768x960.jpg";s:5:"width";i:768;s:6:"height";i:960;s:9:"mime-type";s:10:"image/jpeg";}s:10:"large-orig";a:4:{s:4:"file";s:41:"jared-murray-974070-unsplash-819x1024.jpg";s:5:"width";i:819;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:14:"arke-blog-orig";a:4:{s:4:"file";s:40:"jared-murray-974070-unsplash-640x800.jpg";s:5:"width";i:640;s:6:"height";i:800;s:9:"mime-type";s:10:"image/jpeg";}s:18:"full-1552938209336";a:3:{s:5:"width";i:2802;s:6:"height";i:2242;s:4:"file";s:47:"jared-murray-974070-unsplash-e1552938110534.jpg";}s:23:"thumbnail-1552938209336";a:4:{s:4:"file";s:55:"jared-murray-974070-unsplash-e1552938110534-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"medium-1552938209336";a:4:{s:4:"file";s:55:"jared-murray-974070-unsplash-e1552938110534-300x240.jpg";s:5:"width";i:300;s:6:"height";i:240;s:9:"mime-type";s:10:"image/jpeg";}s:26:"medium_large-1552938209336";a:4:{s:4:"file";s:55:"jared-murray-974070-unsplash-e1552938110534-768x615.jpg";s:5:"width";i:768;s:6:"height";i:615;s:9:"mime-type";s:10:"image/jpeg";}s:19:"large-1552938209336";a:4:{s:4:"file";s:56:"jared-murray-974070-unsplash-e1552938110534-1024x819.jpg";s:5:"width";i:1024;s:6:"height";i:819;s:9:"mime-type";s:10:"image/jpeg";}s:23:"arke-blog-1552938209336";a:4:{s:4:"file";s:55:"jared-murray-974070-unsplash-e1552938110534-640x512.jpg";s:5:"width";i:640;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:18:"full-1552938225650";a:3:{s:5:"width";i:2801;s:6:"height";i:1400;s:4:"file";s:47:"jared-murray-974070-unsplash-e1552938209336.jpg";}s:18:"full-1552938232840";a:3:{s:5:"width";i:1920;s:6:"height";i:960;s:4:"file";s:47:"jared-murray-974070-unsplash-e1552938225650.jpg";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Where do you go for the right back end choice?]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[logo-centered-inverse]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-backend-review/logo-centered-inverse/</link>
		<pubDate>Mon, 18 Mar 2019 19:50:41 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/logo-centered-inverse.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>553</wp:post_id>
		<wp:post_date><![CDATA[2019-03-18 15:50:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-18 19:50:41]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-18 15:50:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-18 19:50:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[logo-centered-inverse]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>544</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/logo-centered-inverse.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/logo-centered-inverse.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:400;s:6:"height";i:400;s:4:"file";s:33:"2019/03/logo-centered-inverse.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:33:"logo-centered-inverse-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:33:"logo-centered-inverse-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[vapor wordmark]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-backend-review/wordmark-horizontal/</link>
		<pubDate>Mon, 18 Mar 2019 19:50:52 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/wordmark-horizontal.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>554</wp:post_id>
		<wp:post_date><![CDATA[2019-03-18 15:50:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-18 19:50:52]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-18 15:51:14]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-18 19:51:14]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[wordmark-horizontal]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>544</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/wordmark-horizontal.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/wordmark-horizontal.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1200;s:6:"height";i:318;s:4:"file";s:31:"2019/03/wordmark-horizontal.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"wordmark-horizontal-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:30:"wordmark-horizontal-300x80.png";s:5:"width";i:300;s:6:"height";i:80;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:31:"wordmark-horizontal-768x204.png";s:5:"width";i:768;s:6:"height";i:204;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:32:"wordmark-horizontal-1024x271.png";s:5:"width";i:1024;s:6:"height";i:271;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:31:"wordmark-horizontal-640x170.png";s:5:"width";i:640;s:6:"height";i:170;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[getting-things-setup]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-backend-review/getting-things-setup/</link>
		<pubDate>Mon, 18 Mar 2019 19:59:20 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/getting-things-setup.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>555</wp:post_id>
		<wp:post_date><![CDATA[2019-03-18 15:59:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-18 19:59:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-18 15:59:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-18 19:59:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[getting-things-setup]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>544</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/getting-things-setup.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/getting-things-setup.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:960;s:4:"file";s:32:"2019/03/getting-things-setup.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:32:"getting-things-setup-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:32:"getting-things-setup-300x150.jpg";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:32:"getting-things-setup-768x384.jpg";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:33:"getting-things-setup-1024x512.jpg";s:5:"width";i:1024;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:32:"getting-things-setup-640x320.jpg";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[tools-of-the-trade]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-backend-review/developer-tools/</link>
		<pubDate>Mon, 18 Mar 2019 20:38:59 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/developer-tools.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>558</wp:post_id>
		<wp:post_date><![CDATA[2019-03-18 16:38:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-18 20:38:59]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-18 16:39:11]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-18 20:39:11]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[developer-tools]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>544</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/developer-tools.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/developer-tools.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:960;s:4:"file";s:27:"2019/03/developer-tools.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"developer-tools-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:27:"developer-tools-300x150.jpg";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:27:"developer-tools-768x384.jpg";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:28:"developer-tools-1024x512.jpg";s:5:"width";i:1024;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:27:"developer-tools-640x320.jpg";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Dealing with the Future]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-backend-review/futures-and-promises/</link>
		<pubDate>Mon, 18 Mar 2019 20:41:59 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/futures-and-promises.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>559</wp:post_id>
		<wp:post_date><![CDATA[2019-03-18 16:41:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-18 20:41:59]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-18 16:43:01]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-18 20:43:01]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[futures-and-promises]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>544</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/futures-and-promises.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/futures-and-promises.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:960;s:4:"file";s:32:"2019/03/futures-and-promises.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:32:"futures-and-promises-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:32:"futures-and-promises-300x150.jpg";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:32:"futures-and-promises-768x384.jpg";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:33:"futures-and-promises-1024x512.jpg";s:5:"width";i:1024;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:32:"futures-and-promises-640x320.jpg";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[swift-vapor-choice]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-backend-review/swift-vapor-choice/</link>
		<pubDate>Mon, 18 Mar 2019 20:44:52 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/swift-vapor-choice.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>560</wp:post_id>
		<wp:post_date><![CDATA[2019-03-18 16:44:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-18 20:44:52]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-18 16:44:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-18 20:44:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[swift-vapor-choice]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>544</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/swift-vapor-choice.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/swift-vapor-choice.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:960;s:4:"file";s:30:"2019/03/swift-vapor-choice.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"swift-vapor-choice-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:30:"swift-vapor-choice-300x150.jpg";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:30:"swift-vapor-choice-768x384.jpg";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:31:"swift-vapor-choice-1024x512.jpg";s:5:"width";i:1024;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:30:"swift-vapor-choice-640x320.jpg";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[profile2]]></title>
		<link>https://learningswift.brightdigit.com/profile2/</link>
		<pubDate>Wed, 12 Jun 2019 21:03:41 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/06/profile2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>592</wp:post_id>
		<wp:post_date><![CDATA[2019-06-12 17:03:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-06-12 21:03:41]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-06-12 17:05:30]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-06-12 21:05:30]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[profile2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/06/profile2-e1560373524246.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/06/profile2-e1560373524246.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:775;s:6:"height";i:775;s:4:"file";s:35:"2019/06/profile2-e1560373524246.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:35:"profile2-e1560373524246-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:35:"profile2-e1560373524246-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:35:"profile2-e1560373524246-768x768.jpg";s:5:"width";i:768;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:35:"profile2-e1560373524246-640x640.jpg";s:5:"width";i:640;s:6:"height";i:640;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"5.6";s:6:"credit";s:0:"";s:6:"camera";s:11:"NIKON D300S";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1543643656";s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"27";s:3:"iso";s:3:"800";s:13:"shutter_speed";s:4:"0.01";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:9:"full-orig";a:3:{s:5:"width";i:775;s:6:"height";i:969;s:4:"file";s:12:"profile2.jpg";}s:14:"thumbnail-orig";a:4:{s:4:"file";s:20:"profile2-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:11:"medium-orig";a:4:{s:4:"file";s:20:"profile2-240x300.jpg";s:5:"width";i:240;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:17:"medium_large-orig";a:4:{s:4:"file";s:20:"profile2-768x960.jpg";s:5:"width";i:768;s:6:"height";i:960;s:9:"mime-type";s:10:"image/jpeg";}s:14:"arke-blog-orig";a:4:{s:4:"file";s:20:"profile2-640x800.jpg";s:5:"width";i:640;s:6:"height";i:800;s:9:"mime-type";s:10:"image/jpeg";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/photo-by-kaitlyn-baker/</link>
		<pubDate>Tue, 18 Jun 2019 19:35:39 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/06vzjdyl5jvxy.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>614</wp:post_id>
		<wp:post_date><![CDATA[2019-06-18 15:35:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-06-18 19:35:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-06-18 15:36:23]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-06-18 19:36:23]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo-by-kaitlyn-baker]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/06/vzjdyl5jvxy.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/06/vzjdyl5jvxy.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Find the right Mac for developers]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:1067;s:4:"file";s:23:"2019/06/vzjdyl5jvxy.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"vzjdyl5jvxy-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"vzjdyl5jvxy-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:23:"vzjdyl5jvxy-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:24:"vzjdyl5jvxy-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:23:"vzjdyl5jvxy-640x427.jpg";s:5:"width";i:640;s:6:"height";i:427;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[img_0039]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-video-swift-toronto-2019/img_0039/</link>
		<pubDate>Wed, 11 Sep 2019 14:11:52 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/img_0039.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>646</wp:post_id>
		<wp:post_date><![CDATA[2019-09-11 10:11:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-11 14:11:52]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-11 10:26:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-11 14:26:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0039]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>644</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/img_0039.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/img_0039.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:260;s:6:"height";i:146;s:4:"file";s:20:"2019/09/img_0039.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0039-150x146.jpg";s:5:"width";i:150;s:6:"height";i:146;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[img_0040]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-video-swift-toronto-2019/img_0040/</link>
		<pubDate>Wed, 11 Sep 2019 14:21:32 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/img_0040.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>647</wp:post_id>
		<wp:post_date><![CDATA[2019-09-11 10:21:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-11 14:21:32]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-11 10:26:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-11 14:26:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0040]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>644</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/img_0040.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/img_0040.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:1067;s:4:"file";s:20:"2019/09/img_0040.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0040-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"img_0040-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"img_0040-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"img_0040-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:20:"img_0040-640x427.jpg";s:5:"width";i:640;s:6:"height";i:427;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:21:"Canon EOS 5D Mark III";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1565902602";s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"35";s:3:"iso";s:4:"2500";s:13:"shutter_speed";s:5:"0.008";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[img_0041]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-video-swift-toronto-2019/img_0041/</link>
		<pubDate>Wed, 11 Sep 2019 14:30:32 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/img_0041.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>648</wp:post_id>
		<wp:post_date><![CDATA[2019-09-11 10:30:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-11 14:30:32]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-11 10:31:30]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-11 14:31:30]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0041]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>644</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/img_0041.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/img_0041.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:1067;s:4:"file";s:20:"2019/09/img_0041.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"img_0041-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"img_0041-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"img_0041-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"img_0041-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:20:"img_0041-640x427.jpg";s:5:"width";i:640;s:6:"height";i:427;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:21:"Canon EOS 5D Mark III";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1565904173";s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"70";s:3:"iso";s:4:"2500";s:13:"shutter_speed";s:8:"0.003125";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[iPhone-with-Watch-App-2]]></title>
		<link>https://learningswift.brightdigit.com/?attachment_id=658</link>
		<pubDate>Tue, 17 Sep 2019 17:52:20 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/iPhone-with-Watch-App-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>658</wp:post_id>
		<wp:post_date><![CDATA[2019-09-17 13:52:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-17 17:52:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-17 13:52:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-17 17:52:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[iphone-with-watch-app-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>655</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/iPhone-with-Watch-App-2.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/iPhone-with-Watch-App-2.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:352;s:6:"height";i:499;s:4:"file";s:35:"2019/09/iPhone-with-Watch-App-2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:35:"iPhone-with-Watch-App-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:35:"iPhone-with-Watch-App-2-212x300.png";s:5:"width";i:212;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[iPhone-with-Watch-App-3]]></title>
		<link>https://learningswift.brightdigit.com/?attachment_id=659</link>
		<pubDate>Tue, 17 Sep 2019 17:55:11 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/iPhone-with-Watch-App-3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>659</wp:post_id>
		<wp:post_date><![CDATA[2019-09-17 13:55:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-17 17:55:11]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-17 13:55:11]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-17 17:55:11]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[iphone-with-watch-app-3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>655</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/iPhone-with-Watch-App-3.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/iPhone-with-Watch-App-3.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:384;s:6:"height";i:528;s:4:"file";s:35:"2019/09/iPhone-with-Watch-App-3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:35:"iPhone-with-Watch-App-3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:35:"iPhone-with-Watch-App-3-218x300.png";s:5:"width";i:218;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Apple-Watch-App-5]]></title>
		<link>https://learningswift.brightdigit.com/?attachment_id=660</link>
		<pubDate>Tue, 17 Sep 2019 17:56:06 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Apple-Watch-App-5.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>660</wp:post_id>
		<wp:post_date><![CDATA[2019-09-17 13:56:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-17 17:56:06]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-17 13:56:06]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-17 17:56:06]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[apple-watch-app-5]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>655</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Apple-Watch-App-5.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/Apple-Watch-App-5.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:384;s:6:"height";i:528;s:4:"file";s:29:"2019/09/Apple-Watch-App-5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"Apple-Watch-App-5-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:29:"Apple-Watch-App-5-218x300.png";s:5:"width";i:218;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Apple-Watch-App-6]]></title>
		<link>https://learningswift.brightdigit.com/?attachment_id=661</link>
		<pubDate>Tue, 17 Sep 2019 17:56:41 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Apple-Watch-App-6.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>661</wp:post_id>
		<wp:post_date><![CDATA[2019-09-17 13:56:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-17 17:56:41]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-17 13:56:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-17 17:56:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[apple-watch-app-6]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>655</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Apple-Watch-App-6.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/Apple-Watch-App-6.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:384;s:6:"height";i:528;s:4:"file";s:29:"2019/09/Apple-Watch-App-6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"Apple-Watch-App-6-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:29:"Apple-Watch-App-6-218x300.png";s:5:"width";i:218;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[iPhone-with-Watch-App-4]]></title>
		<link>https://learningswift.brightdigit.com/?attachment_id=662</link>
		<pubDate>Tue, 17 Sep 2019 17:56:45 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/iPhone-with-Watch-App-4.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>662</wp:post_id>
		<wp:post_date><![CDATA[2019-09-17 13:56:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-17 17:56:45]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-17 13:56:45]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-17 17:56:45]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[iphone-with-watch-app-4]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>655</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/iPhone-with-Watch-App-4.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/iPhone-with-Watch-App-4.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:384;s:6:"height";i:528;s:4:"file";s:35:"2019/09/iPhone-with-Watch-App-4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:35:"iPhone-with-Watch-App-4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:35:"iPhone-with-Watch-App-4-218x300.png";s:5:"width";i:218;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[iPhone-with-Watch-App-5]]></title>
		<link>https://learningswift.brightdigit.com/?attachment_id=663</link>
		<pubDate>Tue, 17 Sep 2019 17:57:38 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/iPhone-with-Watch-App-5.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>663</wp:post_id>
		<wp:post_date><![CDATA[2019-09-17 13:57:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-17 17:57:38]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-17 13:57:38]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-17 17:57:38]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[iphone-with-watch-app-5]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>655</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/iPhone-with-Watch-App-5.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/iPhone-with-Watch-App-5.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:384;s:6:"height";i:528;s:4:"file";s:35:"2019/09/iPhone-with-Watch-App-5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:35:"iPhone-with-Watch-App-5-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:35:"iPhone-with-Watch-App-5-218x300.png";s:5:"width";i:218;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Screen-Shot-2019-09-17-at-2.25.49-PM]]></title>
		<link>https://learningswift.brightdigit.com/independent-watch-app-healthkit-permissions/screen-shot-2019-09-17-at-2-25-49-pm/</link>
		<pubDate>Tue, 17 Sep 2019 18:28:27 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-17-at-2.25.49-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>667</wp:post_id>
		<wp:post_date><![CDATA[2019-09-17 14:28:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-17 18:28:27]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-17 14:28:27]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-17 18:28:27]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2019-09-17-at-2-25-49-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>665</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-17-at-2.25.49-PM.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/Screen-Shot-2019-09-17-at-2.25.49-PM.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:524;s:6:"height";i:250;s:4:"file";s:48:"2019/09/Screen-Shot-2019-09-17-at-2.25.49-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-17-at-2.25.49-PM-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-17-at-2.25.49-PM-300x143.png";s:5:"width";i:300;s:6:"height";i:143;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Screen-Shot-2019-09-17-at-2.27.48-PM]]></title>
		<link>https://learningswift.brightdigit.com/independent-watch-app-healthkit-permissions/screen-shot-2019-09-17-at-2-27-48-pm/</link>
		<pubDate>Tue, 17 Sep 2019 18:28:42 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-17-at-2.27.48-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>668</wp:post_id>
		<wp:post_date><![CDATA[2019-09-17 14:28:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-17 18:28:42]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-17 14:28:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-17 18:28:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2019-09-17-at-2-27-48-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>665</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-17-at-2.27.48-PM.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/Screen-Shot-2019-09-17-at-2.27.48-PM.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:668;s:6:"height";i:258;s:4:"file";s:48:"2019/09/Screen-Shot-2019-09-17-at-2.27.48-PM.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-17-at-2.27.48-PM-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-17-at-2.27.48-PM-300x116.png";s:5:"width";i:300;s:6:"height";i:116;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-17-at-2.27.48-PM-640x247.png";s:5:"width";i:640;s:6:"height";i:247;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Screen-Shot-2019-09-17-at-2.32.21-PM]]></title>
		<link>https://learningswift.brightdigit.com/independent-watch-app-healthkit-permissions/screen-shot-2019-09-17-at-2-32-21-pm/</link>
		<pubDate>Tue, 17 Sep 2019 18:32:56 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-17-at-2.32.21-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>669</wp:post_id>
		<wp:post_date><![CDATA[2019-09-17 14:32:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-17 18:32:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-17 14:32:56]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-17 18:32:56]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2019-09-17-at-2-32-21-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>665</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-17-at-2.32.21-PM.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/Screen-Shot-2019-09-17-at-2.32.21-PM.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1402;s:6:"height";i:712;s:4:"file";s:48:"2019/09/Screen-Shot-2019-09-17-at-2.32.21-PM.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-17-at-2.32.21-PM-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-17-at-2.32.21-PM-300x152.png";s:5:"width";i:300;s:6:"height";i:152;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-17-at-2.32.21-PM-768x390.png";s:5:"width";i:768;s:6:"height";i:390;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:49:"Screen-Shot-2019-09-17-at-2.32.21-PM-1024x520.png";s:5:"width";i:1024;s:6:"height";i:520;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-17-at-2.32.21-PM-640x325.png";s:5:"width";i:640;s:6:"height";i:325;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/independent-watch-app-healthkit-permissions/simulator-screen-shot-apple-watch-series-5-40mm-2019-09-17-at-14-45-17/</link>
		<pubDate>Tue, 17 Sep 2019 18:45:37 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Simulator-Screen-Shot-Apple-Watch-Series-5-40mm-2019-09-17-at-14.45.17.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>672</wp:post_id>
		<wp:post_date><![CDATA[2019-09-17 14:45:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-17 18:45:37]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-17 14:45:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-17 18:45:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[simulator-screen-shot-apple-watch-series-5-40mm-2019-09-17-at-14-45-17]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>665</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Simulator-Screen-Shot-Apple-Watch-Series-5-40mm-2019-09-17-at-14.45.17.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/Simulator-Screen-Shot-Apple-Watch-Series-5-40mm-2019-09-17-at-14.45.17.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:324;s:6:"height";i:394;s:4:"file";s:82:"2019/09/Simulator-Screen-Shot-Apple-Watch-Series-5-40mm-2019-09-17-at-14.45.17.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:82:"Simulator-Screen-Shot-Apple-Watch-Series-5-40mm-2019-09-17-at-14.45.17-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:82:"Simulator-Screen-Shot-Apple-Watch-Series-5-40mm-2019-09-17-at-14.45.17-247x300.png";s:5:"width";i:247;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Asking for HealthKit permissions on the Apple Watch]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[iPhreaks-thumb]]></title>
		<link>https://learningswift.brightdigit.com/iphreaks-podcast-guest/iphreaks-thumb/</link>
		<pubDate>Wed, 08 Jan 2020 20:04:05 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=133</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date><![CDATA[2020-01-08 15:04:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-01-08 20:04:05]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-01-08 15:04:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-01-08 20:04:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[iphreaks-thumb]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>132</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/06/iPhreaks-thumb.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018/06/iPhreaks-thumb.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[iPhreaks podcast logo]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1194]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_325]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018-06-20 21:22:53]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018-06-20]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018-06-21]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Empower Apps Logo]]></title>
		<link>https://learningswift.brightdigit.com/empowerapps-show-upgrading-your-skills-in-2020-with-paul-hudson/img_0009-2-2-2-2/</link>
		<pubDate>Fri, 07 Feb 2020 05:17:56 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?attachment_id=631</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>631</wp:post_id>
		<wp:post_date><![CDATA[2020-02-07 00:17:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-02-07 05:17:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-07 00:17:56]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-07 05:17:56]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0009-2-2-2-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>810</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/08/img_0009.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/08/img_0009.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_media_source_1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1541]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[mpd_meta_id_2586]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-02-24 10:11:16]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-08-15]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020-02-03]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/image-8-23-19-1-19-pm-2-jpeg/</link>
		<pubDate>Mon, 23 Sep 2019 19:20:07 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Image-8-23-19-1-19-PM-2.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>673</wp:post_id>
		<wp:post_date><![CDATA[2019-09-23 15:20:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-23 19:20:07]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-23 15:20:09]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-23 19:20:09]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-8-23-19-1-19-pm-2-jpeg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Image-8-23-19-1-19-PM-2.jpeg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/Image-8-23-19-1-19-PM-2.jpeg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:768;s:4:"file";s:36:"2019/09/Image-8-23-19-1-19-PM-2.jpeg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:36:"Image-8-23-19-1-19-PM-2-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:36:"Image-8-23-19-1-19-PM-2-300x225.jpeg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:36:"Image-8-23-19-1-19-PM-2-768x576.jpeg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:37:"Image-8-23-19-1-19-PM-2-1024x768.jpeg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:36:"Image-8-23-19-1-19-PM-2-640x480.jpeg";s:5:"width";i:640;s:6:"height";i:480;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/image-8-23-19-1-19-pm-jpeg/</link>
		<pubDate>Mon, 23 Sep 2019 19:20:11 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Image-8-23-19-1-19-PM.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>674</wp:post_id>
		<wp:post_date><![CDATA[2019-09-23 15:20:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-23 19:20:11]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-23 17:03:49]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-23 21:03:49]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-8-23-19-1-19-pm-jpeg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Image-8-23-19-1-19-PM.jpeg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/Image-8-23-19-1-19-PM.jpeg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:768;s:4:"file";s:34:"2019/09/Image-8-23-19-1-19-PM.jpeg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"Image-8-23-19-1-19-PM-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:34:"Image-8-23-19-1-19-PM-300x225.jpeg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:34:"Image-8-23-19-1-19-PM-768x576.jpeg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:35:"Image-8-23-19-1-19-PM-1024x768.jpeg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:34:"Image-8-23-19-1-19-PM-640x480.jpeg";s:5:"width";i:640;s:6:"height";i:480;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/image-8-23-19-1-19-pm-1-jpeg/</link>
		<pubDate>Mon, 23 Sep 2019 19:20:18 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Image-8-23-19-1-19-PM-1.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>675</wp:post_id>
		<wp:post_date><![CDATA[2019-09-23 15:20:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-23 19:20:18]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-23 15:20:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-23 19:20:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-8-23-19-1-19-pm-1-jpeg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Image-8-23-19-1-19-PM-1.jpeg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/Image-8-23-19-1-19-PM-1.jpeg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:768;s:4:"file";s:36:"2019/09/Image-8-23-19-1-19-PM-1.jpeg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:36:"Image-8-23-19-1-19-PM-1-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:36:"Image-8-23-19-1-19-PM-1-300x225.jpeg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:36:"Image-8-23-19-1-19-PM-1-768x576.jpeg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:37:"Image-8-23-19-1-19-PM-1-1024x768.jpeg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:36:"Image-8-23-19-1-19-PM-1-640x480.jpeg";s:5:"width";i:640;s:6:"height";i:480;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/draggedimage-png/</link>
		<pubDate>Mon, 23 Sep 2019 19:20:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/DraggedImage.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>676</wp:post_id>
		<wp:post_date><![CDATA[2019-09-23 15:20:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-23 19:20:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-23 15:20:23]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-23 19:20:23]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[draggedimage-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/DraggedImage.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/DraggedImage.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:749;s:6:"height";i:481;s:4:"file";s:24:"2019/09/DraggedImage.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:24:"DraggedImage-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:24:"DraggedImage-300x193.png";s:5:"width";i:300;s:6:"height";i:193;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:24:"DraggedImage-640x411.png";s:5:"width";i:640;s:6:"height";i:411;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/image-8-23-19-1-19-pm-3-jpeg/</link>
		<pubDate>Mon, 23 Sep 2019 19:20:24 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Image-8-23-19-1-19-PM-3.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>677</wp:post_id>
		<wp:post_date><![CDATA[2019-09-23 15:20:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-23 19:20:24]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-23 15:20:27]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-23 19:20:27]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-8-23-19-1-19-pm-3-jpeg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Image-8-23-19-1-19-PM-3.jpeg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/Image-8-23-19-1-19-PM-3.jpeg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:768;s:4:"file";s:36:"2019/09/Image-8-23-19-1-19-PM-3.jpeg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:36:"Image-8-23-19-1-19-PM-3-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:36:"Image-8-23-19-1-19-PM-3-300x225.jpeg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:36:"Image-8-23-19-1-19-PM-3-768x576.jpeg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:37:"Image-8-23-19-1-19-PM-3-1024x768.jpeg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:36:"Image-8-23-19-1-19-PM-3-640x480.jpeg";s:5:"width";i:640;s:6:"height";i:480;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/parallelconcurrency-001/</link>
		<pubDate>Mon, 23 Sep 2019 21:04:06 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/ParallelConcurrency.001.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>681</wp:post_id>
		<wp:post_date><![CDATA[2019-09-23 17:04:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-23 21:04:06]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-23 17:04:44]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-23 21:04:44]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[parallelconcurrency-001]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/ParallelConcurrency.001.jpeg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/ParallelConcurrency.001.jpeg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:768;s:4:"file";s:36:"2019/09/ParallelConcurrency.001.jpeg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:36:"ParallelConcurrency.001-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:36:"ParallelConcurrency.001-300x225.jpeg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:36:"ParallelConcurrency.001-768x576.jpeg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:37:"ParallelConcurrency.001-1024x768.jpeg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:36:"ParallelConcurrency.001-640x480.jpeg";s:5:"width";i:640;s:6:"height";i:480;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[The Difference Between Concurrency and Paralellism]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/the-multi-threaded-asynchronous-parallel-world-of-swift-360idev-copy/</link>
		<pubDate>Mon, 23 Sep 2019 21:05:09 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>682</wp:post_id>
		<wp:post_date><![CDATA[2019-09-23 17:05:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-23 21:05:09]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-23 17:05:09]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-23 21:05:09]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[the-multi-threaded-asynchronous-parallel-world-of-swift-360idev-copy]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.gif]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.gif]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:480;s:6:"height";i:360;s:4:"file";s:80:"2019/09/The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:80:"The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/gif";}s:6:"medium";a:4:{s:4:"file";s:80:"The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy-300x225.gif";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Graph of CPU Speed from 1970 to 2020]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/graphofcpuspeed-001/</link>
		<pubDate>Mon, 23 Sep 2019 21:08:33 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/GraphOfCPUSpeed.001.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Graph of CPU Speed from 1970 to 2020]]></excerpt:encoded>
		<wp:post_id>685</wp:post_id>
		<wp:post_date><![CDATA[2019-09-23 17:08:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-23 21:08:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-23 17:16:08]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-23 21:16:08]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[graphofcpuspeed-001]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/GraphOfCPUSpeed.001-e1569326758632.jpeg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/GraphOfCPUSpeed.001-e1569326758632.jpeg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:819;s:6:"height";i:558;s:4:"file";s:47:"2019/09/GraphOfCPUSpeed.001-e1569326758632.jpeg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:47:"GraphOfCPUSpeed.001-e1569326758632-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:47:"GraphOfCPUSpeed.001-e1569326758632-300x204.jpeg";s:5:"width";i:300;s:6:"height";i:204;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:47:"GraphOfCPUSpeed.001-e1569326758632-768x523.jpeg";s:5:"width";i:768;s:6:"height";i:523;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:48:"GraphOfCPUSpeed.001-e1569273003542-1024x657.jpeg";s:5:"width";i:1024;s:6:"height";i:657;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:47:"GraphOfCPUSpeed.001-e1569326758632-640x436.jpeg";s:5:"width";i:640;s:6:"height";i:436;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Graph of CPU Speed from 1970 to 2020]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:18:{s:9:"full-orig";a:3:{s:5:"width";i:1024;s:6:"height";i:768;s:4:"file";s:24:"GraphOfCPUSpeed.001.jpeg";}s:14:"thumbnail-orig";a:4:{s:4:"file";s:32:"GraphOfCPUSpeed.001-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:11:"medium-orig";a:4:{s:4:"file";s:32:"GraphOfCPUSpeed.001-300x225.jpeg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:17:"medium_large-orig";a:4:{s:4:"file";s:32:"GraphOfCPUSpeed.001-768x576.jpeg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:10:"large-orig";a:4:{s:4:"file";s:33:"GraphOfCPUSpeed.001-1024x768.jpeg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"arke-blog-orig";a:4:{s:4:"file";s:32:"GraphOfCPUSpeed.001-640x480.jpeg";s:5:"width";i:640;s:6:"height";i:480;s:9:"mime-type";s:10:"image/jpeg";}s:18:"full-1569273080894";a:3:{s:5:"width";i:1024;s:6:"height";i:657;s:4:"file";s:39:"GraphOfCPUSpeed.001-e1569273003542.jpeg";}s:23:"thumbnail-1569273080894";a:4:{s:4:"file";s:47:"GraphOfCPUSpeed.001-e1569273003542-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"medium-1569273080894";a:4:{s:4:"file";s:47:"GraphOfCPUSpeed.001-e1569273003542-300x192.jpeg";s:5:"width";i:300;s:6:"height";i:192;s:9:"mime-type";s:10:"image/jpeg";}s:26:"medium_large-1569273080894";a:4:{s:4:"file";s:47:"GraphOfCPUSpeed.001-e1569273003542-768x493.jpeg";s:5:"width";i:768;s:6:"height";i:493;s:9:"mime-type";s:10:"image/jpeg";}s:19:"large-1569273080894";a:4:{s:4:"file";s:48:"GraphOfCPUSpeed.001-e1569273003542-1024x657.jpeg";s:5:"width";i:1024;s:6:"height";i:657;s:9:"mime-type";s:10:"image/jpeg";}s:23:"arke-blog-1569273080894";a:4:{s:4:"file";s:47:"GraphOfCPUSpeed.001-e1569273003542-640x411.jpeg";s:5:"width";i:640;s:6:"height";i:411;s:9:"mime-type";s:10:"image/jpeg";}s:18:"full-1569326758632";a:3:{s:5:"width";i:819;s:6:"height";i:558;s:4:"file";s:39:"GraphOfCPUSpeed.001-e1569273080894.jpeg";}s:23:"thumbnail-1569326758632";a:4:{s:4:"file";s:47:"GraphOfCPUSpeed.001-e1569273080894-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"medium-1569326758632";a:4:{s:4:"file";s:47:"GraphOfCPUSpeed.001-e1569273080894-300x204.jpeg";s:5:"width";i:300;s:6:"height";i:204;s:9:"mime-type";s:10:"image/jpeg";}s:26:"medium_large-1569326758632";a:4:{s:4:"file";s:47:"GraphOfCPUSpeed.001-e1569273080894-768x523.jpeg";s:5:"width";i:768;s:6:"height";i:523;s:9:"mime-type";s:10:"image/jpeg";}s:19:"large-1569326758632";a:4:{s:4:"file";s:48:"GraphOfCPUSpeed.001-e1569273003542-1024x657.jpeg";s:5:"width";i:1024;s:6:"height";i:657;s:9:"mime-type";s:10:"image/jpeg";}s:23:"arke-blog-1569326758632";a:4:{s:4:"file";s:47:"GraphOfCPUSpeed.001-e1569273080894-640x436.jpeg";s:5:"width";i:640;s:6:"height";i:436;s:9:"mime-type";s:10:"image/jpeg";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Screen-Shot-2019-09-23-at-5.30.47-PM]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/screen-shot-2019-09-23-at-5-30-47-pm/</link>
		<pubDate>Mon, 23 Sep 2019 21:31:37 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-23-at-5.30.47-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>688</wp:post_id>
		<wp:post_date><![CDATA[2019-09-23 17:31:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-23 21:31:37]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-23 17:31:37]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-23 21:31:37]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2019-09-23-at-5-30-47-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-23-at-5.30.47-PM.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/Screen-Shot-2019-09-23-at-5.30.47-PM.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1704;s:6:"height";i:1104;s:4:"file";s:48:"2019/09/Screen-Shot-2019-09-23-at-5.30.47-PM.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-23-at-5.30.47-PM-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-23-at-5.30.47-PM-300x194.png";s:5:"width";i:300;s:6:"height";i:194;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-23-at-5.30.47-PM-768x498.png";s:5:"width";i:768;s:6:"height";i:498;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:49:"Screen-Shot-2019-09-23-at-5.30.47-PM-1024x663.png";s:5:"width";i:1024;s:6:"height";i:663;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-23-at-5.30.47-PM-640x415.png";s:5:"width";i:640;s:6:"height";i:415;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_failed]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[GraphOfCPUSpeed.001-e1569273003542-1024x657]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/graphofcpuspeed-001-e1569273003542-1024x657/</link>
		<pubDate>Tue, 24 Sep 2019 12:07:40 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/GraphOfCPUSpeed.001-e1569273003542-1024x657.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>691</wp:post_id>
		<wp:post_date><![CDATA[2019-09-24 08:07:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-24 12:07:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-24 08:07:40]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-24 12:07:40]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[graphofcpuspeed-001-e1569273003542-1024x657]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/GraphOfCPUSpeed.001-e1569273003542-1024x657.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/GraphOfCPUSpeed.001-e1569273003542-1024x657.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:800;s:6:"height";i:520;s:4:"file";s:55:"2019/09/GraphOfCPUSpeed.001-e1569273003542-1024x657.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:55:"GraphOfCPUSpeed.001-e1569273003542-1024x657-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:55:"GraphOfCPUSpeed.001-e1569273003542-1024x657-300x195.jpg";s:5:"width";i:300;s:6:"height";i:195;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:55:"GraphOfCPUSpeed.001-e1569273003542-1024x657-768x499.jpg";s:5:"width";i:768;s:6:"height";i:499;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:55:"GraphOfCPUSpeed.001-e1569273003542-1024x657-640x416.jpg";s:5:"width";i:640;s:6:"height";i:416;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Scheduling Multiple Operations with Concurrency and Parallelism]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/the-multi-threaded-asynchronous-parallel-world-of-swift-360idev-copy-001/</link>
		<pubDate>Tue, 24 Sep 2019 15:35:25 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.001.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>707</wp:post_id>
		<wp:post_date><![CDATA[2019-09-24 11:35:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-24 15:35:25]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-24 11:36:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-24 15:36:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[the-multi-threaded-asynchronous-parallel-world-of-swift-360idev-copy-001]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.001.jpeg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.001.jpeg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:768;s:4:"file";s:85:"2019/09/The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.001.jpeg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:85:"The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.001-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:85:"The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.001-300x225.jpeg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:85:"The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.001-768x576.jpeg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:86:"The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.001-1024x768.jpeg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:85:"The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.001-640x480.jpeg";s:5:"width";i:640;s:6:"height";i:480;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Scheduling Multiple Operations with Concurrency and Parallelism]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Screen-Shot-2019-09-24-at-2.04.19-PM]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/screen-shot-2019-09-24-at-2-04-19-pm/</link>
		<pubDate>Tue, 24 Sep 2019 18:04:54 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-24-at-2.04.19-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>719</wp:post_id>
		<wp:post_date><![CDATA[2019-09-24 14:04:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-24 18:04:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-24 14:04:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-24 18:04:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2019-09-24-at-2-04-19-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-24-at-2.04.19-PM.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/Screen-Shot-2019-09-24-at-2.04.19-PM.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1394;s:6:"height";i:954;s:4:"file";s:48:"2019/09/Screen-Shot-2019-09-24-at-2.04.19-PM.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-24-at-2.04.19-PM-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-24-at-2.04.19-PM-300x205.png";s:5:"width";i:300;s:6:"height";i:205;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-24-at-2.04.19-PM-768x526.png";s:5:"width";i:768;s:6:"height";i:526;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:49:"Screen-Shot-2019-09-24-at-2.04.19-PM-1024x701.png";s:5:"width";i:1024;s:6:"height";i:701;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:48:"Screen-Shot-2019-09-24-at-2.04.19-PM-640x438.png";s:5:"width";i:640;s:6:"height";i:438;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_failed]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[493303884_5c71fbcefb_o]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/493303884_5c71fbcefb_o/</link>
		<pubDate>Tue, 24 Sep 2019 18:08:47 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/493303884_5c71fbcefb_o.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>720</wp:post_id>
		<wp:post_date><![CDATA[2019-09-24 14:08:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-24 18:08:47]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-24 14:08:47]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-24 18:08:47]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[493303884_5c71fbcefb_o]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/493303884_5c71fbcefb_o.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/493303884_5c71fbcefb_o.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:480;s:6:"height";i:448;s:4:"file";s:34:"2019/09/493303884_5c71fbcefb_o.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"493303884_5c71fbcefb_o-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:34:"493303884_5c71fbcefb_o-300x280.jpg";s:5:"width";i:300;s:6:"height";i:280;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Photo by Michał Parzuchowski]]></title>
		<link>https://learningswift.brightdigit.com/photo-by-michal-parzuchowski/</link>
		<pubDate>Tue, 24 Sep 2019 18:09:55 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/091o77vgbvkxq.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>721</wp:post_id>
		<wp:post_date><![CDATA[2019-09-24 14:09:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-24 18:09:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-24 14:09:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-24 18:09:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo-by-michal-parzuchowski]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/1o77vgbvkxq.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/1o77vgbvkxq.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:1067;s:4:"file";s:23:"2019/09/1o77vgbvkxq.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"1o77vgbvkxq-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"1o77vgbvkxq-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:23:"1o77vgbvkxq-768x512.jpg";s:5:"width";i:768;s:6:"height";i:512;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:24:"1o77vgbvkxq-1024x683.jpg";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:23:"1o77vgbvkxq-640x427.jpg";s:5:"width";i:640;s:6:"height";i:427;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Photo by delfi de la Rua]]></title>
		<link>https://learningswift.brightdigit.com/photo-by-delfi-de-la-rua/</link>
		<pubDate>Tue, 24 Sep 2019 18:18:17 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09zolfyh_ygpw.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>728</wp:post_id>
		<wp:post_date><![CDATA[2019-09-24 14:18:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-24 18:18:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-24 14:18:17]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-24 18:18:17]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo-by-delfi-de-la-rua]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/zolfyh_ygpw-e1569349209279.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/zolfyh_ygpw-e1569349209279.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:800;s:6:"height";i:400;s:4:"file";s:38:"2019/09/zolfyh_ygpw-e1569349209279.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:38:"zolfyh_ygpw-e1569349209279-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:38:"zolfyh_ygpw-e1569349209279-300x150.jpg";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:38:"zolfyh_ygpw-e1569349209279-768x384.jpg";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:24:"zolfyh_ygpw-683x1024.jpg";s:5:"width";i:683;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:38:"zolfyh_ygpw-e1569349209279-640x320.jpg";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:12:{s:9:"full-orig";a:3:{s:5:"width";i:800;s:6:"height";i:1200;s:4:"file";s:15:"zolfyh_ygpw.jpg";}s:14:"thumbnail-orig";a:4:{s:4:"file";s:23:"zolfyh_ygpw-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:11:"medium-orig";a:4:{s:4:"file";s:23:"zolfyh_ygpw-200x300.jpg";s:5:"width";i:200;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:17:"medium_large-orig";a:4:{s:4:"file";s:24:"zolfyh_ygpw-768x1152.jpg";s:5:"width";i:768;s:6:"height";i:1152;s:9:"mime-type";s:10:"image/jpeg";}s:10:"large-orig";a:4:{s:4:"file";s:24:"zolfyh_ygpw-683x1024.jpg";s:5:"width";i:683;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:14:"arke-blog-orig";a:4:{s:4:"file";s:23:"zolfyh_ygpw-640x960.jpg";s:5:"width";i:640;s:6:"height";i:960;s:9:"mime-type";s:10:"image/jpeg";}s:18:"full-1569349192555";a:3:{s:5:"width";i:801;s:6:"height";i:402;s:4:"file";s:30:"zolfyh_ygpw-e1569349130930.jpg";}s:18:"full-1569349209279";a:3:{s:5:"width";i:800;s:6:"height";i:401;s:4:"file";s:30:"zolfyh_ygpw-e1569349192555.jpg";}s:23:"thumbnail-1569349209279";a:4:{s:4:"file";s:38:"zolfyh_ygpw-e1569349130930-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:20:"medium-1569349209279";a:4:{s:4:"file";s:38:"zolfyh_ygpw-e1569349130930-300x151.jpg";s:5:"width";i:300;s:6:"height";i:151;s:9:"mime-type";s:10:"image/jpeg";}s:26:"medium_large-1569349209279";a:4:{s:4:"file";s:38:"zolfyh_ygpw-e1569349130930-768x385.jpg";s:5:"width";i:768;s:6:"height";i:385;s:9:"mime-type";s:10:"image/jpeg";}s:23:"arke-blog-1569349209279";a:4:{s:4:"file";s:38:"zolfyh_ygpw-e1569349130930-640x321.jpg";s:5:"width";i:640;s:6:"height";i:321;s:9:"mime-type";s:10:"image/jpeg";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Photo by Samuel Zeller]]></title>
		<link>https://learningswift.brightdigit.com/photo-by-samuel-zeller/</link>
		<pubDate>Tue, 24 Sep 2019 18:23:00 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09vk284nkoavu.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>731</wp:post_id>
		<wp:post_date><![CDATA[2019-09-24 14:23:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-24 18:23:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-24 14:23:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-24 18:23:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[photo-by-samuel-zeller]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/vk284nkoavu-e1569349443454.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/09/vk284nkoavu-e1569349443454.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:801;s:6:"height";i:801;s:4:"file";s:38:"2019/09/vk284nkoavu-e1569349443454.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:38:"vk284nkoavu-e1569349443454-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:38:"vk284nkoavu-e1569349443454-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:38:"vk284nkoavu-e1569349443454-768x768.jpg";s:5:"width";i:768;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:24:"vk284nkoavu-683x1024.jpg";s:5:"width";i:683;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:38:"vk284nkoavu-e1569349443454-640x640.jpg";s:5:"width";i:640;s:6:"height";i:640;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:9:"full-orig";a:3:{s:5:"width";i:800;s:6:"height";i:1200;s:4:"file";s:15:"vk284nkoavu.jpg";}s:14:"thumbnail-orig";a:4:{s:4:"file";s:23:"vk284nkoavu-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:11:"medium-orig";a:4:{s:4:"file";s:23:"vk284nkoavu-200x300.jpg";s:5:"width";i:200;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:17:"medium_large-orig";a:4:{s:4:"file";s:24:"vk284nkoavu-768x1152.jpg";s:5:"width";i:768;s:6:"height";i:1152;s:9:"mime-type";s:10:"image/jpeg";}s:10:"large-orig";a:4:{s:4:"file";s:24:"vk284nkoavu-683x1024.jpg";s:5:"width";i:683;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:14:"arke-blog-orig";a:4:{s:4:"file";s:23:"vk284nkoavu-640x960.jpg";s:5:"width";i:640;s:6:"height";i:960;s:9:"mime-type";s:10:"image/jpeg";}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/?attachment_id=774</link>
		<pubDate>Sun, 05 Jan 2020 23:58:04 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/01/DraggedImage.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>774</wp:post_id>
		<wp:post_date><![CDATA[2020-01-05 18:58:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-01-05 23:58:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-01-05 18:58:06]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-01-05 23:58:06]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[draggedimage-png-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>775</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/01/DraggedImage.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/01/DraggedImage.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:976;s:6:"height";i:672;s:4:"file";s:24:"2020/01/DraggedImage.png";s:5:"sizes";a:4:{s:6:"medium";a:4:{s:4:"file";s:24:"DraggedImage-300x207.png";s:5:"width";i:300;s:6:"height";i:207;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:24:"DraggedImage-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:24:"DraggedImage-768x529.png";s:5:"width";i:768;s:6:"height";i:529;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:24:"DraggedImage-640x441.png";s:5:"width";i:640;s:6:"height";i:441;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/travisci-full-color-png/</link>
		<pubDate>Wed, 26 Feb 2020 23:08:08 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/TravisCI-Full-Color.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>824</wp:post_id>
		<wp:post_date><![CDATA[2020-02-26 18:08:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-02-26 23:08:08]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-26 18:08:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-26 23:08:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[travisci-full-color-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/TravisCI-Full-Color.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/02/TravisCI-Full-Color.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:642;s:6:"height";i:201;s:4:"file";s:31:"2020/02/TravisCI-Full-Color.png";s:5:"sizes";a:3:{s:6:"medium";a:4:{s:4:"file";s:30:"TravisCI-Full-Color-300x94.png";s:5:"width";i:300;s:6:"height";i:94;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:31:"TravisCI-Full-Color-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:31:"TravisCI-Full-Color-640x200.png";s:5:"width";i:640;s:6:"height";i:200;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/44036562-png/</link>
		<pubDate>Wed, 26 Feb 2020 23:08:11 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/44036562.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>825</wp:post_id>
		<wp:post_date><![CDATA[2020-02-26 18:08:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-02-26 23:08:11]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-26 18:08:12]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-26 23:08:12]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[44036562-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/44036562.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/02/44036562.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:200;s:6:"height";i:200;s:4:"file";s:20:"2020/02/44036562.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"44036562-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/travisci-full-color-png-2/</link>
		<pubDate>Fri, 28 Feb 2020 15:05:30 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/TravisCI-Full-Color-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>830</wp:post_id>
		<wp:post_date><![CDATA[2020-02-28 10:05:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-02-28 15:05:30]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-28 10:05:32]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-28 15:05:32]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[travisci-full-color-png-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/TravisCI-Full-Color-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/02/TravisCI-Full-Color-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:642;s:6:"height";i:201;s:4:"file";s:33:"2020/02/TravisCI-Full-Color-1.png";s:5:"sizes";a:3:{s:6:"medium";a:4:{s:4:"file";s:32:"TravisCI-Full-Color-1-300x94.png";s:5:"width";i:300;s:6:"height";i:94;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:33:"TravisCI-Full-Color-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:33:"TravisCI-Full-Color-1-640x200.png";s:5:"width";i:640;s:6:"height";i:200;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/44036562-png-2/</link>
		<pubDate>Fri, 28 Feb 2020 15:05:33 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/44036562-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>831</wp:post_id>
		<wp:post_date><![CDATA[2020-02-28 10:05:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-02-28 15:05:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-28 10:05:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-28 15:05:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[44036562-png-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/44036562-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/02/44036562-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:200;s:6:"height";i:200;s:4:"file";s:22:"2020/02/44036562-1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"44036562-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/medal-png/</link>
		<pubDate>Sat, 29 Feb 2020 21:00:18 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/medal.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>837</wp:post_id>
		<wp:post_date><![CDATA[2020-02-29 16:00:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-02-29 21:00:18]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-29 16:00:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-29 21:00:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[medal-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>842</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/medal.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/02/medal.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1938;s:6:"height";i:1750;s:4:"file";s:17:"2020/02/medal.png";s:5:"sizes";a:6:{s:6:"medium";a:4:{s:4:"file";s:17:"medal-300x271.png";s:5:"width";i:300;s:6:"height";i:271;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:18:"medal-1024x925.png";s:5:"width";i:1024;s:6:"height";i:925;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:17:"medal-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:17:"medal-768x693.png";s:5:"width";i:768;s:6:"height";i:693;s:9:"mime-type";s:9:"image/png";}s:9:"1536x1536";a:4:{s:4:"file";s:19:"medal-1536x1387.png";s:5:"width";i:1536;s:6:"height";i:1387;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:17:"medal-640x578.png";s:5:"width";i:640;s:6:"height";i:578;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_failed]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/7c4f41a-pink-png/</link>
		<pubDate>Sat, 29 Feb 2020 21:00:23 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/7c4f41a-pink.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>838</wp:post_id>
		<wp:post_date><![CDATA[2020-02-29 16:00:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-02-29 21:00:23]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-29 16:00:26]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-29 21:00:26]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[7c4f41a-pink-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>842</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/7c4f41a-pink.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/02/7c4f41a-pink.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1200;s:6:"height";i:1200;s:4:"file";s:24:"2020/02/7c4f41a-pink.png";s:5:"sizes";a:5:{s:6:"medium";a:4:{s:4:"file";s:24:"7c4f41a-pink-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:26:"7c4f41a-pink-1024x1024.png";s:5:"width";i:1024;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:24:"7c4f41a-pink-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:24:"7c4f41a-pink-768x768.png";s:5:"width";i:768;s:6:"height";i:768;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:24:"7c4f41a-pink-640x640.png";s:5:"width";i:640;s:6:"height";i:640;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/ubuntu_black-orange_hex-png/</link>
		<pubDate>Sat, 29 Feb 2020 21:00:27 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/ubuntu_black-orange_hex.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>839</wp:post_id>
		<wp:post_date><![CDATA[2020-02-29 16:00:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-02-29 21:00:27]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-29 16:00:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-29 21:00:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ubuntu_black-orange_hex-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>842</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/ubuntu_black-orange_hex.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/02/ubuntu_black-orange_hex.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:758;s:6:"height";i:171;s:4:"file";s:35:"2020/02/ubuntu_black-orange_hex.png";s:5:"sizes";a:3:{s:6:"medium";a:4:{s:4:"file";s:34:"ubuntu_black-orange_hex-300x68.png";s:5:"width";i:300;s:6:"height";i:68;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:35:"ubuntu_black-orange_hex-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:35:"ubuntu_black-orange_hex-640x144.png";s:5:"width";i:640;s:6:"height";i:144;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/44036562-png-3/</link>
		<pubDate>Sat, 29 Feb 2020 21:00:30 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/44036562-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>840</wp:post_id>
		<wp:post_date><![CDATA[2020-02-29 16:00:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-02-29 21:00:30]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-29 16:00:32]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-29 21:00:32]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[44036562-png-3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>842</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/44036562-2.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/02/44036562-2.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:200;s:6:"height";i:200;s:4:"file";s:22:"2020/02/44036562-2.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"44036562-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/travisci-full-color-png-3/</link>
		<pubDate>Sat, 29 Feb 2020 21:00:33 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/TravisCI-Full-Color-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>841</wp:post_id>
		<wp:post_date><![CDATA[2020-02-29 16:00:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-02-29 21:00:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-29 16:00:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-29 21:00:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[travisci-full-color-png-3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>842</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/TravisCI-Full-Color-2.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/02/TravisCI-Full-Color-2.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:642;s:6:"height";i:201;s:4:"file";s:33:"2020/02/TravisCI-Full-Color-2.png";s:5:"sizes";a:3:{s:6:"medium";a:4:{s:4:"file";s:32:"TravisCI-Full-Color-2-300x94.png";s:5:"width";i:300;s:6:"height";i:94;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:33:"TravisCI-Full-Color-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:33:"TravisCI-Full-Color-2-640x200.png";s:5:"width";i:640;s:6:"height";i:200;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[platforms-and-devices]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/platforms-and-devices/</link>
		<pubDate>Sun, 01 Mar 2020 22:28:19 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/03/platforms-and-devices.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>871</wp:post_id>
		<wp:post_date><![CDATA[2020-03-01 17:28:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-01 22:28:19]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-03-01 17:28:19]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-03-01 22:28:19]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[platforms-and-devices]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>842</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/03/platforms-and-devices.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/03/platforms-and-devices.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1864;s:6:"height";i:878;s:4:"file";s:33:"2020/03/platforms-and-devices.png";s:5:"sizes";a:6:{s:6:"medium";a:4:{s:4:"file";s:33:"platforms-and-devices-300x141.png";s:5:"width";i:300;s:6:"height";i:141;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:34:"platforms-and-devices-1024x482.png";s:5:"width";i:1024;s:6:"height";i:482;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:33:"platforms-and-devices-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:33:"platforms-and-devices-768x362.png";s:5:"width";i:768;s:6:"height";i:362;s:9:"mime-type";s:9:"image/png";}s:9:"1536x1536";a:4:{s:4:"file";s:34:"platforms-and-devices-1536x724.png";s:5:"width";i:1536;s:6:"height";i:724;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:33:"platforms-and-devices-640x301.png";s:5:"width";i:640;s:6:"height";i:301;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/swift-package-ci/</link>
		<pubDate>Sun, 01 Mar 2020 22:32:36 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/03/swift-package-ci.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>874</wp:post_id>
		<wp:post_date><![CDATA[2020-03-01 17:32:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-01 22:32:36]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-03-01 17:32:47]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-03-01 22:32:47]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[swift-package-ci]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>842</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/03/swift-package-ci.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/03/swift-package-ci.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:250;s:6:"height";i:268;s:4:"file";s:28:"2020/03/swift-package-ci.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"swift-package-ci-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[swift-package-ci]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[linux-test-swift]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/linux-test-swift/</link>
		<pubDate>Sun, 01 Mar 2020 22:36:18 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/03/linux-test-swift.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>875</wp:post_id>
		<wp:post_date><![CDATA[2020-03-01 17:36:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-01 22:36:18]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-03-01 17:36:18]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-03-01 22:36:18]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-test-swift]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>842</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/03/linux-test-swift.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/03/linux-test-swift.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1473;s:6:"height";i:728;s:4:"file";s:28:"2020/03/linux-test-swift.png";s:5:"sizes";a:5:{s:6:"medium";a:4:{s:4:"file";s:28:"linux-test-swift-300x148.png";s:5:"width";i:300;s:6:"height";i:148;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:29:"linux-test-swift-1024x506.png";s:5:"width";i:1024;s:6:"height";i:506;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:28:"linux-test-swift-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:28:"linux-test-swift-768x380.png";s:5:"width";i:768;s:6:"height";i:380;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:28:"linux-test-swift-640x316.png";s:5:"width";i:640;s:6:"height";i:316;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[book-2]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/book-2/</link>
		<pubDate>Sun, 01 Mar 2020 22:37:35 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/03/book-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>877</wp:post_id>
		<wp:post_date><![CDATA[2020-03-01 17:37:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-01 22:37:35]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-03-01 17:37:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-03-01 22:37:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[book-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>842</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/03/book-2.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/03/book-2.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:128;s:6:"height";i:128;s:4:"file";s:18:"2020/03/book-2.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/flatmap-double-optionals-functional-programming/untitled/</link>
		<pubDate>Tue, 07 Apr 2020 16:07:26 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/04/Untitled.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>941</wp:post_id>
		<wp:post_date><![CDATA[2020-04-07 12:07:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-04-07 16:07:26]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-04-07 13:42:32]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-04-07 17:42:32]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[untitled]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>929</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/04/Untitled.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/04/Untitled.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1080;s:4:"file";s:20:"2020/04/Untitled.png";s:5:"sizes";a:6:{s:6:"medium";a:4:{s:4:"file";s:20:"Untitled-300x169.png";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:21:"Untitled-1024x576.png";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:20:"Untitled-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:20:"Untitled-768x432.png";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:9:"image/png";}s:9:"1536x1536";a:4:{s:4:"file";s:21:"Untitled-1536x864.png";s:5:"width";i:1536;s:6:"height";i:864;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:20:"Untitled-640x360.png";s:5:"width";i:640;s:6:"height";i:360;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[flatten the optional curve]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_attempts]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[1000px-ARM_CPU_icon.svg_]]></title>
		<link>https://learningswift.brightdigit.com/swift-on-arm-supporting-arm-in-swift-package-ci/1000px-arm_cpu_icon-svg_/</link>
		<pubDate>Sat, 13 Jun 2020 21:43:39 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/06/1000px-ARM_CPU_icon.svg_.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>987</wp:post_id>
		<wp:post_date><![CDATA[2020-06-13 17:43:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-13 21:43:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-13 17:43:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-13 21:43:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[1000px-arm_cpu_icon-svg_]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>982</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/06/1000px-ARM_CPU_icon.svg_.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/1000px-ARM_CPU_icon.svg_.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1000;s:6:"height";i:1000;s:4:"file";s:36:"2020/06/1000px-ARM_CPU_icon.svg_.png";s:5:"sizes";a:4:{s:6:"medium";a:4:{s:4:"file";s:36:"1000px-ARM_CPU_icon.svg_-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:36:"1000px-ARM_CPU_icon.svg_-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:36:"1000px-ARM_CPU_icon.svg_-768x768.png";s:5:"width";i:768;s:6:"height";i:768;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:36:"1000px-ARM_CPU_icon.svg_-640x640.png";s:5:"width";i:640;s:6:"height";i:640;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[1000px-ARM_CPU_icon.svg_-1]]></title>
		<link>https://learningswift.brightdigit.com/swift-on-arm-supporting-arm-in-swift-package-ci/1000px-arm_cpu_icon-svg_-1/</link>
		<pubDate>Sat, 13 Jun 2020 21:43:44 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/06/1000px-ARM_CPU_icon.svg_-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>988</wp:post_id>
		<wp:post_date><![CDATA[2020-06-13 17:43:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-13 21:43:44]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-13 17:43:44]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-13 21:43:44]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[1000px-arm_cpu_icon-svg_-1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>982</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/06/1000px-ARM_CPU_icon.svg_-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/1000px-ARM_CPU_icon.svg_-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1000;s:6:"height";i:1000;s:4:"file";s:38:"2020/06/1000px-ARM_CPU_icon.svg_-1.png";s:5:"sizes";a:4:{s:6:"medium";a:4:{s:4:"file";s:38:"1000px-ARM_CPU_icon.svg_-1-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:38:"1000px-ARM_CPU_icon.svg_-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:38:"1000px-ARM_CPU_icon.svg_-1-768x768.png";s:5:"width";i:768;s:6:"height";i:768;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:38:"1000px-ARM_CPU_icon.svg_-1-640x640.png";s:5:"width";i:640;s:6:"height";i:640;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[500px-ARM_CPU_icon.svg_]]></title>
		<link>https://learningswift.brightdigit.com/swift-on-arm-supporting-arm-in-swift-package-ci/500px-arm_cpu_icon-svg_/</link>
		<pubDate>Sat, 13 Jun 2020 21:44:38 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/06/500px-ARM_CPU_icon.svg_.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>990</wp:post_id>
		<wp:post_date><![CDATA[2020-06-13 17:44:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-13 21:44:38]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-13 17:44:38]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-13 21:44:38]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[500px-arm_cpu_icon-svg_]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>982</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/06/500px-ARM_CPU_icon.svg_.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/500px-ARM_CPU_icon.svg_.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:500;s:6:"height";i:500;s:4:"file";s:35:"2020/06/500px-ARM_CPU_icon.svg_.png";s:5:"sizes";a:2:{s:6:"medium";a:4:{s:4:"file";s:35:"500px-ARM_CPU_icon.svg_-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:35:"500px-ARM_CPU_icon.svg_-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/?attachment_id=1002</link>
		<pubDate>Tue, 30 Jun 2020 18:25:48 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/06/Combine-ing-the-Old-with-the-New.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1002</wp:post_id>
		<wp:post_date><![CDATA[2020-06-30 14:25:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-30 18:25:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-30 14:25:50]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-30 18:25:50]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[combine-ing-the-old-with-the-new-gif]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1004</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/06/Combine-ing-the-Old-with-the-New.gif]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/Combine-ing-the-Old-with-the-New.gif]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:480;s:6:"height";i:270;s:4:"file";s:44:"2020/06/Combine-ing-the-Old-with-the-New.gif";s:5:"sizes";a:2:{s:6:"medium";a:4:{s:4:"file";s:44:"Combine-ing-the-Old-with-the-New-300x169.gif";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:9:"image/gif";}s:9:"thumbnail";a:4:{s:4:"file";s:44:"Combine-ing-the-Old-with-the-New-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/?attachment_id=1003</link>
		<pubDate>Tue, 30 Jun 2020 18:25:51 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/06/Simulator-Screen-Shot-iPhone-11-2020-06-27-at-11.41.11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1003</wp:post_id>
		<wp:post_date><![CDATA[2020-06-30 14:25:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-30 18:25:51]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-30 14:26:19]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-30 18:26:19]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[simulator-screen-shot-iphone-11-2020-06-27-at-11-41-11-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1004</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/06/Simulator-Screen-Shot-iPhone-11-2020-06-27-at-11.41.11.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/Simulator-Screen-Shot-iPhone-11-2020-06-27-at-11.41.11.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:828;s:6:"height";i:1792;s:4:"file";s:66:"2020/06/Simulator-Screen-Shot-iPhone-11-2020-06-27-at-11.41.11.png";s:5:"sizes";a:6:{s:6:"medium";a:4:{s:4:"file";s:66:"Simulator-Screen-Shot-iPhone-11-2020-06-27-at-11.41.11-139x300.png";s:5:"width";i:139;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:67:"Simulator-Screen-Shot-iPhone-11-2020-06-27-at-11.41.11-473x1024.png";s:5:"width";i:473;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:66:"Simulator-Screen-Shot-iPhone-11-2020-06-27-at-11.41.11-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:67:"Simulator-Screen-Shot-iPhone-11-2020-06-27-at-11.41.11-768x1662.png";s:5:"width";i:768;s:6:"height";i:1662;s:9:"mime-type";s:9:"image/png";}s:9:"1536x1536";a:4:{s:4:"file";s:67:"Simulator-Screen-Shot-iPhone-11-2020-06-27-at-11.41.11-710x1536.png";s:5:"width";i:710;s:6:"height";i:1536;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:67:"Simulator-Screen-Shot-iPhone-11-2020-06-27-at-11.41.11-640x1385.png";s:5:"width";i:640;s:6:"height";i:1385;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[CoreLocation-AppPreview]]></title>
		<link>https://learningswift.brightdigit.com/combine-corelocation-publishers-delegates/corelocation-apppreview/</link>
		<pubDate>Sun, 16 Aug 2020 15:31:31 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/CoreLocation-AppPreview.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1036</wp:post_id>
		<wp:post_date><![CDATA[2020-08-16 11:31:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-16 15:31:31]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-08-16 11:31:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-08-16 15:31:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[corelocation-apppreview]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1023</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/CoreLocation-AppPreview.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/08/CoreLocation-AppPreview.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:640;s:6:"height";i:266;s:4:"file";s:35:"2020/08/CoreLocation-AppPreview.jpg";s:5:"sizes";a:2:{s:6:"medium";a:4:{s:4:"file";s:35:"CoreLocation-AppPreview-300x125.jpg";s:5:"width";i:300;s:6:"height";i:125;s:9:"mime-type";s:10:"image/jpeg";}s:9:"thumbnail";a:4:{s:4:"file";s:35:"CoreLocation-AppPreview-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Combine-ing-the-Old-with-the-New-360iDev-August-2020.001]]></title>
		<link>https://learningswift.brightdigit.com/combine-corelocation-publishers-delegates/combine-ing-the-old-with-the-new-360idev-august-2020-001/</link>
		<pubDate>Sun, 16 Aug 2020 15:45:45 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/Combine-ing-the-Old-with-the-New-360iDev-August-2020.001.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1037</wp:post_id>
		<wp:post_date><![CDATA[2020-08-16 11:45:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-16 15:45:45]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-08-16 11:45:45]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-08-16 15:45:45]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[combine-ing-the-old-with-the-new-360idev-august-2020-001]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1023</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/Combine-ing-the-Old-with-the-New-360iDev-August-2020.001.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/08/Combine-ing-the-Old-with-the-New-360iDev-August-2020.001.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1400;s:6:"height";i:835;s:4:"file";s:68:"2020/08/Combine-ing-the-Old-with-the-New-360iDev-August-2020.001.png";s:5:"sizes";a:5:{s:6:"medium";a:4:{s:4:"file";s:68:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-300x179.png";s:5:"width";i:300;s:6:"height";i:179;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:69:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-1024x611.png";s:5:"width";i:1024;s:6:"height";i:611;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:68:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:68:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-768x458.png";s:5:"width";i:768;s:6:"height";i:458;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:68:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-640x382.png";s:5:"width";i:640;s:6:"height";i:382;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-1]]></title>
		<link>https://learningswift.brightdigit.com/combine-corelocation-publishers-delegates/combine-ing-the-old-with-the-new-360idev-august-2020-001-1/</link>
		<pubDate>Sun, 16 Aug 2020 15:52:07 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1038</wp:post_id>
		<wp:post_date><![CDATA[2020-08-16 11:52:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-16 15:52:07]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-08-16 11:52:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-08-16 15:52:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[combine-ing-the-old-with-the-new-360idev-august-2020-001-1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1023</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/08/Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1400;s:6:"height";i:835;s:4:"file";s:70:"2020/08/Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-1.png";s:5:"sizes";a:5:{s:6:"medium";a:4:{s:4:"file";s:70:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-1-300x179.png";s:5:"width";i:300;s:6:"height";i:179;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:71:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-1-1024x611.png";s:5:"width";i:1024;s:6:"height";i:611;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:70:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:70:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-1-768x458.png";s:5:"width";i:768;s:6:"height";i:458;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:70:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-1-640x382.png";s:5:"width";i:640;s:6:"height";i:382;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/combine-corelocation-publishers-delegates/combine-ing-the-old-with-the-new-360idev-august-2020-001-2/</link>
		<pubDate>Sun, 16 Aug 2020 15:59:29 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1040</wp:post_id>
		<wp:post_date><![CDATA[2020-08-16 11:59:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-16 15:59:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-08-16 15:16:02]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-08-16 19:16:02]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[combine-ing-the-old-with-the-new-360idev-august-2020-001-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1023</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-2.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/08/Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-2.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1400;s:6:"height";i:735;s:4:"file";s:70:"2020/08/Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-2.png";s:5:"sizes";a:5:{s:6:"medium";a:4:{s:4:"file";s:70:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-2-300x158.png";s:5:"width";i:300;s:6:"height";i:158;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:71:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-2-1024x538.png";s:5:"width";i:1024;s:6:"height";i:538;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:70:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:70:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-2-768x403.png";s:5:"width";i:768;s:6:"height";i:403;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:70:"Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-2-640x336.png";s:5:"width";i:640;s:6:"height";i:336;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[How to interface between the delegate and the ObservableObject]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/combine-corelocation-publishers-delegates/optimized/</link>
		<pubDate>Sun, 16 Aug 2020 16:51:18 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/optimized.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1044</wp:post_id>
		<wp:post_date><![CDATA[2020-08-16 12:51:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-16 16:51:18]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-08-16 15:13:32]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-08-16 19:13:32]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[optimized]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1023</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/optimized.gif]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/08/optimized.gif]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:640;s:6:"height";i:360;s:4:"file";s:21:"2020/08/optimized.gif";s:5:"sizes";a:2:{s:6:"medium";a:4:{s:4:"file";s:21:"optimized-300x169.gif";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:9:"image/gif";}s:9:"thumbnail";a:4:{s:4:"file";s:21:"optimized-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Creating CLAuthorizedStatus Publisher]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/combine-corelocation-receiving-handling-events/combine-ing-the-old-with-the-new-001/</link>
		<pubDate>Mon, 17 Aug 2020 01:13:15 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/Combine-ing-the-Old-with-the-New.001.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1062</wp:post_id>
		<wp:post_date><![CDATA[2020-08-16 21:13:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-17 01:13:15]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-08-16 21:13:36]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-08-17 01:13:36]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[combine-ing-the-old-with-the-new-001]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1022</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/Combine-ing-the-Old-with-the-New.001.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/08/Combine-ing-the-Old-with-the-New.001.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1412;s:6:"height";i:281;s:4:"file";s:48:"2020/08/Combine-ing-the-Old-with-the-New.001.png";s:5:"sizes";a:5:{s:6:"medium";a:4:{s:4:"file";s:47:"Combine-ing-the-Old-with-the-New.001-300x60.png";s:5:"width";i:300;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:49:"Combine-ing-the-Old-with-the-New.001-1024x204.png";s:5:"width";i:1024;s:6:"height";i:204;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:48:"Combine-ing-the-Old-with-the-New.001-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:48:"Combine-ing-the-Old-with-the-New.001-768x153.png";s:5:"width";i:768;s:6:"height";i:153;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:48:"Combine-ing-the-Old-with-the-New.001-640x127.png";s:5:"width";i:640;s:6:"height";i:127;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
		<wp:meta_value><![CDATA[Whether to use sink or assign]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[combine-harvester-merge]]></title>
		<link>https://learningswift.brightdigit.com/combine-corelocation-swiftui-delegates/combine-harvester-merge/</link>
		<pubDate>Thu, 27 Aug 2020 00:31:16 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/combine-harvester-merge.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1079</wp:post_id>
		<wp:post_date><![CDATA[2020-08-26 20:31:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-27 00:31:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-08-26 20:31:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-08-27 00:31:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[combine-harvester-merge]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1016</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/combine-harvester-merge.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/08/combine-harvester-merge.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:730;s:6:"height";i:717;s:4:"file";s:35:"2020/08/combine-harvester-merge.png";s:5:"sizes";a:3:{s:6:"medium";a:4:{s:4:"file";s:35:"combine-harvester-merge-300x295.png";s:5:"width";i:300;s:6:"height";i:295;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:35:"combine-harvester-merge-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:35:"combine-harvester-merge-640x629.png";s:5:"width";i:640;s:6:"height";i:629;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/swift-dependency-management-spm/draggedimage-1-png/</link>
		<pubDate>Fri, 30 Apr 2021 19:02:16 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/DraggedImage-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1127</wp:post_id>
		<wp:post_date><![CDATA[2021-04-30 15:02:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 19:02:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-04-30 15:02:28]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-30 19:02:28]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[draggedimage-1-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1129</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/DraggedImage-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/04/DraggedImage-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1890;s:6:"height";i:946;s:4:"file";s:26:"2021/04/DraggedImage-1.png";s:5:"sizes";a:6:{s:6:"medium";a:4:{s:4:"file";s:26:"DraggedImage-1-300x150.png";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:27:"DraggedImage-1-1024x513.png";s:5:"width";i:1024;s:6:"height";i:513;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:26:"DraggedImage-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:26:"DraggedImage-1-768x384.png";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:9:"image/png";}s:9:"1536x1536";a:4:{s:4:"file";s:27:"DraggedImage-1-1536x769.png";s:5:"width";i:1536;s:6:"height";i:769;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:26:"DraggedImage-1-640x320.png";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/swift-dependency-management-spm/draggedimage-png-3/</link>
		<pubDate>Fri, 30 Apr 2021 19:02:29 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/DraggedImage.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1128</wp:post_id>
		<wp:post_date><![CDATA[2021-04-30 15:02:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 19:02:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-04-30 15:02:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-30 19:02:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[draggedimage-png-3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1129</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/DraggedImage.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/04/DraggedImage.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2122;s:6:"height";i:2160;s:4:"file";s:24:"2021/04/DraggedImage.png";s:5:"sizes";a:7:{s:6:"medium";a:4:{s:4:"file";s:24:"DraggedImage-295x300.png";s:5:"width";i:295;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:26:"DraggedImage-1006x1024.png";s:5:"width";i:1006;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:24:"DraggedImage-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:24:"DraggedImage-768x782.png";s:5:"width";i:768;s:6:"height";i:782;s:9:"mime-type";s:9:"image/png";}s:9:"1536x1536";a:4:{s:4:"file";s:26:"DraggedImage-1509x1536.png";s:5:"width";i:1509;s:6:"height";i:1536;s:9:"mime-type";s:9:"image/png";}s:9:"2048x2048";a:4:{s:4:"file";s:26:"DraggedImage-2012x2048.png";s:5:"width";i:2012;s:6:"height";i:2048;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:24:"DraggedImage-640x651.png";s:5:"width";i:640;s:6:"height";i:651;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_failed]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-manifest-file/draggedimage-1-png-2/</link>
		<pubDate>Fri, 30 Apr 2021 19:14:48 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/DraggedImage-1-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1137</wp:post_id>
		<wp:post_date><![CDATA[2021-04-30 15:14:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 19:14:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-04-30 15:14:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-30 19:14:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[draggedimage-1-png-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/DraggedImage-1-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/04/DraggedImage-1-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1890;s:6:"height";i:946;s:4:"file";s:28:"2021/04/DraggedImage-1-1.png";s:5:"sizes";a:6:{s:6:"medium";a:4:{s:4:"file";s:28:"DraggedImage-1-1-300x150.png";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:29:"DraggedImage-1-1-1024x513.png";s:5:"width";i:1024;s:6:"height";i:513;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:28:"DraggedImage-1-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:28:"DraggedImage-1-1-768x384.png";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:9:"image/png";}s:9:"1536x1536";a:4:{s:4:"file";s:29:"DraggedImage-1-1-1536x769.png";s:5:"width";i:1536;s:6:"height";i:769;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:28:"DraggedImage-1-1-640x320.png";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-manifest-file/draggedimage-png-4/</link>
		<pubDate>Fri, 30 Apr 2021 19:15:00 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/DraggedImage-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1138</wp:post_id>
		<wp:post_date><![CDATA[2021-04-30 15:15:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 19:15:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-04-30 15:15:06]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-30 19:15:06]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[draggedimage-png-4]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/DraggedImage-2.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/04/DraggedImage-2.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2122;s:6:"height";i:2160;s:4:"file";s:26:"2021/04/DraggedImage-2.png";s:5:"sizes";a:7:{s:6:"medium";a:4:{s:4:"file";s:26:"DraggedImage-2-295x300.png";s:5:"width";i:295;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:28:"DraggedImage-2-1006x1024.png";s:5:"width";i:1006;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:26:"DraggedImage-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:26:"DraggedImage-2-768x782.png";s:5:"width";i:768;s:6:"height";i:782;s:9:"mime-type";s:9:"image/png";}s:9:"1536x1536";a:4:{s:4:"file";s:28:"DraggedImage-2-1509x1536.png";s:5:"width";i:1509;s:6:"height";i:1536;s:9:"mime-type";s:9:"image/png";}s:9:"2048x2048";a:4:{s:4:"file";s:28:"DraggedImage-2-2012x2048.png";s:5:"width";i:2012;s:6:"height";i:2048;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:26:"DraggedImage-2-640x651.png";s:5:"width";i:640;s:6:"height";i:651;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_failed]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[sandro-katalina-k1bO_VTiZSs-unsplash-14139]]></title>
		<link>https://learningswift.brightdigit.com/swift-dependency-management-spm/sandro-katalina-k1bo_vtizss-unsplash-14139/</link>
		<pubDate>Fri, 30 Apr 2021 20:37:20 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/sandro-katalina-k1bO_VTiZSs-unsplash-14139.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1144</wp:post_id>
		<wp:post_date><![CDATA[2021-04-30 16:37:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 20:37:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-04-30 16:37:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-30 20:37:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[sandro-katalina-k1bo_vtizss-unsplash-14139]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1129</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/sandro-katalina-k1bO_VTiZSs-unsplash-14139.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/04/sandro-katalina-k1bO_VTiZSs-unsplash-14139.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:583;s:4:"file";s:54:"2021/04/sandro-katalina-k1bO_VTiZSs-unsplash-14139.jpg";s:5:"sizes";a:6:{s:6:"medium";a:4:{s:4:"file";s:53:"sandro-katalina-k1bO_VTiZSs-unsplash-14139-300x91.jpg";s:5:"width";i:300;s:6:"height";i:91;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:55:"sandro-katalina-k1bO_VTiZSs-unsplash-14139-1024x311.jpg";s:5:"width";i:1024;s:6:"height";i:311;s:9:"mime-type";s:10:"image/jpeg";}s:9:"thumbnail";a:4:{s:4:"file";s:54:"sandro-katalina-k1bO_VTiZSs-unsplash-14139-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:54:"sandro-katalina-k1bO_VTiZSs-unsplash-14139-768x233.jpg";s:5:"width";i:768;s:6:"height";i:233;s:9:"mime-type";s:10:"image/jpeg";}s:9:"1536x1536";a:4:{s:4:"file";s:55:"sandro-katalina-k1bO_VTiZSs-unsplash-14139-1536x466.jpg";s:5:"width";i:1536;s:6:"height";i:466;s:9:"mime-type";s:10:"image/jpeg";}s:9:"arke-blog";a:4:{s:4:"file";s:54:"sandro-katalina-k1bO_VTiZSs-unsplash-14139-640x194.jpg";s:5:"width";i:640;s:6:"height";i:194;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[029-delivery-17051]]></title>
		<link>https://learningswift.brightdigit.com/swift-dependency-management-spm/029-delivery-17051/</link>
		<pubDate>Fri, 30 Apr 2021 20:39:52 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/029-delivery-17051.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1145</wp:post_id>
		<wp:post_date><![CDATA[2021-04-30 16:39:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 20:39:52]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-04-30 16:39:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-30 20:39:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[029-delivery-17051]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1129</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/029-delivery-17051.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/04/029-delivery-17051.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:256;s:6:"height";i:256;s:4:"file";s:30:"2021/04/029-delivery-17051.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"029-delivery-17051-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[030-puzzle-17054]]></title>
		<link>https://learningswift.brightdigit.com/swift-dependency-management-spm/030-puzzle-17054/</link>
		<pubDate>Fri, 30 Apr 2021 20:40:27 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/030-puzzle-17054.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1146</wp:post_id>
		<wp:post_date><![CDATA[2021-04-30 16:40:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 20:40:27]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-04-30 16:40:27]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-30 20:40:27]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[030-puzzle-17054]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1129</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/030-puzzle-17054.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/04/030-puzzle-17054.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:256;s:6:"height";i:256;s:4:"file";s:28:"2021/04/030-puzzle-17054.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"030-puzzle-17054-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[colored-14344]]></title>
		<link>https://learningswift.brightdigit.com/swift-dependency-management-spm/colored-14344/</link>
		<pubDate>Fri, 30 Apr 2021 20:41:57 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/colored-14344.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1148</wp:post_id>
		<wp:post_date><![CDATA[2021-04-30 16:41:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 20:41:57]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-04-30 16:41:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-30 20:41:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[colored-14344]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1129</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/colored-14344.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/04/colored-14344.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:512;s:6:"height";i:512;s:4:"file";s:25:"2021/04/colored-14344.png";s:5:"sizes";a:2:{s:6:"medium";a:4:{s:4:"file";s:25:"colored-14344-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:25:"colored-14344-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[pasted-image-small-14348]]></title>
		<link>https://learningswift.brightdigit.com/swift-dependency-management-spm/pasted-image-small-14348/</link>
		<pubDate>Fri, 30 Apr 2021 20:42:12 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/pasted-image-small-14348.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1149</wp:post_id>
		<wp:post_date><![CDATA[2021-04-30 16:42:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 20:42:12]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-04-30 16:42:12]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-30 20:42:12]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[pasted-image-small-14348]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1129</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/pasted-image-small-14348.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/04/pasted-image-small-14348.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:256;s:6:"height";i:249;s:4:"file";s:36:"2021/04/pasted-image-small-14348.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:36:"pasted-image-small-14348-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Xcode_Icon-small-15043]]></title>
		<link>https://learningswift.brightdigit.com/swift-dependency-management-spm/xcode_icon-small-15043/</link>
		<pubDate>Fri, 30 Apr 2021 20:44:40 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/Xcode_Icon-small-15043.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1151</wp:post_id>
		<wp:post_date><![CDATA[2021-04-30 16:44:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 20:44:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-04-30 16:44:40]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-30 20:44:40]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[xcode_icon-small-15043]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1129</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/Xcode_Icon-small-15043.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/04/Xcode_Icon-small-15043.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:256;s:6:"height";i:256;s:4:"file";s:34:"2021/04/Xcode_Icon-small-15043.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"Xcode_Icon-small-15043-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Untitled-17069]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-manifest-file/untitled-17069/</link>
		<pubDate>Sat, 01 May 2021 14:55:11 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Untitled-17069.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1153</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 10:55:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-01 14:55:11]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-01 10:55:11]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-01 14:55:11]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[untitled-17069]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Untitled-17069.gif]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/05/Untitled-17069.gif]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:956;s:6:"height";i:1186;s:4:"file";s:26:"2021/05/Untitled-17069.gif";s:5:"sizes";a:5:{s:6:"medium";a:4:{s:4:"file";s:26:"Untitled-17069-242x300.gif";s:5:"width";i:242;s:6:"height";i:300;s:9:"mime-type";s:9:"image/gif";}s:5:"large";a:4:{s:4:"file";s:27:"Untitled-17069-825x1024.gif";s:5:"width";i:825;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/gif";}s:9:"thumbnail";a:4:{s:4:"file";s:26:"Untitled-17069-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/gif";}s:12:"medium_large";a:4:{s:4:"file";s:26:"Untitled-17069-768x953.gif";s:5:"width";i:768;s:6:"height";i:953;s:9:"mime-type";s:9:"image/gif";}s:9:"arke-blog";a:4:{s:4:"file";s:26:"Untitled-17069-640x794.gif";s:5:"width";i:640;s:6:"height";i:794;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Untitled-17069-1]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-manifest-file/untitled-17069-1/</link>
		<pubDate>Sat, 01 May 2021 14:56:03 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Untitled-17069-1.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1154</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 10:56:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-01 14:56:03]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-01 10:56:03]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-01 14:56:03]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[untitled-17069-1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Untitled-17069-1.gif]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/05/Untitled-17069-1.gif]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:956;s:6:"height";i:1186;s:4:"file";s:28:"2021/05/Untitled-17069-1.gif";s:5:"sizes";a:5:{s:6:"medium";a:4:{s:4:"file";s:28:"Untitled-17069-1-242x300.gif";s:5:"width";i:242;s:6:"height";i:300;s:9:"mime-type";s:9:"image/gif";}s:5:"large";a:4:{s:4:"file";s:29:"Untitled-17069-1-825x1024.gif";s:5:"width";i:825;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/gif";}s:9:"thumbnail";a:4:{s:4:"file";s:28:"Untitled-17069-1-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/gif";}s:12:"medium_large";a:4:{s:4:"file";s:28:"Untitled-17069-1-768x953.gif";s:5:"width";i:768;s:6:"height";i:953;s:9:"mime-type";s:9:"image/gif";}s:9:"arke-blog";a:4:{s:4:"file";s:28:"Untitled-17069-1-640x794.gif";s:5:"width";i:640;s:6:"height";i:794;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Screen-Shot-2020-10-19-17067]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-manifest-file/screen-shot-2020-10-19-17067/</link>
		<pubDate>Sat, 01 May 2021 14:57:16 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Screen-Shot-2020-10-19-17067.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1155</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 10:57:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-01 14:57:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-01 10:57:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-01 14:57:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2020-10-19-17067]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Screen-Shot-2020-10-19-17067.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/05/Screen-Shot-2020-10-19-17067.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1318;s:6:"height";i:1342;s:4:"file";s:40:"2021/05/Screen-Shot-2020-10-19-17067.png";s:5:"sizes";a:5:{s:6:"medium";a:4:{s:4:"file";s:40:"Screen-Shot-2020-10-19-17067-295x300.png";s:5:"width";i:295;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:42:"Screen-Shot-2020-10-19-17067-1006x1024.png";s:5:"width";i:1006;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:40:"Screen-Shot-2020-10-19-17067-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:40:"Screen-Shot-2020-10-19-17067-768x782.png";s:5:"width";i:768;s:6:"height";i:782;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:40:"Screen-Shot-2020-10-19-17067-640x652.png";s:5:"width";i:640;s:6:"height";i:652;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_optimization_failed]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Screen-Shot-2020-11-02-at-5.23.03-PM-14359]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-manifest-file/screen-shot-2020-11-02-at-5-23-03-pm-14359/</link>
		<pubDate>Sat, 01 May 2021 14:58:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Screen-Shot-2020-11-02-at-5.23.03-PM-14359.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1157</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 10:58:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-01 14:58:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-01 10:58:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-01 14:58:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2020-11-02-at-5-23-03-pm-14359]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Screen-Shot-2020-11-02-at-5.23.03-PM-14359.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/05/Screen-Shot-2020-11-02-at-5.23.03-PM-14359.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:548;s:6:"height";i:706;s:4:"file";s:54:"2021/05/Screen-Shot-2020-11-02-at-5.23.03-PM-14359.png";s:5:"sizes";a:2:{s:6:"medium";a:4:{s:4:"file";s:54:"Screen-Shot-2020-11-02-at-5.23.03-PM-14359-233x300.png";s:5:"width";i:233;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:54:"Screen-Shot-2020-11-02-at-5.23.03-PM-14359-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Untitled-2]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-manifest-file/untitled-2/</link>
		<pubDate>Sat, 01 May 2021 19:23:04 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Untitled-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1160</wp:post_id>
		<wp:post_date><![CDATA[2021-05-01 15:23:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-01 19:23:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-01 15:23:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-01 19:23:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[untitled-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Untitled-2.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/05/Untitled-2.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:3772;s:6:"height";i:1886;s:4:"file";s:22:"2021/05/Untitled-2.png";s:5:"sizes";a:7:{s:6:"medium";a:4:{s:4:"file";s:22:"Untitled-2-300x150.png";s:5:"width";i:300;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:23:"Untitled-2-1024x512.png";s:5:"width";i:1024;s:6:"height";i:512;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:22:"Untitled-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:22:"Untitled-2-768x384.png";s:5:"width";i:768;s:6:"height";i:384;s:9:"mime-type";s:9:"image/png";}s:9:"1536x1536";a:4:{s:4:"file";s:23:"Untitled-2-1536x768.png";s:5:"width";i:1536;s:6:"height";i:768;s:9:"mime-type";s:9:"image/png";}s:9:"2048x2048";a:4:{s:4:"file";s:24:"Untitled-2-2048x1024.png";s:5:"width";i:2048;s:6:"height";i:1024;s:9:"mime-type";s:9:"image/png";}s:9:"arke-blog";a:4:{s:4:"file";s:22:"Untitled-2-640x320.png";s:5:"width";i:640;s:6:"height";i:320;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Sample Page]]></title>
		<link>https://learningswift.brightdigit.com/sample-page/</link>
		<pubDate>Thu, 04 Jan 2018 18:09:10 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[This is an example page. It's different from a blog post because it will stay in one place and will show up in your site navigation (in most themes). Most people start with an About page that introduces them to potential site visitors. It might say something like this:

<blockquote>Hi there! I'm a bike messenger by day, aspiring actor by night, and this is my website. I live in Los Angeles, have a great dog named Jack, and I like pi&#241;a coladas. (And gettin' caught in the rain.)</blockquote>

...or something like this:

<blockquote>The XYZ Doohickey Company was founded in 1971, and has been providing quality doohickeys to the public ever since. Located in Gotham City, XYZ employs over 2,000 people and does all kinds of awesome things for the Gotham community.</blockquote>

As a new WordPress user, you should go to <a href="https://learningswift.brightdigit.com/wp-admin/">your dashboard</a> to delete this page and create new pages for your content. Have fun!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date><![CDATA[2018-01-04 18:09:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-01-04 18:09:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-01-04 18:09:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-01-04 18:09:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sample-page]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Apple Watch and HealthKit]]></title>
		<link>https://learningswift.brightdigit.com/?p=17</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=17</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date><![CDATA[2018-05-22 00:00:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-05-22 00:00:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-05-22 00:00:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[arke]]></title>
		<link>https://learningswift.brightdigit.com/arke/</link>
		<pubDate>Fri, 25 May 2018 10:36:10 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/2018/05/25/arke/</guid>
		<description></description>
		<content:encoded><![CDATA[body .site-content .content-area article.post {

	margin-bottom: 3em;
	padding-bottom: 2em;
	border-bottom: solid 1px #CCC;
}]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date><![CDATA[2018-05-25 10:36:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-05-25 10:36:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-05-25 10:36:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-05-25 10:36:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[arke]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[custom_css]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title><![CDATA[WWDC 2018]]></title>
		<link>https://learningswift.brightdigit.com/?page_id=66</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?page_id=66</guid>
		<description></description>
		<content:encoded><![CDATA[With WWDC 2018 underway, here are some posts on what's new in Apple development whether it's iOS, macOS, watchOS, or Swift 4.2. Follow this page, to stay update to date with new posts and tutorials.
<ol>
 	<li><a href="https://learningswift.brightdigit.com/swift-4-2-random-changes-wwdc-2018/" target="_blank" rel="noopener">Swift 4.2 and "Random" Changes</a></li>
 	<li>...</li>
 	<li>...</li>
 	<li>...</li>
 	<li>...</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date><![CDATA[2018-06-05 18:25:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-06-05 18:25:28]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-06-05 18:25:28]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
		<wp:meta_value><![CDATA[WWDC 2018]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[WWDC 2018]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[31]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_is_cornerstone]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/100/</link>
		<pubDate>Fri, 08 Jun 2018 20:56:43 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/100/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date><![CDATA[2018-06-08 20:56:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-08 20:56:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-19 08:10:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-19 12:10:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[100]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="social"><![CDATA[Social]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx_menu_icon]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Twitter]]></title>
		<link>https://learningswift.brightdigit.com/twitter/</link>
		<pubDate>Fri, 08 Jun 2018 20:56:43 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/twitter/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>101</wp:post_id>
		<wp:post_date><![CDATA[2018-06-08 20:56:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-08 20:56:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-19 08:10:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-19 12:10:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[twitter]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="social"><![CDATA[Social]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[101]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[http://twitter.com/leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx_menu_icon]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[LinkedIn]]></title>
		<link>https://learningswift.brightdigit.com/linkedin/</link>
		<pubDate>Fri, 08 Jun 2018 20:56:43 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/linkedin/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date><![CDATA[2018-06-08 20:56:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-08 20:56:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-19 08:10:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-19 12:10:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[linkedin]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="social"><![CDATA[Social]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[102]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[http://linkedin.com/in/leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx_menu_icon]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[GitHub]]></title>
		<link>https://learningswift.brightdigit.com/github/</link>
		<pubDate>Fri, 08 Jun 2018 20:56:44 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/github/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date><![CDATA[2018-06-08 20:56:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-08 20:56:44]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-19 08:10:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-19 12:10:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[github]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="social"><![CDATA[Social]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[103]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://github.com/brightdigit]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx_menu_icon]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[BrightDigit]]></title>
		<link>https://learningswift.brightdigit.com/brightdigit/</link>
		<pubDate>Fri, 08 Jun 2018 20:56:44 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/brightdigit/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>104</wp:post_id>
		<wp:post_date><![CDATA[2018-06-08 20:56:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-08 20:56:44]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-19 08:10:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-19 12:10:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[brightdigit]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>7</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="social"><![CDATA[Social]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[104]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[http://brightdigit.com]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx_menu_icon]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Looking for a Speaker?]]></title>
		<link>https://learningswift.brightdigit.com/speaker/</link>
		<pubDate>Sat, 23 Jun 2018 18:14:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?page_id=139</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Are you looking for someone to <strong>speak on Apple or Swift development</strong>? Topics such as:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>Parallelism</strong> in Swift Development</li><li><strong><a rel="noreferrer noopener" aria-label="HealthKit and Building A Workout App with the Apple Watch (opens in a new tab)" href="https://learningswift.brightdigit.com/healthkit-getting-started/" target="_blank">HealthKit</a></strong><a rel="noreferrer noopener" aria-label="HealthKit and Building A Workout App with the Apple Watch (opens in a new tab)" href="https://learningswift.brightdigit.com/healthkit-getting-started/" target="_blank"> and Building A Workout App with the Apple Watch</a></li><li><a href="https://brightdigit.com/blog/2018/08/27/5-things-macos-mojave-developers/" target="_blank" rel="noreferrer noopener" aria-label="Modern macOS Development (opens in a new tab)">Modern </a><strong><a href="https://brightdigit.com/blog/2018/08/27/5-things-macos-mojave-developers/" target="_blank" rel="noreferrer noopener" aria-label="Modern macOS Development (opens in a new tab)">macOS</a></strong><a href="https://brightdigit.com/blog/2018/08/27/5-things-macos-mojave-developers/" target="_blank" rel="noreferrer noopener" aria-label="Modern macOS Development (opens in a new tab)"> Development</a></li><li>Advanced<strong> Storyboards, Size Classes, and Auto-Layout</strong></li></ul>
<!-- /wp:list -->

<!-- wp:core-embed/youtube {"url":"https://www.youtube.com/watch?v=_FDZBfeeJuU\u0026list=PLmpJxPaZbSnB_h1FlXwN7TdJ7UGzvEtsG","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=_FDZBfeeJuU&amp;list=PLmpJxPaZbSnB_h1FlXwN7TdJ7UGzvEtsG
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>I've spoken at various conferences and Cocoaheads groups and I would love to speak at your event.<br><a href="mailto:leo@brightdigit.com">Contact me</a> if you are interested.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date><![CDATA[2018-06-23 18:14:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-23 18:14:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-01-15 18:46:36]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-01-15 23:46:36]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[speaker]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
		<wp:meta_value><![CDATA[speaker]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[speaker]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[47]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[358]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-139]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/142/</link>
		<pubDate>Sat, 23 Jun 2018 18:14:53 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=142</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date><![CDATA[2018-06-23 18:14:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-23 18:14:53]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-19 08:10:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-19 12:10:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[142]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>6</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="social"><![CDATA[Social]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[139]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx_menu_icon]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Objective-C and Swift - Being Friendly]]></title>
		<link>https://learningswift.brightdigit.com/?p=249</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=249</guid>
		<description></description>
		<content:encoded><![CDATA[There are times where Objective-C is still necessary for Swift development. For instance, with one such app I've built in Swift, <a href="https://speculid.com/?utm_source=web&amp;utm_medium=blog-post&amp;utm_campaign=building-speculid" target="_blank" rel="noopener">Speculid</a>, I needed to bring Objective-C code in. With the introduction of C++ libraries in version 2.0, Objective-C became necessary. Luckily there are ways to make both Objective-C and Swift work together in a friendly fashion.

<!--more-->

<h2>Simplifying Installation with C++ Libraries</h2>

Speculid is a completely open source application built with the latest version of Xcode. It <a href="https://learningswift.brightdigit.com/app-icon-templates-graphics-xcode/" rel="noopener">automates the process of converting PNG and SVG files into complete Image Sets and App Icons.</a> In the first version, it required the installation of Inkscape and ImageMagick to facilitate the conversion of images from SVG or PNG to PDF or PNG. This became cumbersome both in the installation and usage.

With version 2.0, I wanted to make the process of installation and integration as easy as possible by removing any prerequisites steps and pre-existing dependencies. This meant packaging any required dependencies within the application package. In this case, we are using two C++ libraries, <a href="https://cairographics.org" target="_blank" rel="noopener"><em>Cairo</em></a> and <em><a href="https://wiki.gnome.org/Projects/LibRsvg" target="_blank" rel="noopener">libRSVG</a></em>. <em>Cairo</em> is the leading 2D library used throughout the open source community and <em>libRSVG </em>is used for reading SVG content. With these two libraries available, the challenge then became integrating them into the Swift code.

As of now, Swift has no way to directly interface with C++. Therefore, we need an intermediary and those intermediaries can either be code in C or Objective-C. While C has some simplicity to it, in this case, I went with Objective-C.

<h2>Bridging the Gap with Objective-C</h2>

Not only do I have experience with Objective-C, but Objective-C has a strong integration with the Apple ecosystem; despite the simplicity of C. While I am using Objective-C, I want to keep the bulk of the code in Swift.

Objective-C will only serve to interface with the C++ libraries as needed. Swift will interact with the user, manage jobs, etc... Objective-C will call the C++ libraries to build the actual graphics.

The Swift code will be completely unaware of the code actually used to read, manipulate, and write the resulting files.

Here is a brief rundown of the process:

<ul>
    <li><strong>Main</strong> - instantiate and run NSApplication</li>
    <li><strong>SpeculidApplication</strong> - looks for the <em>speculid</em> file and parses the file using <em>Codable</em>
<ul>
    <li>Finds the source graphic file (PNG or SVG)</li>
    <li>Parses the <a href="https://learningswift.brightdigit.com/asset-catalogs-image-sets-app-icons/" rel="noopener">Asset Catalog</a> file</li>
    <li>Parses the specifications in the <em>speculid</em> file</li>
    <li>Creates the specifications to be passed to the Objective-C code</li>
</ul>
</li>
    <li><strong>In Objective-C</strong>, use the specifications passed to call the C++ functions to write out the target graphic files (PNG or PDF)</li>
</ul>

<h2>Writing Swift-Friendly Code in Objective-C</h2>

There are a couple of ways to make our Objective-C and Swift code work well together. One is making sure the API uses compatible types.

<h3>Using Protocols to Facilitate Communication</h3>

Objective-C does not use Swift Structs. This leaves Classes as the only way to pass complex data between the Swift and the Objective-C framework. However, in order to keep the interfaces agnostic of each other, we can create Protocols in the Objective-C API which can signify to Swift what is required.

In our Objective-C framework, there are two methods available to Swift. The main method which calls the <em>Cairo</em> library and takes an <em>ImageSpecificationProtocol</em> and an <em>ImageHandle</em> object:

<pre><code>@interface CairoInterface : NSObject
+  (BOOL)exportImage:(id&lt;ImageHandle&gt;) sourceHandle withSpecification: (id&lt;ImageSpecificationProtocol&gt;) specification error: (NSError **) error;
@end
</code></pre>

<h4>Abstracting with Protocols</h4>

<em>ImageHandle</em> is another Protocol which the Objective-C framework will use containing the painting surface needed by Cairo. However, the Swift framework doesn’t need to know anything about Cairo. So how does Swift create an <em>ImageHandle</em> without having access to the Cairo surface reference? That's where the other method comes in.

We provide a builder/factory class in the Objective-C class which takes parameters available in Swift:

<pre><code>@interface ImageHandleBuilder : NSObject
@property (class, nonatomic, assign, readonly) ImageHandleBuilder*  shared;
- (id&lt;ImageHandle&gt;) imageHandleFromFile: (id&lt;ImageFileProtocol&gt;) file error:(NSError**) error;
@end
</code></pre>

The <em>ImageFileProtocol</em> protocol looks this:

<pre><code>@protocol ImageFileProtocol &lt;NSObject&gt;
@property (readonly) NSURL * _Nonnull url;
@property (readonly) ImageFileFormat format;
@end
</code></pre>

<h4>Protocols as Guidance</h4>

<em>ImageFileFormat </em>is an enum which is available in Swift and denotes a file type (PNG, PDF, or SVG). <em>NSURL</em> is automatically taken care of and will be a<em> URL</em> in Swift. As long as we implement <em>ImageFileProtocol </em>in Swift with these properties and it subclasses <em>NSObject</em>, we can easily pass that object to <em>ImageHandleBuilder</em>, we should be able to call the ImageHandleBuilder easily.

This goes the same for <em>ImageSpecificationProtocol </em>in<code>CairoInterace.exportImage:withSpecification:error:</code>. ImageSpecificationProtocol contains the information needed to know what and how the information is painted:

<pre><code>@protocol ImageSpecificationProtocol &lt;NSObject&gt;
@property (readonly) id&lt;ImageFileProtocol&gt; file;
@property (readonly) GeometryDimension geometry;
@property (readonly) BOOL removeAlphaChannel;
@property (readonly) id&lt;CairoColorProtocol&gt; backgroundColor;
@end
</code></pre>

Let’s look at each of these properties excluding ImageFileProtocol which we already talked about...

<ul>
    <li><em>removeAlphaChannel</em> which is a boolean value and that’s transferred between languages easily.</li>
    <li><em>geometry is</em> <em>GeometryDimension,</em> a C struct which contains information about which dimension to scale based on (width, height or scale) and the size. <code>
</code></li>
    <li><em>backgroundColor is</em> <em>CairoColorProtocol</em> which contains information about the background color in case you need an image without a transparency and your source image has a transparency (i.e. App Icons).</li>
</ul>

With the <em>CairoColorProtocol, </em>we could simply create a new class that contains the info that is needed. However, in Swift, we could minimize new code by simply using an Extension on an existing class.

<h3>Using Extensions to Add Functionality to Existing Classes</h3>

Here is how the protocol for <em>CairoColorProtocol </em>looks in Objective-C:

<pre><code>@protocol CairoColorProtocol &lt;NSObject&gt;
@property (readonly) double red;
@property (readonly) double green;
@property (readonly) double blue;
@end
</code></pre>

In this case rather <ins>then</ins> creating a new class to implement this in Swift we can extend existing class: NSColor. Here the<ins> simple</ins> implementation<ins> as a Swift extension</ins>:

<pre><code>extension NSColor: CairoColorProtocol {
  public var red: Double {
    return Double(redComponent)
  }

  public var green: Double {
    return Double(greenComponent)
  }

  public var blue: Double {
    return Double(blueComponent)
  }
}
</code></pre>

Now we can easily communicate between Swift and Objective-C. However, there are a couple of improvements we could make to our Objective-C code to make it even better for Swift.

<h2>Writing Swift friendly code in Objective-C</h2>

Since day one of Swift, working with Objective-C has been a requirement in some way. As the years have passed, Objective-C has added attributes to make it friendly to paradigms in Swift. There are two main ways we’ll look at: <strong>error handling</strong> and <strong>optionals</strong>.

<h3>Error Handling</h3>

Since the inclusion of try statements in Swift 2.0, we’ve replaced the need for NSError pointers as parameters in Swift. However, if you follow the standard NSError paradigms in Objective-C, Swift will see that method as though it could throw an Error. Here’s an example from the CairoInterface class:

<pre><code>@interface CairoInterface : NSObject
+  (BOOL)exportImage:(id&lt;ImageHandle&gt;) sourceHandle withSpecification: (id&lt;ImageSpecificationProtocol&gt;) specification error: (NSError **) error;
@end
</code></pre>

Swift will see this as:

<pre><code>class CairoInterface : NSObject {
    static func exportImage(_ sourceHandle: ImageHandle!, withSpecification specification: ImageSpecificationProtocol!) throws
}
</code></pre>

Two things are required for the translation to an error throwing function:

<ul>
    <li>the return is a boolean which indicates true for success, false for failure</li>
    <li>an NSError pointer parameter specifically named error</li>
</ul>

Let’s take a look again at the ImageHandleBuilder method:

<pre><code>@interface ImageHandleBuilder : NSObject
@property (class, nonatomic, assign, readonly) ImageHandleBuilder*  shared;
- (id&lt;ImageHandle&gt;) imageHandleFromFile: (id&lt;ImageFileProtocol&gt;) file error:(NSError**) error;
@end
</code></pre>

The difference is that it returns an actual value possibly. Otherwise, we still have an NSError pointer parameter named error.

<pre><code>class ImageHandleBuilder : NSObject {
    func imageHandleFromFile(_ file: ImageFileProtocol!) throws -&gt; ImageHandle!
}
</code></pre>

By following this standard, we’ve made error handling much cleaner and easier between languages. However, we still have annoying implicit optionals. Luckily there’s a way to fix that as well.

<h3>Optionals and Objective-C</h3>

One of the first features of Swift was the idea of Optionals. Optionals remove the ambiguity of pointers used by Objective-C. Unfortunately, for each of these pointers in Objective-C, Swift sees an implicitly unwrapped optional. You can read more about<a href="https://learningswift.brightdigit.com/understanding-optionals-in-swift/" rel="noopener"> optionals and implicitly unwrapped optionals here.</a> Luckily, there are Objective-C attributes which can help clarify optionals better.

Objective-C has two attributes to signify to Swift whether a parameter, property, or return value is optional or not: <code>_Nonnull</code> and <code>_Nullable</code>. Let’s look again at <em>ImageHandleBuilder</em>:

<pre><code>@interface ImageHandleBuilder : NSObject
@property (class, nonatomic, assign, readonly) ImageHandleBuilder*  shared;
- (id&lt;ImageHandle&gt;) imageHandleFromFile: (id&lt;ImageFileProtocol&gt;) file error:(NSError**) error;
@end
</code></pre>

We have a singleton, <code>shared</code> which must exist and we have a function <code>imageHandleFromFile:error:</code> which needs an ImageFileProtocol and may return an ImageHandle. There, the property <code>shared </code>needs to be  <code>_Nonnull</code><code></code> and the <code>file</code> parameter in <code>imageHandleFromFile:error:</code> needs to be <code>_Nonnull</code>. Since <code>imageHandleFromFile:error:</code> can fail and throw an error, the return type must be optional so we mark that we the <code>_Nullable</code> attribute. Here is the result:

<pre><code>@interface ImageHandleBuilder : NSObject
@property (class, nonatomic, assign, readonly) ImageHandleBuilder* _Nonnull shared;
- (id&lt;ImageHandle&gt; _Nullable) imageHandleFromFile: (id&lt;ImageFileProtocol&gt; _Nonnull) file error:(NSError**) error;
@end
</code></pre>

So now rather than Swift seeing:

<pre><code>class ImageHandleBuilder : NSObject {
    class var shared : ImageHandleBuilder! { get }
    func imageHandleFromFile(_ file: ImageFileProtocol!) throws -&gt; ImageHandle!
}
</code></pre>

We’ll see:

<pre><code>class ImageHandleBuilder : NSObject {
    class var shared : ImageHandleBuilder { get }
    func imageHandleFromFile(_ file: ImageFileProtocol) throws -&gt; ImageHandle?
}
</code></pre>

This makes the API much more understandable in Swift and easier to interface with.

<h2>Making Code Friendly</h2>

When you need to write Objective-C code or perhaps you are in the process of migrating Objective-C code over to Swift. There are a few things you can do:

<ul>
    <li>If you can to keep as much as code in Swift as possible, <strong>write Protocols in Objective-C and implementation (i.e. Classes) in Swift</strong></li>
    <li><strong>Use Protocol to guide the API for other frameworks and libraries</strong></li>
    <li><strong>Use Extensions to avoid duplicating types</strong> and reuse existing types.</li>
    <li>In Objective-C, if your function can throw an Error, <strong>use the standard paradigm in so Swift interprets your code correctly</strong></li>
    <li><strong>Mark your Objective-C generously</strong> with attributes to note whether a parameter, return type, etc... is nullable or not.</li>
</ul>

Next, we'll be talking about using those C++ libraries in a framework. If you want to stay up-to-date,<a href="http://eepurl.com/c5uqxP" target="_blank" rel="noopener"> fill out the form</a> so I can let you know when the article is posted. In the meantime, feel free to checkout <a href="https://speculid.com" rel="noopener">Speculid</a> or<a href="https://github.com/brightdigit/Speculid" rel="noopener"> the open-source repo</a>, as well as <a href="https://developer.apple.com/documentation/swift/migrating_your_objective-c_code_to_swift" rel="noopener">Apple's documentation on migrating from Objective-C to Swift</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>249</wp:post_id>
		<wp:post_date><![CDATA[2018-11-16 10:05:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-11-16 10:05:02]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="building-speculid"><![CDATA[Building Speculid]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[212]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[objective-c and swift]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[94]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Objective-C is still necessary for Swift development. With the introduction of C++ libraries in version 2.0 of Speculid, Objective-C became necessary.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_dp_original]]></wp:meta_key>
		<wp:meta_value><![CDATA[211]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/572/</link>
		<pubDate>Tue, 19 Mar 2019 12:10:57 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=572</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>572</wp:post_id>
		<wp:post_date><![CDATA[2019-03-19 08:10:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-19 12:10:57]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-19 08:10:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-19 12:10:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[572]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="social"><![CDATA[Social]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx_menu_icon]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Independent Watch App - Getting Started]]></title>
		<link>https://learningswift.brightdigit.com/?p=655</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=655</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>With watchOS 6 released this fall, developers have a new way to deliver watch apps without the need for an iPhone app. From a UX this has seemed like an unnecessary requirement when you simply don't need the iPhone interface for your watch app. However, now developers can build an app that just requires an Apple Watch without the need for an iPhone app. Here's how...</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Independent Watch App Container</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Previously an Apple Watch was packaged as part of iPhone app like so:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":663,"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/iPhone-with-Watch-App-5.png" alt="" class="wp-image-663"/><figcaption>How to package an Apple Watch as part of an iPhone app (pre-watchOS 6)</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Before watchOS 6 if you built a watchOS app it must be packaged as part of an iPhone app. However with watchOS 6, an independent watch app is added as an option. In this case the Apple Watch Application Container, takes the place of the iPhone App and Extension:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":661,"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Apple-Watch-App-6.png" alt="" class="wp-image-661"/><figcaption>How an Independent Apple Watch app is package in <br>watchOS 6</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>An Apple Watch can also be created in Xcode as part of an iPhone application with the option to be independent using the <em>Supports Running Without iOS App Installation</em> under<a rel="noreferrer noopener" aria-label=" the watch extension target in Xcode. (opens in a new tab)" href="https://developer.apple.com/documentation/watchkit/creating_independent_watchos_apps#3226960" target="_blank"> the watch extension target in Xcode.</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Publishing Your Independent Watch App to the App Store</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To create an independent watch app in the App Store, go to the App Store and setup an app as if it were a iOS app. Once </p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>655</wp:post_id>
		<wp:post_date><![CDATA[2019-09-17 14:17:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-17 14:17:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-17 18:17:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Independent Watch App]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[20]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[With watchOS 6 released this fall, developers have a new way to deliver watch apps without the need for an iPhone app.]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Upgrading Old Swift Projects]]></title>
		<link>https://learningswift.brightdigit.com/?p=760</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=760</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Swift 3 -> Swift 4 Xcode 10</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Swift 2 </p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>760</wp:post_id>
		<wp:post_date><![CDATA[2019-10-28 12:17:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-10-28 12:17:02]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-10-28 16:17:02]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[SwiftNIO and Async - Optimizing your Requests with in Vapor]]></title>
		<link>https://learningswift.brightdigit.com/?p=775</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=775</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>With Swift moving to the server, there has become a need to accommodate asynchronous requests. While there are asynchronous callbacks on client, it isn’t to the scale and complexity which it is on the server. This is especially the case when dealing with outside APIs or database queries.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In this tutorial you will learn how to:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Organize asynchronous requests based on their dependencies</li><li>Use Promises and Futures work in Swift NIO and Vapor</li><li>Deal with Futures from HttpRequests and Database Queries</li><li>Group a series of Futures </li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Getting Started</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Before downloading the app, you need to install both the Vapor toolset as well as have PostgreSQL setup. Firstly, to install the Vapor toolset use the Homebrew tap:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>brew tap vapor/tap
brew install vapor/tap/vapor</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Secondly, setup your PostgreSQL either by installing PostgreSQL software on your machine or for an easier installation use Docker with <a href="https://hub.docker.com/_/postgres">the PostgreSQL docker image located here</a>. If you are using Docker, you can start a PostgreSQL instance without password, with the command:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>docker run --rm --name app-gathering-app-pg -d -p 5432:5432 Postgres</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Once PostgreSQL is setup, connect to the server and create the database and user for our server-side app.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>create database app_gathering;
create user app_gathering;
grant all privileges on database app_gathering to app_gathering;</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>Using the Starter Project</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Once your prerequisites are setup, download the starter project <a href="www.google.com">here</a>. Next unzip the starter project and <code>cd</code> into the directory. Then <code>cd</code> into the server project’s directory and create an Xcode project based on the Vapor application Swift package:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>cd app-gathering-app-server; vapor xcode</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>After the Xcode project has been create for our server application, do not open the newly created project. Rather open the workspace <code>appgathering-app.xcworkspace</code>, which contains references to the Vapor server application as well an iOS project.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Having open the Xcode workspace, you’ll see our two projects: the Vapor application and the iOS application. Similar to the App Store, Product Hunt, Beta List or even Homebrew, the purpose of this  iOS app is allowing users to setup a collection of apps for sharing, future use, etc... For instance, once the user is logged, the app will search in this case the iTunes API for apps based on keyword. Having found the app, the user can save the app to their collection. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>On the client, the iTunes search as well as the calls to the server have been setup. Likewise on the server, there’s a rudimentary insecure authentication, for the purposes of the tutorial. Additionally the Models and the scaffolding of the Controllers have been setup on the server.  Conversely what remains are the server APIs for:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Importing an App from iTunes for a user’s collection</li><li>Removing an App from a user’s collection</li><li>Lists the user’s collection of apps</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Therefore, let’s discuss how the server’s data model is setup as you implement importing an app from iTunes.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Understanding The Data Model</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Before you jump into implementing the API to import an app from iTunes, let’s look into how to setup the data model. At the center of our data model is <code>Users</code> and <code>Products</code> which have a many-to-many relationship. In other words, <code>Products</code> can be in many  collections of <code>Users</code> and <code>User</code> can have many <code>Products</code> in their collections. Additionally <code>Product</code> and <code>Platform</code> have a many-to-many relationship since many <code>Platforms</code> have multiple <code>Products</code> and many <code>Products</code> have multiple <code>Platforms</code>. However <code>Developers</code> and <code>Products</code> have a one-to-many relationships since <code>Products</code> can only have one <code>Developer</code>. Lastly the future intention of this app is that apps outside of iTunes could be included. Therefore both the <em>iTunes Developer</em> and <em>iTunes Product</em> are one-to-one or more specifically one-to-zero/one. For more detail, take a look at this diagram of our database model:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":774} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/01/DraggedImage.png" alt="" class="wp-image-774"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3>Sketching Out The Dependencies</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Our route for importing an iTunes product is <code>/iTunesProducts/{id}</code> with the parameter <code>{id}</code> being the iTunes track id. Therefore you’ll need to make a request on the server for the iTunes Product metadata. From their you need to figure which data models are dependent on others:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Product <strong>needs</strong> a Developer</li><li>iTunes Developer  <strong>needs</strong> a Developer</li><li>iTunes Product  <strong>needs</strong> a Product</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>However you see <code>Product</code> and <code>Platform</code> have no dependencies. Therefore, you can sketch out that:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Verify Parameters:<br><ul>
			<li>UserId is Valid</li>
			<li>Call iTunes Product API based on the <code>trackId</code></li>
		</ul></li><li>Developer and Platforms<br><ul>
			<li>Insert or Update the <code>Developer</code></li>
			<li>Insert or Update the <code>Platforms</code></li>
		</ul></li><li>Product and iTunes Developer<br><ul>
			<li>Insert or Update the iTunes Developer (I.e. <code>AppleSoftwareDeveloper</code>)</li>
			<li>Insert or Update the <code>Product</code></li>
		</ul></li><li>Platform-Product Relationships, User-Product Relationship, iTunes Product<br><ul>
			<li>Insert or Update the iTunes Product (I.e. <code>AppleSoftwareProduct</code>)</li>
			<li>Attach <code>Platforms</code> to <code>Product</code> </li>
			<li>Attach <code>Product</code> to <code>User</code></li>
		</ul></li><li>Create a <code>ProductResponse</code> for easy consumption by the iOS app.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Now that you have the dependencies, let’s work on our first step: calling the iTunes API.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>HttpRequests: Server vs Client</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Most importantly, you’ll need to access the iTunes API using a standard GET request to access the product by its <code>trackId</code>. While the iOS app uses <code>URLSession</code> to call the iTunes API, we’ll be using <code>HTTPClient</code> API built into Vapor to make our request on the server. Therefore, let’s take a look how iOS does a search based on keyword for an app:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>var urlComponents = AppStoreSearchResultTableViewController.baseURLComponents

urlComponents.queryItems?.append(URLQueryItem(name: "term", value: term))

let url = urlComponents.url!

// create the data task for the url
let dataTask = URLSession.shared.dataTask(with: url) { data, response, error in

// update the results
self.result = AppsTableViewController.jsonDecoder.decode(AppleSearchResult.self,                                                           from: data,                                               withResponse: response,                                               withError: error,                                   elseError: NoDataError()).map { $0.results }
      self.dataTask = nil
    }
DispatchQueue.global().async {
  dataTask.resume()
}
self.dataTask = dataTask
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Comparatively, here’s the code, you’ll use to access an iTunes product based on its <code>trackId</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>final class AppleSoftwareProductController {
  /**
   Looks up product from iTunes
   */
  func product(lookupByTrackId iTunesTrackID: Int, on worker: Worker) throws -> Future&lt;AppleSearchResultItem?> {
    var urlComponents = self.urlComponents
    urlComponents.queryItems = [URLQueryItem(name: "id", value: iTunesTrackID.description)]
    let futureClient = HTTPClient.connect(hostname: urlComponents.host!, on: worker)
    let request = HTTPRequest(method: .GET, url: urlComponents.url!)
    return futureClient.flatMap { client in
      client.send(request)
    }.flatMap { (response: HTTPResponse) in
      response.body.consumeData(on: worker)
    }.map { data in
      try self.jsonDecoder.decode(AppleSearchResult.self, from: data)
    }.map {
      $0.results.first
    }
  }
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>To that end, the <code>HTTPClient</code> API differs primarily in its use of Futures, or specifically EventLoopFutures. Additionally while creating a <code>URLSessionDataTask</code> in iOS, you pass a closure or callback, on the server, you use future to take into account the asynchronous nature of http request. Now, let’s take a step by step look at the <code>.product(lookupByTrackId:, on:)</code> function:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>You form a url by setting the <code>id</code> based on the <code>iTunesTrackID</code> passed.</li><li>You create a <code>Future&lt;HttpClient&gt;</code> by connecting to the host based on the new url’s host.</li><li>You create a <code>HTTPRequest</code> with method <code>GET</code> to the full url, you’ve created.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Next you need to use a series of <code>map</code> and <code>flatMap</code> calls to return a parsed <code>AppleSearchResultItem</code> object:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol start="4">
	<li>Use <code>flatMap</code> to send the <code>HTTPRequest</code> to the <code>`HTTPClient`</code>.</li>
	<li>Next with a <code>flatMap</code> use <code>consumeData</code> to get the <code>Data</code> from the <code>HTTPResponse</code> body.</li>
	<li>Use the <code>JSONDecoder</code> to decode the <code>Data</code> into a <code>AppleSearchResult</code></li>
	<li>Use <code>map</code> to get the first <code>AppleSearchResultItem</code></li>
</ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Now you should have the <code>AppleSearchResultItem</code>, you can use to continue with the import process. Before you continue, let’s breakdown the difference between the <code>flatMap</code> and <code>map</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>flatMap vs map</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Futures in Vapor (and therefore SwiftNIO) use the concept of <code>map</code> and <code>flatMap</code> to allow conversion from one Future type to another. However this may seem confusing compared to the previous use of the term <code>flatMap</code>. Therefore, let’s explain the differences.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>Array.map</code> and <code>Future.map</code> are pretty similar. Both convert or map a value or set of values into a new type. For instance an operation which doubles values, maps a number to another number (ex. 1 to 2, 4 to 8, -3.5 to -7, 0 to 0, etc...). Previously the term <code>flatMap</code> meant the operation of <em>flattening</em>  an array. However a <code>flatMap</code> is more apt in the case of <em>flattening</em> in the sense of the containing generic type. For instance an <code>Optional</code> uses <code>flatMap</code> so that rather than a <code>Optional&lt;Optional&lt;T&gt;&gt;</code> being returned, the <code>Optional</code> is <em>flattened</em> to return an <code>Optional&lt;T&gt;</code>. Likewise if your closure will return <code>Future&lt;T&gt;</code> as opposed to <code>T</code>, you’ll want to use <code>flatMap</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>    return futureClient.flatMap { client in
      client.send(request)
    }.flatMap { (response: HTTPResponse) in
      response.body.consumeData(on: worker)
    }.map { data in
      try self.jsonDecoder.decode(AppleSearchResult.self, from: data)
    }.map {
      $0.results.first
    }
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>So in our case, sending the <code>HTTPClient</code> request and consuming the binary are by their nature asynchronous network calls and therefore need a <code>flatMap</code> call. Conversely, decoding the JSON and returning a property from the <code>AppleSearchResult</code> are synchronous calls and therefore need only <code>map</code> call. Now you can return the <code>AppleSearchResultItem</code> if it exists and begin inserting or updating our database with this information.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Upsert - How to deal with existing data</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In many cases when you are importing data, you’ll need to verify that the corresponding data doesn’t already exist. In this case, we’ll look at how to find if the developer already exists and if it does update the data. However if it doesn’t, you’ll need to create a new developer and save it to the database. By and large this referred to as a replace or <em>upsert</em>.  Let’s take a look at the code:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  func developer(upsertBasedOn resultItem: AppleSearchResultItem, on req: DatabaseConnectable) -> Future&lt;(Developer, AppleSoftwareDeveloper)> {
    return AppleSoftwareDeveloper.query(on: req).filter(\.artistId == resultItem.artistId).first().flatMap { foundApswDeveloper in
      let apswDeveloperFuture: EventLoopFuture&lt;AppleSoftwareDeveloper>
      let developerFuture: EventLoopFuture&lt;Developer>
      // if the iTunes developer already exists in the database
      if let actualApswDeveloper = foundApswDeveloper {
        apswDeveloperFuture = req.future(actualApswDeveloper)
        // update the developer info
        developerFuture = actualApswDeveloper.developer.get(on: req).flatMap { developer in
          developer.name = resultItem.artistName
          return developer.update(on: req)
        }
      } else {
        // create the new developer
        developerFuture = Developer(name: resultItem.artistName, url: resultItem.sellerUrl).save(on: req)
        // create the new iTunes metadata entry for the developer
        apswDeveloperFuture = developerFuture.map { developer in
          try AppleSoftwareDeveloper(artistId: resultItem.artistId, developerId: developer.requireID())
        }
      }
      return developerFuture.and(apswDeveloperFuture)
    }
  }
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>First, you query the database for an <code>AppleSoftwareDeveloper</code> matching the <code>artistId</code>. Then logic goes in one of two ways. Either (under <code>else</code>) you create a new Developer and corresponding <code>AppleSoftwareDeveloper</code> or you update the existing one (under the <code>if let</code>). Most importantly, when the item is searched for, you already have access to the item <code>AppleSoftwareDeveloper</code>. However when you create the item the object has not been saved yet and is therefore a <code>Future&lt;AppleSoftwareDeveloper&gt;</code>. As a result the <em>found</em> value under the <code>if let</code>, needs to converted to a <code>Future&lt;AppleSofwareDeveloper&gt;</code> using the <code>EventLoop</code> function <code>future</code>. This will allow both <code>AppleSoftwareDeveloper</code> to be at the same <em>level</em>.  One casts with the <code>EventLoop</code> to a <code>Future</code> the other created based on the iTunes search result and linked to the newly saved  <code>Developer</code>. With our new <code>Developer</code>, you can follow the same pattern with <code>Product</code> as well:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  func product(
    upsertBasedOn resultItem: AppleSearchResultItem,
    withDeveloper developer: Developer,
    on req: DatabaseConnectable
  ) throws -> Future&lt;(Product, AppleSoftwareProduct)> {
    return AppleSoftwareProduct.query(on: req).filter(\.trackId == resultItem.trackId).first().flatMap { foundApswProduct in
      let productFuture: EventLoopFuture&lt;Product>
      let apswProductFuture: EventLoopFuture&lt;AppleSoftwareProduct>
      // if the iTunes product already exists in the database
      if let actualApswProduct = foundApswProduct {
        actualApswProduct.bundleId = resultItem.bundleId
        // update the iTunes info
        apswProductFuture = actualApswProduct.update(on: req)
        // update the product info
        productFuture = actualApswProduct.product.get(on: req).flatMap { product in
          product.name = resultItem.trackName
          product.sourceImageUrl = resultItem.artworkUrl512
          return product.update(on: req)
        }
      } else {
        // create the new product
        productFuture = Product(
          developerId: try developer.requireID(),
          name: resultItem.trackName,
          url: resultItem.sellerUrl,
          sourceImageUrl: resultItem.artworkUrl512
        ).save(on: req)
        // create the new iTunes metadata entry for the product
        apswProductFuture = productFuture.flatMap { product in
          try AppleSoftwareProduct(trackId: resultItem.trackId, productId: product.requireID(), bundleId: resultItem.bundleId).save(on: req)
        }
      }
      return productFuture.and(apswProductFuture)
    }
  }
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>While you create and saved the developer  and product you need make sure the platforms supported by the app are saved.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><code>map</code> vs <code>map</code> and <code>flatten</code></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>With calling the iTunes API, you learned how  <code>map</code> with <code>Futures</code> is similar to <code>Array</code> and with saving the <code>Developer</code> you dealt with creating <code>Future</code> object in instances where the object already exists. Having learned this, let’s put it together with saving <code>Platform</code> objects while also learn how to best deal with multiple objects of the same type. Therefore, under <code>PlatformController</code>, let’s create a function to save a platform which don’t exist:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>final class PlatformController {
  func platform(upsertBasedOnDeviceName apswDeviceName: String, on database: DatabaseConnectable) -> Future&lt;Platform> {
    let deviceNames = Set&lt;String>(apswDeviceName.components(separatedBy: "-"))
    let deviceName = (deviceNames.count == 1 ? deviceNames.first : apswDeviceName) ?? apswDeviceName

    return Platform.query(on: database).filter(\.name == deviceName).first().flatMap { foundPlatform -> Future&lt;Platform> in
      if let platform = foundPlatform {
        return database.future(platform)
      } else {
        return Platform(name: deviceName).save(on: database)
      }
    }
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Important to realize, the string for the platform returned by iTunes is typically in the format: <code>iPad-iPad</code>. Therefore, you take the string passed and try to modify the string to something more legible. As a result, you separate the string  by the dash and if the two components match use that single string otherwise use the whole string for the platform name. At this point you again either create and save a new platform or return a <code>Future</code> using the <code>.future</code> call. Now, let’s take a look how you can do this with multiple items at the time with <code>.flatten</code>. </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  func create(_ req: Request)
  // . . .
  // parse the supported platforms
      let platformsFuture = resultItem.supportedDevices.map {
        self.platformController.platform(upsertBasedOnDeviceName:$0, on: req)
      }.flatten(on: req)
  // . . .
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>To sum up, <code>resultItem</code> is the <code>AppleSearchResultItem</code>  returned by the iTunes API.  Unfortunately if you call <code>PlatformController.platform(upsertBasedOnDeviceName:)</code> on each item using map, the result will be an Array of future items or in this case: <code>[Future&lt;Product&gt;]</code>. Of course ideally we’d like to have a single Future you could work with. That’s where <code>.flatten</code> comes in. In this case by calling <code>.flatten</code> with the <code>Request</code> object you can convert the <code>[Future&lt;Platform&gt;]</code>to a <code>Future&lt;[Platform]&gt;</code>.  Further, let’s make sure to match our platforms with the newly saved <code>Product</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  func platforms(
    upsertBasedOn platformsF: EventLoopFuture&lt;[Platform]>,
    forProduct product: Product,
    on req: DatabaseConnectable
  ) throws -> EventLoopFuture&lt;[Platform]> {
    return try product.platforms.pivots(on: req).all()
      .and(platformsF).flatMap { platformsPair in
        let currentProdPlat = platformsPair.0
        let platformsFuture = platformsPair.1
        // find all the old platforms which should be detached from the product
        let deletingProductPlatforms = try currentProdPlat.filter { (productPlatform) -> Bool in
          try !(platformsFuture.contains { (try $0.requireID()) == productPlatform.platformId })
        }
        // find all the new platforms which should be attached to the product
        let savingProductPlatforms = try platformsFuture.filter { (platform) -> Bool in
          try !(currentProdPlat.contains { $0.platformId == (try platform.requireID()) })
        }.map { platform in
          try ProductPlatform(productId: product.requireID(), platformId: platform.requireID())
        }

        // delete the old platforms and save the new ones
        let deletingFuture = deletingProductPlatforms.map { productPlatform in
          productPlatform.delete(on: req)
        }.flatten(on: req)
        let savingFuture = savingProductPlatforms.map {
          $0.save(on: req)
        }.flatten(on: req)

        // return the finalized list of platforms
        return deletingFuture.and(savingFuture).transform(to: platformsF)
      }
  }
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now, let’s break this code down:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Query for all current platforms mapped to the current product and use <code>and</code> to create tuple with the <code>Future&lt;[Platform]&gt;</code></li><li>To extract the <code>Platform</code> objects which don’t match, filter the current with the new list of <code>Platform</code> objects from the iTunes API.</li><li>To extract new relationships between <code>Product</code> and <code>Platform</code>, filter the new list of  of <code>Platform</code> objects from the iTunes API which don’t exist in the current list.</li><li>Lastly, delete the old <code>ProductPlatfrom</code> objects and save the new ones. </li><li>Use <code>.and</code> to make the saves and deletes are executed then transform back to the <code>Future&lt;[Platform]&gt;</code> array for our return type.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>As you can see not only can you use <code>.map</code> to convert object but you can also use other functional method on arrays such as   <code>.filter</code> and <code>.contains</code> . To sum up, you have learned how to apply the use of <code>.flatten</code> on an Array of Future objects. However there are two missing pieces remaining: the use of <code>.and</code> and how to deal with relationships.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Attachment vs Relationship Object</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>As shown above, you created and deleted the various links between <code>Platform</code> and <code>Product</code> by directly using the joining or pivot model of <code>ProductPlatform</code>. However let’s look at how to use <code>.isAttach</code> and <code>attach</code> to decipher and build relationship between <code>User</code> and <code>Product</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>At the beginning of our function, you custom our custom and frankly insecure method of passing <code>User</code> to decipher the currently logged in user. Therefore, now that you have a <code>Future&lt;Product&gt;</code>, you can create a relationship between the <code>User</code> and the <code>Product</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>userF.and(productFuture).flatMap { userAndProduct -> Future&lt;Void> in
  let (user, (product, _)) = userAndProduct
  return user.products.isAttached(product, on: req).flatMap { (isAttached) -> Future&lt;Void> in
    guard !isAttached else {
      return req.future()
    }
    return user.products.attach(product, on: req).transform(to: req.future())
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Just as before, you are using <code>.and</code> to create a tuple from two heterogeneous <code>Future</code> objects. In other words, just as <code>.flatten</code> takes an array of objects of the same type, <code>.and</code> will take two <code>Future</code> objects of different types and create a single Future tuple of both types. Since the object <code>productFuture</code> is of tuple type <code>(Product, AppleSoftwareProduct)</code> returned from <code>product(upsertBasedOn resultItem: AppleSearchResultItem…</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>, <code>userAndProduct</code> will be or tuple type  <code>(User, (Product, AppleSoftwareProduct))</code>.  Therefore, to get the user and product and discard the <code>AppleSoftwareProduct</code> you can use the syntax:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let (user, (product, _)) = userAndProduct
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now you can use the function <code>isAttached</code> to test whether the user is attached the product as opposed to query <code>UserProduct</code>. Since this asynchronous, you need to use <code>.flatMap</code>. From inside the callback, if it is already nothing needs to done and you can return an empty <code>Future</code>, otherwise use <code>attach</code> to attach the product to the user and use <code>.transform</code> to return an empty <code>Future</code>. From this you will have used <code>attach</code> as opposed to directly working with the relationship pivot model.  As you can see, we’ve been using <code>.and</code> to create <code>Future</code> tuple types. However, let’s breakdown how tuples are formed using <code>.and</code></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Dealing with Futures of Different Types</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In many cases, you need the saved objects of various types to form a complete response to the user. In this particular case, the <code>ProductResponse</code> you are returning needs <code>Product</code>, <code>AppleSoftwareProduct</code>, <code>DeveloperResponse</code>,  and the <code>Platform</code> array. Therefore first you need to create a <code>DeveloperResponse</code> object based on the <code>Future&lt;(Developer, AppleSoftwareDeveloper)&gt;</code> object you saved earlier:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// DeveloperResponse.swift
static func future(from developerPair: Future&lt;(Developer, AppleSoftwareDeveloper)>) -> Future&lt;DeveloperResponse> {
  return developerPair.map { developer, appleSoftwareDeveloper in
    let apswDeveloperInfo = AppleSoftwareDeveloperInfo(artistId: appleSoftwareDeveloper.artistId)
    return DeveloperResponse(id: try developer.requireID(), name: developer.name, appleSoftware: apswDeveloperInfo)
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Next with the <code>DeveloperResponse</code>, you need to take the  <code>(Product, AppleSoftwareProduct)</code>  tuple from our previous functions as well as the <code>Platform</code> array from our <code>.platforms</code> call and form a <code>Future&lt;ProductResponse&gt;</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// ProductResponse.swift
static func future(
  from productPair: Future&lt;(Product, AppleSoftwareProduct)>,
  withDeveloper developerResponseF: Future&lt;DeveloperResponse>,
  withPlatforms platformsF: Future&lt;[Platform]>
) -> Future&lt;ProductResponse> {
  let platformNamesF = platformsF.map {
    $0.map {
      $0.name
    }
  }

  return productPair.and(developerResponseF).and(platformNamesF).map { components in
    let (((product, appleSoftwareProduct), developerResponse), platformNames) = components

    let productId = try product.requireID()
    let appleSoftware = AppleSoftwareProductInfo(trackId: appleSoftwareProduct.trackId, bundleId: appleSoftwareProduct.bundleId)

    return ProductResponse(
      id: productId,
      name: product.name,
      url: product.url,
      sourceImageUrl: product.sourceImageUrl,
      platforms: platformNames,
      developer: developerResponse,
      appleSoftware: appleSoftware
    )
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now let’s breakdown how this function works:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Get only the names from each of the <code>Platform</code> objects.</li><li>Using <code>.and</code> you create a tuple and using the first let statement breakdown the <code>components</code> tuple into separate variables.</li><li>From there, you get the id, create the <code>AppleSoftwareProductInfo</code> property and create a full <code>ProductResponse</code>, which you can return.</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Where to go from here?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Now that you have learned the various ways to manage Futures both from <code>HTTPClient</code> as well as Database calls such as:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>When to use <code>flatMap</code> and <code>map</code></li><li>How to use <code>.future</code> when doing an upsert</li><li>How to use <code>flatten</code> with multiple objects</li><li>How to use attachment as opposed to pivot objects</li><li>How to organize tuples with <code>.and</code></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>You can take the next steps of being able to list a user’s products as well as remove a product from a user. If you need help, be sure to take a look at the <a href="https://github.com/leogdion/swift-vapor-app-collection-sample">final solution here</a>. If you are interested in learning more check out:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a href="https://www.raywenderlich.com/3858252-how-to-think-in-server-side-swift)">How to Think in Server-side Swift</a></li><li><a href="https://www.raywenderlich.com/890381-getting-started-with-server-side-swift-with-vapor">Getting Started with Server-Side Swift with Vapor</a></li><li><a href="https://www.raywenderlich.com/1124580-swiftnio-a-simple-guide-to-async-on-the-server">SwiftNIO: A simple guide to async on the server</a> </li><li><a href="https://www.raywenderlich.com/890936-using-fluent-and-persisting-models-in-vapor">Using Fluent and Persisting Models in Vapor</a></li><li><a href="https://www.raywenderlich.com/5025-server-side-swift-with-vapor-parent-child-relations">Server Side Swift with Vapor: Parent-Child Relations</a></li><li><a href="https://www.raywenderlich.com/5009-server-side-swift-with-vapor-sibling-relations">Server Side Swift With Vapor: Sibling Relations</a></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>We hope you enjoyed this tutorial, and if you have any questions or comments, please join the forum discussion below!</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>775</wp:post_id>
		<wp:post_date><![CDATA[2020-01-05 19:12:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-01-05 19:12:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-01-06 00:12:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[swiftnio-async-optimizing-requests-vapor]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="vapor"><![CDATA[vapor]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://learningswift.brightdigit.com/?p=779</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=779</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:group -->
<div class="wp-block-group"><div class="wp-block-group__inner-container"><!-- wp:jetpack/markdown {"source":"## Why Learn Swift?\n### Optimization and Maintenance\nThere's a lot of cross platform development tools out there however none are guided by the hardware manufacturer as Swift is.\nThat is to say Apple knows much more of what's going on behind the scenes. Therefore, whatever abstractions or APIs Apple offers to Swift developers, allow Apple the greatest flexibility in the inner workings of your code  with the greatest benefit to any device targeted. Additionally with cross-platform tools like React Native, you don’t deal with Apple only but also now Facebook or whatever the open source community maintains the tooling. For this reason, cross-platform tools add an additional layer of complexity and maintain to your app. \n### User Experience\nIn addition to maintenance and optimization, it’s important to keep user experience in mind. For instance, managers who lack a user experience background may want the same experience on Android and iPhone. On the contrary anybody will tell you that's a really bad idea. That is to say each user base has a set of expectations for how an iPhone or Android should behave.\nFor instance, the hamburger menu is more common on Android. Similarly there's a global back button on Android, however iPhones  don't have a global back button.In short,  actually designing your app once and having an identical user interface on every device is not a great practice. In the end, you may not same much time by using a cross-platform tool since you need to write a separate user interface for Android and iPhone.\n### When Cross-Platform Makes Sense\nAlthough native Swift code is preferred, there are cases where a cross-platform tool could be preferred.  Generally speaking, dependent on the audience of the app, the stage the app is in, and the experience of your team a cross-platform tool is justifiable. For instance if your team develops in JavaScript team and you're just testing an idea, it’s worthwhile sticking with JavaScript to build your iPhone app. However, if this is a longterm project, I recommend building your app natively in Swift. \nWith that in mind, if you have no experience in Swift, how do you get started and what equipment do you need?\n## How To Get Started\nWhen getting started with Swift development you’ll need a capable device to do so.\n### How About _Hackintosh_\nIf you already have a non-Apple device you may be asking whether it’s worth installing macOS on your device that is to say building a _Hackintosh_. If you are interested in learning the process of preparing and installing macOS on your device, go for it. However if you want to focus your time on learning Swift, then being distracted by issues with your _Hackintosh_ installation may not be the best use of your time.  Additionally you can build apps for Windows and Linux in Swift, however unless you are only interested in building Server-Side or Command Line apps in Swift then you will need an Apple device.\n### Starting with an iPad and Swift Playgrounds\nIf you want to learn Apple’s API and just play around with code, using Swift Playgrounds on the iPad is a viable option. Along with building a UI there's some tooling for playing around with Bluetooth and various robotics technology. Unfortunately there’s a limit to what you can do which is going to limit you. For instance, you can’t actually build an app in Swift Playgrounds and deliver it to the App Store. All in all, Swift Playgrounds on the iPad is really geared toward educational purposes. In short,  it's a great way to like just get started and play around with Swift on a budget especially if you have one lying around. \n### Getting a Real Mac\nIn the end to get an app in the App Store, you will need a Mac. If you don’t need portability and already have a monitor, keyboard, and mouse then a Mac Mini might be the right choice. In the end you may need as little as $200 for a used one. Conversely, if you want to spend a little bit more money and don't have a monitor, there's the iMac. As a matter I own a pretty loaded 27-inch iMac myself and I love it. Most importantly, get enough hard drive storage, make sure it is an SSD, has approximately 2 GHZ processor, supports the latest OS, 8 GB of RAM. Of course a Mac Mini or iMac may save you money, but you may need a MacBook to carry around.\n### Going Portable\nIf you are going to need a laptop then I would highly recommend going with a MacBook Pro. If you are willing to get an older used MacBook Pro you can spend as little as $700. For instance, I have a 13 inch that I use and it's four years old and it's great. Most importantly, I wouldn't say I would take not get anything older than 4 years old. Additionally any MacBook Pro at that age is sufficient while the MacBook Air and deprecated MacBook. \n## Getting Your Mac Ready\nIf you're going to publish to the app store, you need a developer account in order to do that. Unfortunately, this costs $99 per year. Additionally you need a DUNS number which is completely free. It’s Apple’s way of confirming you are a real company more or less. In any event, let’s get into the fun part - Software.\n### Xcode - Your Home Base\nLet's talk a little bit about the software you're going to need to get started. The main IDE for developing applications in Swift is Xcode - Xcode is everything. Similar to VisualStudio or Android Studio, it's the main way to develop applications for Apple products. While you can do Swift development in Linux, you cannot build anything for Apple devices such as the iPhone.\nThe basic bedrock of Xcode are projects. That is to say when you want to start a new app, you will typically start a new project in Xcode. Within a project, there will be the code, assets as well as configuration to build what is called targets.\nSpecifically a target is some sort of deliverable which can be executed or built. Chiefly among targets would be an application. However also included as targets would be: unit tests, libraries, frameworks, or any custom build scripts. Outside of targets and projects are workspaces which allow for developers to group projects.\nFor instance, if you have a few of related projects for a suite of apps for the iPhone, you may want to group them all together as a workspace. Within your workspace then, you can set up specific settings for debug and release builds. Additionally Xcode allows granularity of those settings based on workspace, project, or target.\nWhile some settings are stored in the project or workspace file, some are stored in Apple's specialized XML format called a PList. For example, within a Plist, you might set up the text for permission prompts for access to the user’s location or photo library.\nsome other things are usually typically set here.  Additionally you may setup your main Storyboard file, which contains the information needed for your user interface.\n#### Building Your User Interface\nIn short, there are several ways to build a user interface for apps. For those starting out, the primary method is Storyboards. For instance, you can setup the precise arrangement of widgets like buttons as well as the navigation structure of the application. Correspondingly this is where you can connect various widgets and actions to particular pieces of code. For example, a button can be assigned to a property in code which allows the developer to update the text or color of the button. Not to mention, a button tap can be assigned to a function, which allows the developer to make those changes happen.\nUnfortunately, Storyboards come with major drawbacks. While I would recommend Storyboards for single developers or those starting out, the underlying XML format is nearly impossible to edit manually and virtually impossible to merge when in a team. Therefore, if you do ever work with Storyboard, split them up as small as possible and make sure that nobody else touches it while you do. \nAlternatively, Swift does allow the ability to manually build your user interface in code. Specifically if you need to support older operating systems and you are working on a team, this might be the right fit for you. However I would not recommend it for those learning Swift for the first time.\nConversely if you don’t need to support older operating systems than the newly released Swift UI might be the right choice. With SwiftUI, Apple is shifting from an MVC pattern to a more reactive MVVM pattern. For that reason, if you are familiar with reactive patterns and only interested in developing for the latest OSes, I’d recommend SwiftUI. However, if you want to build something more tried and true than using Storyboards are the best way to go beginners.\nAlong with widgets and code, you will be using various graphics throughout your application. For that reason, these graphics will be stored in an asset library along with various colors, 3D models and more.\nWith any software development some sort of dependency management is going to be needed to use various libraries and frameworks. When it comes to the most tried and true tools, Cocoapods has the longest history and the widest support. Since it’s introduction during the days of Objective-C many popular libraries such as Firebase rely on Cocoapods for delivering their functionality to iOS. \nLately, the Swift team with backing from Apple has introduced the Swift package manager. In short, the Swift package manager is the future of dependency management on Apple platforms. With SPM, there is no central repository such as NPM. Rather, SPM uses url to git repos. Additionally with the release of Xcode 11 this year, developers have built in support for Swift Package Manager in Xcode."} -->
<div class="wp-block-jetpack-markdown"><h2>Why Learn Swift?</h2>
<h3>Optimization and Maintenance</h3>
<p>There's a lot of cross platform development tools out there however none are guided by the hardware manufacturer as Swift is.
That is to say Apple knows much more of what's going on behind the scenes. Therefore, whatever abstractions or APIs Apple offers to Swift developers, allow Apple the greatest flexibility in the inner workings of your code  with the greatest benefit to any device targeted. Additionally with cross-platform tools like React Native, you don’t deal with Apple only but also now Facebook or whatever the open source community maintains the tooling. For this reason, cross-platform tools add an additional layer of complexity and maintain to your app.</p>
<h3>User Experience</h3>
<p>In addition to maintenance and optimization, it’s important to keep user experience in mind. For instance, managers who lack a user experience background may want the same experience on Android and iPhone. On the contrary anybody will tell you that's a really bad idea. That is to say each user base has a set of expectations for how an iPhone or Android should behave.
For instance, the hamburger menu is more common on Android. Similarly there's a global back button on Android, however iPhones  don't have a global back button.In short,  actually designing your app once and having an identical user interface on every device is not a great practice. In the end, you may not same much time by using a cross-platform tool since you need to write a separate user interface for Android and iPhone.</p>
<h3>When Cross-Platform Makes Sense</h3>
<p>Although native Swift code is preferred, there are cases where a cross-platform tool could be preferred.  Generally speaking, dependent on the audience of the app, the stage the app is in, and the experience of your team a cross-platform tool is justifiable. For instance if your team develops in JavaScript team and you're just testing an idea, it’s worthwhile sticking with JavaScript to build your iPhone app. However, if this is a longterm project, I recommend building your app natively in Swift.
With that in mind, if you have no experience in Swift, how do you get started and what equipment do you need?</p>
<h2>How To Get Started</h2>
<p>When getting started with Swift development you’ll need a capable device to do so.</p>
<h3>How About <em>Hackintosh</em></h3>
<p>If you already have a non-Apple device you may be asking whether it’s worth installing macOS on your device that is to say building a <em>Hackintosh</em>. If you are interested in learning the process of preparing and installing macOS on your device, go for it. However if you want to focus your time on learning Swift, then being distracted by issues with your <em>Hackintosh</em> installation may not be the best use of your time.  Additionally you can build apps for Windows and Linux in Swift, however unless you are only interested in building Server-Side or Command Line apps in Swift then you will need an Apple device.</p>
<h3>Starting with an iPad and Swift Playgrounds</h3>
<p>If you want to learn Apple’s API and just play around with code, using Swift Playgrounds on the iPad is a viable option. Along with building a UI there's some tooling for playing around with Bluetooth and various robotics technology. Unfortunately there’s a limit to what you can do which is going to limit you. For instance, you can’t actually build an app in Swift Playgrounds and deliver it to the App Store. All in all, Swift Playgrounds on the iPad is really geared toward educational purposes. In short,  it's a great way to like just get started and play around with Swift on a budget especially if you have one lying around.</p>
<h3>Getting a Real Mac</h3>
<p>In the end to get an app in the App Store, you will need a Mac. If you don’t need portability and already have a monitor, keyboard, and mouse then a Mac Mini might be the right choice. In the end you may need as little as $200 for a used one. Conversely, if you want to spend a little bit more money and don't have a monitor, there's the iMac. As a matter I own a pretty loaded 27-inch iMac myself and I love it. Most importantly, get enough hard drive storage, make sure it is an SSD, has approximately 2 GHZ processor, supports the latest OS, 8 GB of RAM. Of course a Mac Mini or iMac may save you money, but you may need a MacBook to carry around.</p>
<h3>Going Portable</h3>
<p>If you are going to need a laptop then I would highly recommend going with a MacBook Pro. If you are willing to get an older used MacBook Pro you can spend as little as $700. For instance, I have a 13 inch that I use and it's four years old and it's great. Most importantly, I wouldn't say I would take not get anything older than 4 years old. Additionally any MacBook Pro at that age is sufficient while the MacBook Air and deprecated MacBook.</p>
<h2>Getting Your Mac Ready</h2>
<p>If you're going to publish to the app store, you need a developer account in order to do that. Unfortunately, this costs $99 per year. Additionally you need a DUNS number which is completely free. It’s Apple’s way of confirming you are a real company more or less. In any event, let’s get into the fun part - Software.</p>
<h3>Xcode - Your Home Base</h3>
<p>Let's talk a little bit about the software you're going to need to get started. The main IDE for developing applications in Swift is Xcode - Xcode is everything. Similar to VisualStudio or Android Studio, it's the main way to develop applications for Apple products. While you can do Swift development in Linux, you cannot build anything for Apple devices such as the iPhone.
The basic bedrock of Xcode are projects. That is to say when you want to start a new app, you will typically start a new project in Xcode. Within a project, there will be the code, assets as well as configuration to build what is called targets.
Specifically a target is some sort of deliverable which can be executed or built. Chiefly among targets would be an application. However also included as targets would be: unit tests, libraries, frameworks, or any custom build scripts. Outside of targets and projects are workspaces which allow for developers to group projects.
For instance, if you have a few of related projects for a suite of apps for the iPhone, you may want to group them all together as a workspace. Within your workspace then, you can set up specific settings for debug and release builds. Additionally Xcode allows granularity of those settings based on workspace, project, or target.
While some settings are stored in the project or workspace file, some are stored in Apple's specialized XML format called a PList. For example, within a Plist, you might set up the text for permission prompts for access to the user’s location or photo library.
some other things are usually typically set here.  Additionally you may setup your main Storyboard file, which contains the information needed for your user interface.</p>
<h4>Building Your User Interface</h4>
<p>In short, there are several ways to build a user interface for apps. For those starting out, the primary method is Storyboards. For instance, you can setup the precise arrangement of widgets like buttons as well as the navigation structure of the application. Correspondingly this is where you can connect various widgets and actions to particular pieces of code. For example, a button can be assigned to a property in code which allows the developer to update the text or color of the button. Not to mention, a button tap can be assigned to a function, which allows the developer to make those changes happen.
Unfortunately, Storyboards come with major drawbacks. While I would recommend Storyboards for single developers or those starting out, the underlying XML format is nearly impossible to edit manually and virtually impossible to merge when in a team. Therefore, if you do ever work with Storyboard, split them up as small as possible and make sure that nobody else touches it while you do.
Alternatively, Swift does allow the ability to manually build your user interface in code. Specifically if you need to support older operating systems and you are working on a team, this might be the right fit for you. However I would not recommend it for those learning Swift for the first time.
Conversely if you don’t need to support older operating systems than the newly released Swift UI might be the right choice. With SwiftUI, Apple is shifting from an MVC pattern to a more reactive MVVM pattern. For that reason, if you are familiar with reactive patterns and only interested in developing for the latest OSes, I’d recommend SwiftUI. However, if you want to build something more tried and true than using Storyboards are the best way to go beginners.
Along with widgets and code, you will be using various graphics throughout your application. For that reason, these graphics will be stored in an asset library along with various colors, 3D models and more.
With any software development some sort of dependency management is going to be needed to use various libraries and frameworks. When it comes to the most tried and true tools, Cocoapods has the longest history and the widest support. Since it’s introduction during the days of Objective-C many popular libraries such as Firebase rely on Cocoapods for delivering their functionality to iOS.
Lately, the Swift team with backing from Apple has introduced the Swift package manager. In short, the Swift package manager is the future of dependency management on Apple platforms. With SPM, there is no central repository such as NPM. Rather, SPM uses url to git repos. Additionally with the release of Xcode 11 this year, developers have built in support for Swift Package Manager in Xcode.</p>
</div>
<!-- /wp:jetpack/markdown --></div></div>
<!-- /wp:group -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>779</wp:post_id>
		<wp:post_date><![CDATA[2020-01-07 11:07:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-01-07 11:07:45]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-01-07 16:07:45]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[How to Learn Swift for Beginners]]></title>
		<link>https://learningswift.brightdigit.com/?p=780</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=780</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>Why Learn Swift?</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>Optimization and Maintenance</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There's a lot of cross platform development tools out there. However, with Swift, you have a language and toolset which Apple designates.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>That is to say Apple knows much more of what's going on behind the scenes. Therefore, whatever abstractions or APIs Apple offers to Swift developers, these allow Apple the greatest flexibility. That is to say Apple has access to the inner workings of your code with the greatest benefit to any device targeted. Additionally with cross-platform tools like React Native, you don’t deal with Apple only but also now Facebook or whatever the open source community maintains the tooling. For this reason, cross-platform tools add an additional layer of complexity and maintain to your app. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>User Experience</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In addition to maintenance and optimization, it’s important to keep user experience in mind. For instance, managers who lack a user experience background may want the same experience on Android and iPhone. On the contrary anybody will tell you that's a really bad idea. That is to say each user base has a set of expectations for how an iPhone or Android should behave.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For instance, the hamburger menu is more common on Android. Similarly there's a global back button on Android, however iPhones  don't have a global back button. In short, actually designing your app once and having an identical user interface on every device is not a great practice. Therefore, you'll need to write a separate user interface for Android and iPhone. For this reason, you may not save much time by using a cross-platform tool. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>When Cross-Platform Makes Sense</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Although native Swift code is preferable, there are cases where a cross-platform tool makes sense.  Generally speaking, depending on the audience of the app, the stage the app is in, and the experience of your team a cross-platform tool is justifiable. For instance if your team develops in JavaScript and you're just testing an idea, it’s worthwhile sticking with JavaScript to build your iPhone app. However, if this is a longterm project, I recommend building your app natively in Swift. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>With that in mind, if you have no experience in Swift, how do you learn swift and what equipment do you need?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>What you need to learn Swift</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>As you begin to learn Swift, you’ll need a capable device to do so.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>How About <em>Hackintosh</em></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you already have a non-Apple device you may be asking whether it’s worth installing macOS on your computer. In short, this kind of computer is referred to as a <em>Hackintosh</em>. Unless you are specifically interested in learning the how to build a <em>Hackintosh</em>, you will be distracted by various issues. In the end for Swift developers, this may not be the best use of your time.  Additionally you can build apps for Windows and Linux in Swift. However unless you are only interested in building Server-Side or Command Line apps in Swift then you will need an Apple device.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Starting with an iPad and Swift Playgrounds</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you want to learn Apple’s API and just play around with code, using Swift Playgrounds on the iPad is a viable option. Along with building a UI there's some tooling for playing around with Bluetooth and various robotics technology. Unfortunately there’s a limit to what you can do which is going to limit you. For instance, you can’t actually build an app in Swift Playgrounds and deliver it to the App Store. All in all, Swift Playgrounds on the iPad is really geared toward educational purposes. In short, it's a great way to get started and play around with the Swift language, especially on a budget especially and you have an iPad lying around. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Getting a Real Mac</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In the end to get an app in the App Store, you will need a Mac. If you don’t need portability and already have a monitor, keyboard, and mouse then a Mac Mini might be the right choice. In the end you may need as little as $200 for a used one. Conversely, if you want to spend a little bit more money and don't have a monitor, there's the iMac. As a matter I own a pretty loaded 27-inch iMac myself and I love it. Most importantly, get enough hard drive storage, make sure it is an SSD, has approximately 2 GHZ processor, supports the latest OS, 8 GB of RAM. Of course a Mac Mini or iMac may save you money, but you may need a MacBook to carry around.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Going Portable</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you are going to need a laptop then I would highly recommend going with a MacBook Pro. If you are willing to get an older computer used MacBook Pro, you can spend as little as $700. For instance, I have a 13 inch that I use and it's four years old and it's great. Most importantly, I wouldn't say I would take not get anything older than 4 years old. Additionally any MacBook Pro at that age is sufficient while the MacBook Air and deprecated MacBook. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Getting Your Mac Ready</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you're going to publish to the app store, you need a developer account in order to do that. Unfortunately, this costs $99 per year. Additionally you need a DUNS number which is completely free. It’s Apple’s way of confirming you are a real company more or less. In any event, let’s get into the fun part - Software.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Xcode - Your Home Base</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The main IDE for developing applications in Swift is Xcode - Xcode is everything. Similar to VisualStudio or Android Studio, it's the main way to develop applications for Apple products. While you can do Swift development in Linux, you cannot build anything for Apple devices such as the iPhone.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The basic bedrock of Xcode are projects. That is to say when you want to start a new app, you will typically start a new project in Xcode. Within a project, there will be the code and other assets. Additionally there is the various configuration files. In short, Xcode uses the these configurations to build targets.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Specifically, a target is a deliverable. Chiefly among targets would be an application. However also included as targets would be: unit tests, libraries, frameworks, or any custom build scripts. Outside of targets and projects are workspaces which allow for developers to group projects.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For instance, if you have a few of related projects for a suite of apps for the iPhone, you may want to group them all together as a workspace. Within your workspace then, you can set up specific settings for debug and release builds. Additionally Xcode allows granularity of those settings based on workspace, project, or target.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>While project or workspace file contains some settings or configuration, there are separate XML files which use Apple's specialized format called a PList. For example, within a Plist, you might set up the text for permission prompts for access to the user’s location or photo library.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Additionally you may setup your main Storyboard file in the Plist file. In short, Storyboard file contains the information needed for your user interface.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Building Your User Interface</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In essence, there are several ways to build a user interface for apps. For those starting out, the primary method is Storyboards. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>Learn Swift with Storyboards</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For instance, you can setup the precise arrangement of widgets like buttons as well as the navigation structure of the application. Correspondingly this is where you can connect various widgets and actions to particular pieces of code. For example, a Storyboard file assigns a button to a property in code. Not to mention, it also assigns the a button tap action to a function. Therefore the developer to make various changes to the user interface such as changing the color or text of the button when the user taps the button.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Unfortunately, Storyboards come with major drawbacks. While I would recommend Storyboards for single developers or those starting out, the underlying XML format is nearly impossible to edit manually and virtually impossible to merge when in a team. Therefore, if you do ever work with Storyboard, split them up as small as possible and make sure that nobody else touches it while you do. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>Coding your User Interface</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Alternatively, Swift does allow the ability to manually build your user interface in code. Specifically if you need to support older operating systems and you are working on a team, this might be the right fit for you. However I would not recommend it for those learning Swift for the first time.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":6} -->
<h6>Learn Swift with SwiftUI</h6>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Conversely if you don’t need to support older operating systems than the newly released Swift UI might be the right choice. With SwiftUI, Apple is shifting from an MVC pattern to a more reactive MVVM pattern. For that reason, if you are familiar with reactive patterns and only interested in developing for the latest OSes, I’d recommend SwiftUI. However, if you want to build something more tried and true than using Storyboards are the best way to go beginners.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Dependency Management</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Outside of your code, there will be some sort of dependency management in order to integrate various libraries and frameworks. When it comes to the most tried and true tools, Cocoapods has the longest history and the widest support. Since it’s introduction during the days of Objective-C many popular libraries such as Firebase rely on Cocoapods for delivering their functionality to iOS. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Lately, the Swift team with backing from Apple has introduced the Swift package manager. In short, the Swift package manager is the future of dependency management on Apple platforms. With SPM, there is no central repository such as NPM. Rather, SPM uses url to git repos. Additionally with the release of Xcode 11 this year, developers have built in support for Swift Package Manager in Xcode.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>780</wp:post_id>
		<wp:post_date><![CDATA[2020-01-07 11:44:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-01-07 11:44:53]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-01-07 16:44:53]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[learn-swift-for-beginners]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[learn swift]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Want Learn More?]]></title>
		<link>https://learningswift.brightdigit.com/?page_id=1098</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?page_id=1098</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:themeisle-blocks/advanced-columns {"id":"wp-block-themeisle-blocks-advanced-columns-85a141d1","columns":1,"layout":"equal"} -->
<div class="wp-block-themeisle-blocks-advanced-columns has-1-columns has-desktop-equal-layout has-tablet-equal-layout has-mobile-equal-layout has-default-gap has-vertical-unset" id="wp-block-themeisle-blocks-advanced-columns-85a141d1"><div class="wp-block-themeisle-blocks-advanced-columns-overlay"></div><div class="innerblocks-wrap"><!-- wp:themeisle-blocks/advanced-column {"id":"wp-block-themeisle-blocks-advanced-column-55624811","columnWidth":"100"} -->
<div class="wp-block-themeisle-blocks-advanced-column" id="wp-block-themeisle-blocks-advanced-column-55624811"><!-- wp:html -->
<!-- Begin Mailchimp Signup Form -->
<link href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css" rel="stylesheet" type="text/css">
<style type="text/css">
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own Mailchimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
</style>
<style type="text/css">
	#mc-embedded-subscribe-form input[type=checkbox]{display: inline; width: auto;margin-right: 10px;}
	#mergeRow-gdpr {margin-top: 20px;}
	#mergeRow-gdpr fieldset label {font-weight: normal;}
	#mc-embedded-subscribe-form .mc_fieldset{border:none;min-height: 0px;padding-bottom:0px;}
</style>
<div id="mc_embed_signup">
<form action="https://brightdigit.us12.list-manage.com/subscribe/post?u=cb3bba007ed171091f55c47f0&amp;id=584d0d5c40" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate="">
    <div id="mc_embed_signup_scroll">
<div class="indicates-required"><span class="asterisk">*</span> indicates required</div>
<div class="mc-field-group">
	<label for="mce-EMAIL">Email Address  <span class="asterisk">*</span>
</label>
	<input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL">
</div>
<div class="mc-field-group">
	<label for="mce-FNAME">First Name </label>
	<input type="text" value="" name="FNAME" class="" id="mce-FNAME">
</div>
<div class="mc-field-group">
	<label for="mce-LNAME">Last Name </label>
	<input type="text" value="" name="LNAME" class="" id="mce-LNAME">
</div>
<div class="mc-field-group input-group">
    <strong>Talk </strong>
    <ul><li><input type="checkbox" value="2048" name="group[20189][2048]" id="mce-group[20189]-20189-0"><label for="mce-group[20189]-20189-0">CodeMash 2020 - How to Get Started with Swift in 2020</label></li>
<li><input type="checkbox" value="4096" name="group[20189][4096]" id="mce-group[20189]-20189-1"><label for="mce-group[20189]-20189-1">UIKonf 2020 - The Multi-Threaded Asynchronous Parallel World of Swift</label></li>
<li><input type="checkbox" value="8192" name="group[20189][8192]" id="mce-group[20189]-20189-2"><label for="mce-group[20189]-20189-2">360iDev 2020 - Combine-ing the Old with the New</label></li>
<li><input type="checkbox" value="16384" name="group[20189][16384]" id="mce-group[20189]-20189-3"><label for="mce-group[20189]-20189-3">Swift Heroes 2020 - Swift Argument Parser is Your Friend</label></li>
<li><input type="checkbox" value="32768" name="group[20189][32768]" id="mce-group[20189]-20189-4"><label for="mce-group[20189]-20189-4">Back to the Mac - Building a Modern Mac App with C++ Libraries</label></li>
<li><input type="checkbox" value="65536" name="group[20189][65536]" id="mce-group[20189]-20189-5"><label for="mce-group[20189]-20189-5">Back to the Mac - Swift Argument Parser is Your Friend</label></li>
<li><input type="checkbox" value="131072" name="group[20189][131072]" id="mce-group[20189]-20189-6"><label for="mce-group[20189]-20189-6">NSSpain 2020 - Swift Packages - Dependency Management of the Future</label></li>
<li><input type="checkbox" value="262144" name="group[20189][262144]" id="mce-group[20189]-20189-7"><label for="mce-group[20189]-20189-7">iOSDevCampDC 2020 - Full Stack Swift - From Server to Watch</label></li>
</ul>
</div>
<div id="mergeRow-gdpr" class="mergeRow gdpr-mergeRow content__gdprBlock mc-field-group">
    <div class="content__gdpr">
        <label>Marketing Permissions</label>
        <p>Please select all the ways you would like to hear from BrightDigit:</p>
        <fieldset class="mc_fieldset gdprRequired mc-field-group" name="interestgroup_field">
		<label class="checkbox subfield" for="gdpr_34225"><input type="checkbox" id="gdpr_34225" name="gdpr[34225]" value="Y" class="av-checkbox "><span>Email</span> </label>
        </fieldset>
        <p>You can unsubscribe at any time by clicking the link in the footer of our emails. For information about our privacy practices, please visit our website.</p>
    </div>
    <div class="content__gdprLegal">
        <p>We use Mailchimp as our marketing platform. By clicking below to subscribe, you acknowledge that your information will be transferred to Mailchimp for processing. <a href="https://mailchimp.com/legal/" target="_blank" rel="noopener noreferrer">Learn more about Mailchimp's privacy practices here.</a></p>
    </div>
</div>
	<div id="mce-responses" class="clear">
		<div class="response" id="mce-error-response" style="display:none"></div>
		<div class="response" id="mce-success-response" style="display:none"></div>
	</div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
    <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_cb3bba007ed171091f55c47f0_584d0d5c40" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
    </div>
</form>
</div>
<script type="text/javascript" src="//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js"></script><script type="text/javascript">(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';fnames[2]='LNAME';ftypes[2]='text';fnames[3]='MMERGE3';ftypes[3]='text';fnames[7]='MMERGE7';ftypes[7]='text';fnames[4]='MMERGE4';ftypes[4]='text';}(jQuery));var $mcj = jQuery.noConflict(true);</script>
<!--End mc_embed_signup-->
<!-- /wp:html --></div>
<!-- /wp:themeisle-blocks/advanced-column --></div></div>
<!-- /wp:themeisle-blocks/advanced-columns -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1098</wp:post_id>
		<wp:post_date><![CDATA[2020-11-22 10:50:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-11-22 10:50:23]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-11-22 15:50:23]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[hwmonitor]]></title>
		<link>https://learningswift.brightdigit.com/swift-dependency-management-spm/hwmonitor/</link>
		<pubDate>Mon, 03 May 2021 13:53:54 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/hwmonitor.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1165</wp:post_id>
		<wp:post_date><![CDATA[2021-05-03 09:53:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-03 13:53:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-03 09:53:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-03 13:53:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[hwmonitor]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1129</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/hwmonitor.gif]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/05/hwmonitor.gif]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1732;s:6:"height";i:838;s:4:"file";s:21:"2021/05/hwmonitor.gif";s:5:"sizes";a:6:{s:6:"medium";a:4:{s:4:"file";s:21:"hwmonitor-300x145.gif";s:5:"width";i:300;s:6:"height";i:145;s:9:"mime-type";s:9:"image/gif";}s:5:"large";a:4:{s:4:"file";s:22:"hwmonitor-1024x495.gif";s:5:"width";i:1024;s:6:"height";i:495;s:9:"mime-type";s:9:"image/gif";}s:9:"thumbnail";a:4:{s:4:"file";s:21:"hwmonitor-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/gif";}s:12:"medium_large";a:4:{s:4:"file";s:21:"hwmonitor-768x372.gif";s:5:"width";i:768;s:6:"height";i:372;s:9:"mime-type";s:9:"image/gif";}s:9:"1536x1536";a:4:{s:4:"file";s:22:"hwmonitor-1536x743.gif";s:5:"width";i:1536;s:6:"height";i:743;s:9:"mime-type";s:9:"image/gif";}s:9:"arke-blog";a:4:{s:4:"file";s:21:"hwmonitor-640x310.gif";s:5:"width";i:640;s:6:"height";i:310;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteground_optimizer_is_optimized]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Understanding Optionals in Swift]]></title>
		<link>https://learningswift.brightdigit.com/understanding-optionals-in-swift/</link>
		<pubDate>Mon, 27 Nov 2017 18:38:25 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=11</guid>
		<description></description>
		<content:encoded><![CDATA[Optionals are a fairly unique concept in Swift. While Objective-C used pointers which could be nil and C# had a Nullable generics type for value types, Swift has an inherent syntax for optionals as well as wrapping and unwrapping them.

<!--more-->
<h2>What is an Null?</h2>
In Objective-C and classic C-style languages, we had pointers for complex data structures. A pointer is really a number pointing to a virtual address in memory. Where is that Foo object? Well your Foo pointer says its at 0x1A45612BE S. Main Street. Great!

However sometimes the pointer call be nil or null or zero. And when you call a function or method, it is a way of answering a question and saying something does not exist as opposed to saying does exist and here is its information.

<hr />

Hey could you tell me about my iPhone?

Yes it is a iPhone 8 Plus Black with 256 GB.

<em>Or</em>

You don’t have one. Null!

<hr />

&nbsp;

Now the question is, how do we do null or nil while abstracting away pointers in our programming language.
<h2>What is Optional?</h2>
By now, many programming languages have shifted away from using pointers and have simply abstracted them away. At this point, a programmer doesn't really care about what specific address a piece of information is stored at? Typically you want the actual info. The problem then is <strong>how can you signify null while still containing that information and not using pointers. </strong>

Most languages assume all objects can be null and should be checked programmatically. However a language like C# doesn’t do this with value types (Int, Float, Char, Structs, etc…). It assumes all value type objects are in fact not null and later created Nullable struct to contain value types as well as a boolean to tell whether the object is null or not.

In many ways Swift is doing something similar and taking it to the next level.<strong> Swift assumes all objects are not nil and if anything could be it would contained in its own Optional (enumeration) container.</strong> This means any parameter, return value, property, etc… needs to be noted as Optional if that value could ever be nil.

Just as C# has a syntax short hand for the Nullable type, Swift does as well using the question mark '?'. Additionally Swift also has a syntax for wrapping and unwrapping these variables as well.
<h2>Optional Chaining</h2>
In Swift, you can easily specify that a variable is optional by using the question mark:

<code>let x: Foo?</code>

In this case, <code>x</code> could contain a Foo or not. What this is called is <strong>wrapping</strong> your variable as optional.

So let’s say we create a struct for an iOS device:
<pre><code class="swift">

struct Device {

  let model: String

  let storage: Int

  let color: UIColor

}

</code></pre>
Great! Now let’s add a static property to get the device information.
<pre><code class="swift">
extension struct Device {

static var current : Device? {

/// code here

/// could return nil if the device is not iOS

}

}
</code></pre>
Notice this returns an <em>optional</em>. So if you run this code on your Mac or perhaps on Linux, you will get nil.

Now, what is nice about Swift is that we have the ability to use optional chaining to get properties. <strong>By using the question mark suffix on a variable, we can safely pull properties from the optional.</strong> Since the variable is optional, that optional gets carried to its properties:
<pre><code>
let model : String? = Device.current?.model

</code></pre>
This optional chaining can be carried through as well. So if the model property were something like this:
<pre><code>
struct Model {

let frontCameraResolution : CGSize?

//...

}

</code></pre>
Then you would do something like this:
<pre><code>
let frontCameraResolution : CGSize? = Device.current?.model?.frontCameraResolution

</code></pre>
So whether you are on a Mac, using Linux, or on an old iPhone with not front-facing camera, your value would be nil.

Now it can get tedious many times to use the question mark suffix and perhaps you just need the value if it is there because another method does not take an optional value. In this case you need to unwrap your optional value.

<strong>This is where <code>if let</code> and <code>guard let … else</code> statements take over. These provide a safe way to convert your optional to an ordinary value and take care of cases where the optional is nil. This is called conditional unwrapping</strong>

The other way and the less safe way is forcible unwrapping and using the exclamation mark.
<h2>Forcibly Unwrapping</h2>
<strong>Most of the time, it is best to catch instances of nil values and through a better error rather than the default <code>unexpectedly found nil</code> error.</strong> However when you must just force an optional to not be an optional there is a way by using the exclamation mark.
<pre><code>
let model : Model = Device.current!.model

</code></pre>
Now we are using an exclamation mark to force the optional value to be just the value. So if we were to run this on a Mac or Linux, it will crash.

<strong>This is typically not recommend. And even if you want it to crash, you may want to do something with that info and create a custom error for to display to the user.</strong>
<h2>Implicitly Unwrapped Optionals</h2>
Just as a question mark is used for optional chaining, that is chaining an optional value to its properties, as well as declaring a variable to be optional, you can declare a variable as an<strong> Implicitly Unwrapped Optional.</strong> For instance:
<pre><code>
let model : Model! = Device.current?.model // no crash here

let frontCameraResolution : CGSize = model.frontCameraResolution // will crash here if nil model

</code></pre>
What this means is that <strong>the <code>model</code> variable will be treated as not optional and will not crash here but rather if <code>model</code> is nil and you access a property on it, it will crash.</strong>

There is one main case where you will see this: properties which can’t be set at initialization but will be set very soon after. The classic example for this is IBOutlets and subviews.
<pre><code>
@IBOutlet weak var subview: UIView!

</code></pre>
If you have a UIViewController which contains a subview property that you’ve linked in a storyboard and that property cannot be set at initialization but needs to be set afterwards in <code>.viewDidLoad()</code>. You can safely assume that variable will be setup since most of your code will be after <code>.viewDidLoad()</code>.

So rather than accessing properties with <code>self.subview?.property</code> you can access the property by simply typing <code>self.subview.property</code>.
<h2>Conclusion</h2>
Swift emphasizes type-safety and Optional are a great example. Getting away from the pointers used in Objective-C, Swift uses optionals to signify whether a value could be nil. The question mark is used for optional chaining to ensure that an optional’s properties remain type-safe and returns optional for those properties.

Rarely you may want to assume that a optional is never nil, then you have the option to use the exclamation mark to forcible unwrap optionals. You can also treat optionals as unwrapped if they never be nil shortly after initialization such as storyboard linked subview. To do this give the property or variable a exclamation suffix on its type.

Ultimately optionals provide a convenient way to keep your code both clean and efficient while being type-safe.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date><![CDATA[2017-11-27 18:38:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-11-27 18:38:25]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-06-08 20:50:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-06-08 20:50:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[understanding-optionals-in-swift]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560418541;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:211;}i:1;a:1:{s:2:"id";i:544;}i:2;a:1:{s:2:"id";i:246;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_6792719]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Simply Fit Garcinia]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[yahaira@get-bitcoins.club]]></wp:comment_author_email>
			<wp:comment_author_url>http://simplyfitsgarcinia.net/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[104.140.243.86]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-05-25 11:25:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-05-25 11:25:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As I web-site possessor I believe the content material here 
is rattling wonderful , appreciate it for your hard work.
You should keep it up forever! Good Luck. http://simplyfitsgarcinia.net/]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Simply Fit Garcinia]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[yahaira@get-bitcoins.club]]></wp:comment_author_email>
			<wp:comment_author_url>http://simplyfitsgarcinia.net/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[104.140.243.86]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-05-25 11:26:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-05-25 11:26:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As I web-site possessor I believe the content material here is rattling wonderful , appreciate it for your hard work.
You should keep it up forever! Good Luck. http://simplyfitsgarcinia.net/]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Alpha Q Pills]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gayle@dietingadvise.club]]></wp:comment_author_email>
			<wp:comment_author_url>http://from-heart-to-heart.org/blog/enlarge-penis-without-using-any-devices-13</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[23.95.224.188]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-06-10 01:58:52]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-06-10 01:58:52]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I simply could not depart your web site prior to suggesting that I actually enjoyed the 
usual information an individual provide for your visitors?

Is going to be back often in order to check out new posts. http://from-heart-to-heart.org/blog/enlarge-penis-without-using-any-devices-13]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[Alpha Q Pills]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gayle@dietingadvise.club]]></wp:comment_author_email>
			<wp:comment_author_url>http://from-heart-to-heart.org/blog/enlarge-penis-without-using-any-devices-13</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[23.95.224.188]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-06-10 01:59:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-06-10 01:59:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I simply could not depart your web site prior to suggesting that I actually enjoyed the usual information an individual provide for your 
visitors? Is going to be back often in order to check out new posts. http://from-heart-to-heart.org/blog/enlarge-penis-without-using-any-devices-13]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[HealthKit - Getting Started - HKObjectType and Authorization]]></title>
		<link>https://learningswift.brightdigit.com/healthkit-getting-started/</link>
		<pubDate>Fri, 25 May 2018 08:05:29 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=23</guid>
		<description></description>
		<content:encoded><![CDATA[HealthKit is the most important API when it comes to building health, fitness and workout apps. HealthKit also has many intricacies and details which need introduction when getting started.

The data structures encourage precision while having the flexibility to store a variety of values. The way it asks users give app access HealthKit will probably be similar with many iOS developers. HealthKit follows many patterns in other iOS APIs such as Core Location or Core Data. At the same time it uses newer programming techniques and newer technology.

<!--more-->
<h2>Why I Am Building a Workout App</h2>
As an independent software developer, exercise is an important part of my schedule. It keeps me healthy, my mind active, and my body stimulated.

In order to make the most of my time, I started looking into <strong><a href="https://en.m.wikipedia.org/wiki/High-intensity_interval_training" target="_blank" rel="noopener">High-intensity interval training</a></strong>. <strong>High-intensity interval training</strong> has many benefits but the main strategy is to switch between breif periods of high levels and low levels for an extended period of time.

For instance, I’ve started exercising on the stair stepper for 30 minutes. In that period of time, I’ll alternative the speed on the machine to get my heart rate to fluctuate between  150 and 125 beats per minute - for 15 - 30 seconds each. Right now I use the built-in Workout app on my Apple Watch and check my heart rate throughout my exercise.

[caption id="attachment_33" align="alignnone" width="1024"]<img class="wp-image-33 size-large" src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/IMG_208F0706D0D0-1-1024x534.jpeg" alt="" width="1024" height="534" /> An example of one of my workouts. Notice how fluctuate my heart rate with the intensity of the workout.[/caption]

However<strong> a custom app which could notify me of when I reach certain heart rates for a period of time would be better.</strong> As an Apple Watch owner, who has built his fair share of apps for the Apple Watch since day one, this presents itself as a great opportunity to learn more about HealthKit.
<h2>HealthKit Structure - QuantityTypes and WorkoutTypes</h2>
One of the key classes in HealthKit is <code>HKObjectType</code>. <code>HKObjectType</code> is the base class which defines different data types. For instance in the case of heart rate, will be a <code>HKQuantitiyType</code> . To access specific types, call <code>HKQuantity.quantityType(forIdentifier: HKQuantityTypeIdentifier)</code> with the correct <code>HKQuantityTypeIdentifier</code> . For instance to get the heart rate <code>HKQuantityType</code>:
<code>HKObjectType.quantityType(forIdentifier: .heartRate)
</code>Another <code>HKObjectType</code> is <code>HKWorkoutType</code>, which is accessed by calling <code>HKObjectType.workoutType()</code>.

[caption id="attachment_41" align="aligncenter" width="800"]<img class="wp-image-41 size-full" src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/diagram.png" alt="" width="800" height="275" /> HKObjectType Hierarchy[/caption]

The first thing we are going to use with these types is request permission from the user to read and write to HealthKit.
<h2>Requesting Authorization in HealthKit</h2>
One thing Apple tries to do their best at is making sure the user gives permission to various APIs. Just as with location info and notifications, <strong>the user must allow an app permission in order to access HealthKit</strong>.

The first thing which needs to be done, is to check if HealthKit is available by calling <code>HKHealthStore.isHealthDataAvailable()</code>. If HealthKit is unavailable (such as on the IPad), deliver a notice to the user.

Next get access to HealthKit via the class, <code>HKHealthStore</code>. Call <code>HKHealthStore()</code> to instantiate an object to use throughout your app. With the <code>HKHealthStore</code> object, request authorization through the <code>.requestAuthoriation(toShare:, read:, completion:)</code> method. The <code>toShare</code> and <code>read</code> parameters take an optional <code>Set</code> of <code>HKSampleType</code> (<code>HKObjectType</code> subclass for data samples) to write and an optional <code>Set</code> of <code>HKObjectType</code> to read from.

[caption id="attachment_42" align="aligncenter" width="505"]<img class="wp-image-42" src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/05/Artboard-1-253x300.png" alt="" width="505" height="600" /> Diagram of Requesting Authorization[/caption]

<strong>Whenever this method with new </strong><code>HKObjectType</code><strong> or </strong><code>HKSampleType</code><strong> objects (such as the first time the app is run), the permission screen is shown.</strong>
<code>requestAuthoriation</code> is an asynchronous method, which means the <code>completion</code> is called once the request has been completed. The <code>completion</code>  closure is where you'd begin to interact with the user and begin queries for data.

Let’s take a look at how to properly with request authorization.
<pre><code>if HKHealthStore.isHealthDataAvailable() {
  let healthStore = HKHealthStore()
  let heartRateQuantityType = HKObjectType.quantityType(forIdentifier: .heartRate)!
  let allTypes = Set([HKObjectType.workoutType(),
                      heartRateQuantityType
    ])
  healthStore.requestAuthorization(toShare: nil, read: allTypes) { (result, error) in
    if let error = error {
      // deal with the error
      return
    }
    guard result else {
      // deal with the failed request 
      return
    }
    // begin any necessary work if needed
  }
}
</code></pre>
<h2>Conclusion</h2>
HealthKit is a complex but an easily workable API for building workout and health app.
<ul>
 	<li><code>HKObjectType</code> - the base class for HealthKit data.</li>
 	<li><code>HKHealthStore</code> - the access point for requesting authorization to read and data.</li>
 	<li><code>.requestAuthoriation(toShare:, read:, completion:)</code> - requests authorization of what data to read and write on a <code>HKHealthStore</code> object.</li>
 	<li>When any change is made to the authorization requested, the permission sheet will show.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date><![CDATA[2018-05-25 08:05:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-05-25 08:05:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-07-17 18:32:18]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-07-17 18:32:18]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[healthkit-getting-started]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="healthkit"><![CDATA[HealthKit]]></category>
		<category domain="post_tag" nicename="smarthiit"><![CDATA[Smart Intensity]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560375541;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:73;}i:1;a:1:{s:2:"id";i:544;}i:2;a:1:{s:2:"id";i:74;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_draft_secret_key]]></wp:meta_key>
		<wp:meta_value><![CDATA[TGVV9J]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[37]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
		<wp:meta_value><![CDATA[HealthKit]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[HealthKit]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[HealthKit is the most important API when it comes to building health, fitness and workout apps. HealthKit also has many intricacies and details which need introduction when getting started such as HKObjectType and HKHealthStore.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[88]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_6792719]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Дайджест интересных материалов для мобильного разработчика #255 (28 мая — 3 июня) - Новини дня]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://ukr-news.ml/2018/06/%d0%b4%d0%b0%d0%b9%d0%b4%d0%b6%d0%b5%d1%81%d1%82-%d0%b8%d0%bd%d1%82%d0%b5%d1%80%d0%b5%d1%81%d0%bd%d1%8b%d1%85-%d0%bc%d0%b0%d1%82%d0%b5%d1%80%d0%b8%d0%b0%d0%bb%d0%be%d0%b2-%d</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[195.16.88.10]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-06-03 12:16:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-06-03 12:16:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Ads• Apple даст разработчикам расширенный доступ к NFC•  Начинаем работать с HealthKit•  Распространенные ошибки iOS-разработчиков•  Как [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[HealthKit – Apple Watch – Data and Authorization - Learning Swift]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://learningswift.brightdigit.com/healthkit-apple-watch-data-authorization/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[70.32.18.158]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-06-11 09:37:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-06-11 09:37:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Apple Watch has become the premier device for health, fitness, and workout tracking. So now that authorization is setup on the iPhone, let&#8217;s take a look at how get authorization setup on the Apple [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[WWDC 2018 - Swift 4.2 and  "Random" Changes]]></title>
		<link>https://learningswift.brightdigit.com/swift-4-2-random-changes-wwdc-2018/</link>
		<pubDate>Tue, 05 Jun 2018 02:07:17 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=57</guid>
		<description></description>
		<content:encoded><![CDATA[With WWDC 2018, Swift 4.2 <a href="https://github.com/apple/swift-evolution/blob/master/proposals/0202-random-unification.md">has introduced</a> new ways to generate and access random values from a collection. Often times, app developers will do this when building games or creating test data. Let's take a look at the old way and the new way to access random items.

<!--more-->
<h2>Random Access and Legacy APIs</h2>
In the beginning, Swift was dependent on old system-level C libraries to generate random numbers. On Apple devices, this is done through the Darwin function <code>arc4random_uniform</code>. While it does do what you want, it requires a lot of work for types besides <code>UInt32</code>. For instance if you need to build a floating-point number, you would need to:
<pre><code>let minimum = -7.9</code></pre>
<pre><code>let maximum = 12.8</code></pre>
<pre><code>let doubleValue = (Double(arc4random_uniform(UInt32.max)) / Double(UInt32.max)) * (maximum - minimum) + minimum</code></pre>
This has led several developers to build packages to simplify this process.
<h2>RandomKit and Simplifying Random Generation</h2>
<a href="https://github.com/nvzqz/RandomKit">RandomKit is one library</a> which has done a great job simplifying that. Each simple type has a static function for generating a value based on a type of generator supplied:
<pre><code>let value = Int.random(using: &amp;Xoroshiro.default)</code></pre>
A generator implements the <code>RandomGenerator</code> protocol which provides the implementation needed to generate a value.

RandomKit also supplies methods for:
<ul>
 	<li>picking random values from an Array</li>
 	<li>shuffling Arrays</li>
 	<li>generating other types like Date, (NS/UI)Color, CGPoint and more</li>
</ul>
<h2>Swift 4.2 and WWDC 2018</h2>
Proposal <a href="https://github.com/apple/swift-evolution/blob/master/proposals/0202-random-unification.md" target="_blank" rel="nofollow noopener">SE-0202</a> seems to be fixing a lot of the inconsistencies which come with random generation and access across operating system (Linux vs macOS) as well as simplifying the API. It also seems to be taking an approach similar to RandomKit. For instance to generate a random Double within a range, all that needs to be done is:
<pre><code>Double.random(in: -7.9...12.8)</code></pre>
No more conversions or calculations need to take place.

Like RandomKit, a <a href="https://developer.apple.com/documentation/swift/randomnumbergenerator"><code>RandomNumberGenerator</code></a> can be supplied as an argument which customizes the way the number is generated. Also like RandomKit, a random element can be selected with <a href="https://developer.apple.com/documentation/swift/array/2994747-randomelement"><code>Array.randomElement</code></a>.
<h2>Conclusion</h2>
It seems like a majority of the improvements which were needed for random generation and access have been implemented. There is still room for more complex libraries like RandomKit and the hope is that they implement these new APIs in the future. In the future it's best to use the new APIs and avoid needed the legacy APIs for random number generation in your app or tests.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date><![CDATA[2018-06-05 02:07:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-05 02:07:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-06-08 20:48:59]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-06-08 20:48:59]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[swift-4-2-random-changes-wwdc-2018]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="wwdc-2018"><![CDATA[WWDC 2018]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[58]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
		<wp:meta_value><![CDATA[WWDC]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[WWDC]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[58]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[With WWDC 2018, Swift 4.2 has introduced new ways to generate random values and access random values from a collection. Included with Xcode 10, there is access to generating random numbers of various types and accessing items from collections.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560376556;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:73;}i:1;a:1:{s:2:"id";i:211;}i:2;a:1:{s:2:"id";i:544;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_draft_secret_key]]></wp:meta_key>
		<wp:meta_value><![CDATA[89C0n7]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_6792719]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_is_cornerstone]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[HealthKit Workout Session with HKLiveWorkoutBuilder]]></title>
		<link>https://learningswift.brightdigit.com/hkliveworkoutbuilder-healthkit-workout-session/</link>
		<pubDate>Mon, 18 Jun 2018 11:23:18 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=73</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>We have setup <a rel="noopener noreferrer" href="https://learningswift.brightdigit.com/healthkit-getting-started/" target="_blank">the iPhone to request authorization</a> and <a rel="noopener noreferrer" href="https://learningswift.brightdigit.com/healthkit-apple-watch-data-authorization/" target="_blank">the Apple Watch</a>. Let's begin a workout and track the user's heart rate with&nbsp;<code><a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkliveworkoutbuilder?changes=_9" target="_blank">HKLiveWorkoutBuilder</a></code>. In short, <a rel="noreferrer noopener" href="https://developer.apple.com/documentation/healthkit/hkliveworkoutbuilder?changes=_9" target="_blank">HKLiveWorkoutBuilder</a> simplifies the way we track health data during workouts.</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:heading -->
<h2>Starting a HKWorkoutSession</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To start a workout, you'll need the <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkhealthstore" target="_blank"><code>HKHealthStore</code></a>, which was<a href="https://learningswift.brightdigit.com/healthkit-getting-started/"> instantiated in the first step</a>, as well as the <code><a rel="noreferrer noopener" aria-label="HKWorkoutConfiguration (opens in a new tab)" href="https://developer.apple.com/documentation/healthkit/hkworkoutconfiguration" target="_blank">HKWorkoutConfiguration</a></code>&nbsp;which defines the <a rel="noreferrer noopener" aria-label="activity type (opens in a new tab)" href="https://developer.apple.com/documentation/healthkit/hkworkoutconfiguration/1649492-activitytype" target="_blank">activity type</a> and<a rel="noreferrer noopener" aria-label=" location type (opens in a new tab)" href="https://developer.apple.com/documentation/healthkit/hkworkoutconfiguration/1649491-locationtype" target="_blank"> location type</a> of the workout you are doing. With those you can create the <code><a href="https://developer.apple.com/documentation/healthkit/hkworkoutsession/2962933-init" target="_blank" rel="noreferrer noopener" aria-label="HKWorkoutSession (opens in a new tab)">HKWorkoutSession</a></code> with:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>func startWorkoutWithHealthStore(_ healthStore: HKHealthStore, 
                                 andActivityType activityType: HKWorkoutActivityType
                                ) -> HKWorkoutSession {
  let configuration = HKWorkoutConfiguration()
  configuration.activityType = activityType
  
  let session : HKWorkoutSession
  do {
    session = try HKWorkoutSession(healthStore: healthStore, configuration: configuration)
  } catch let error {
    // let the user know about the error
    return
  }
  
  session.startActivity(with: Date())
  self.session = session
  self.healthStore = healthStore
  return session  
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Since this call can throw an error, be sure to catch and handle that error properly. When the workout is completed you simply call <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkhealthstore/1627957-end" target="_blank"><code>session.end()</code></a>&nbsp;to end the workout session.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To listen to workout state changes, implement the delegate <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkworkoutsessiondelegate" target="_blank"><code>HKWorkoutSessionDelegate</code></a> and the method <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkworkoutsessiondelegate/1627958-workoutsession" target="_blank"><code>workoutSession(HKWorkoutSession, didChangeTo: HKWorkoutSessionState, fromState: HKWorkoutSessionState, date: Date)</code></a>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>func workoutSession(_ workoutSession: HKWorkoutSession, 
    didChangeTo toState: HKWorkoutSessionState, 
    from fromState: HKWorkoutSessionState, 
    date: Date) {

    DispatchQueue.main.async {
      // based on the change update the UI on the main thread
    }
  }</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>Observing Changes  </h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To track health data, you are going to want to use one of the plethora of <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkquery" target="_blank"><code>HKQuery</code></a>&nbsp;types but most likely a combination of <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkobserverquery" target="_blank"><code>HKObserverQuery</code></a>&nbsp;and <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hksamplequery" target="_blank"><code>HKSampleQuery</code></a>. The <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkobserverquery" target="_blank"><code>HKObserverQuery</code></a>&nbsp;will indicate when a change has been made. <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hksamplequery" target="_blank"><code>HKSampleQuery</code></a>&nbsp;will query the actual values.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  func observerQuery(_ query: HKObserverQuery, 
                     hasCompleted completed: HKObserverQueryCompletionHandler, 
                     withError error: Error?) {
    guard let healthStore = self.healthStore else {
      #warning("Throw Error Message to User if no healthStore available")
      return
    }
    guard let sampleType = query.objectType as? HKSampleType else {
      completed()
      return
    }
    // only query for the latest value
    let sort = [
      NSSortDescriptor(key: HKSampleSortIdentifierStartDate, ascending: false)
    ]
    let sampleQuery = HKSampleQuery(sampleType: sampleType, predicate: nil, limit: 1, sortDescriptors: sort, resultsHandler: self.sampleQuery)
    
    healthStore.execute(sampleQuery)
    
  }
  
  func sampleQuery(_ query: HKSampleQuery, 
                   withSamples samples: [HKSample]?, 
                   andError error: Error?) {
    guard let quantityType = query.objectType as? HKQuantityType else {
      return
    }
    
    if let error = error {
      #warning("Theres an error with the query")
      return
    }
    
    guard let sample = samples?.first as? HKQuantitySample else {
      #warning("Theres no sample with the query.")
      return
    }
    
    DispatchQueue.main.async {
      // update the UI here
    }
  }  </code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>When the workout is started, we begin the set of <a href="https://developer.apple.com/documentation/healthkit/hkobserverquery" target="_blank" rel="noopener noreferrer"><code>HKObserverQueries</code></a>. In our callback, <code>observerQuery(HKObserverQuery, hasCompleted: HKObserverQueryCompletionHandler,                      withError: Error?)</code>, if the <a href="https://developer.apple.com/documentation/healthkit/hkquery/1614768-objecttype" target="_blank" rel="noopener noreferrer"><code>objectType</code></a> is a <a href="https://developer.apple.com/documentation/healthkit/hksampletype" target="_blank" rel="noopener noreferrer"><code>HKSampleType</code></a> then we create a <a href="https://developer.apple.com/documentation/healthkit/hksamplequery" target="_blank" rel="noopener noreferrer"><code>HKSampleQuery</code></a> for the latest sample from that data.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>On the <a href="https://developer.apple.com/documentation/healthkit/hksamplequery" target="_blank" rel="noopener noreferrer"><code>HKSampleQuery</code></a> callback, <code>sampleQuery(HKSampleQuery, withSamples: [HKSample]?, andError: Error?)</code>, we get the quantity from the sample and update the UI on the main thread with that data .</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>HKLiveWorkoutBuilder</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While the process, isn't the most complicated, the frequency of results its very often. Luckily, <code><a rel="noreferrer noopener" href="https://developer.apple.com/documentation/healthkit/hkliveworkoutbuilder?changes=_9" target="_blank">HKLiveWorkoutBuilder</a></code> simplifies the process while giving the app more frequent data. In short, <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkworkoutbuilder" target="_blank"><code>HKWorkoutBuilder</code></a> and its watchOS specific version <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkliveworkoutbuilder?changes=_9" target="_blank"><code>HKLiveWorkoutBuilder</code></a> makes it easy to build workouts, start them, and track data during a workout.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>From WWDC 2018, we see a few changes made in the API with how to create and start a  <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkworkoutsession" target="_blank"><code>HKWorkoutSession</code></a>. However the main change is in how the we are creating a <code>HKLiveWorkoutBuilder</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  func startWorkoutWithHealthStore(_ healthStore: HKHealthStore, andActivityType activityType: HKWorkoutActivityType, withSampleTypes sampleTypes: [HKSampleType]) -> HKWorkoutSession {
    let configuration = HKWorkoutConfiguration()
    configuration.activityType = activityType
    
    let session : HKWorkoutSession
    do {
      session = try HKWorkoutSession(healthStore: healthStore, configuration: configuration)
    } catch let error {
      // let the user know about the error
      return
    }

    let builder = session.associatedWorkoutBuilder()
    builder.delegate = self
    builder.dataSource = HKLiveWorkoutDataSource(healthStore: healthStore, workoutConfiguration: configuration) 
    session.delegate = self

    self.builder = builder
    self.session = session
    self.healthStore = healthStore

    session.startActivity(with: Date())

    builder.beginCollection(withStart: Date()) { (success, error) in
      // do something when the data collection begins
    }

    return session  
  }</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As you can see we are passing a delegate to the&nbsp;<a href="https://developer.apple.com/documentation/healthkit/hkliveworkoutbuilder?changes=_9" target="_blank" rel="noopener noreferrer"><code>HKLiveWorkoutBuilder</code></a>. This is so we can collect health data as the workout progresses.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  func workoutBuilder(_ workoutBuilder: HKLiveWorkoutBuilder, 
    didCollectDataOf collectedTypes: Set&lt;HKSampleType>) {
    
    for sampleType in collectedTypes {
      if let quantityType = sampleType as? HKQuantityType {
        guard let statistic = workoutBuilder.statistics(for: quantityType) else {
          continue
        }
        guard let quantity = statistic.mostRecentQuantity() else {
          continue
        }
        DispatchQueue.main.async {
          // update the UI based on the most recent quantitiy
        }
      } else {
        // handle other HKSampleType subclasses
      }
    }
  }</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In the method <a href="https://developer.apple.com/documentation/healthkit/hkliveworkoutbuilderdelegate/2962897-workoutbuilder?changes=_9" target="_blank" rel="noopener noreferrer"><code>workoutBuilder(HKLiveWorkoutBuilder, didCollectDataOf: Set)</code></a>, you can update the UI based on the data collected. For <a href="https://developer.apple.com/documentation/healthkit/hkquantitytype" target="_blank" rel="noopener noreferrer"><code>HKQuantityType</code></a>, you can access the data by calling <a href="https://developer.apple.com/documentation/healthkit/hkworkoutbuilder/2962922-statistics" target="_blank" rel="noopener noreferrer"><code>HKWorkoutBuilder.statistics(for: HKQuantityType)</code></a>. An <a href="https://developer.apple.com/documentation/healthkit/hkstatistics" target="_blank" rel="noopener noreferrer"><code>HKStatistics</code></a> object contains a variety of statistical info and in watchOS 5 added the method <a href="https://developer.apple.com/documentation/healthkit/hkstatistics/2962900-mostrecentquantity" target="_blank" rel="noopener noreferrer"><code>HKStatistics.mostRecentQuantity()</code></a> which returns the most recent value. If you only need the most recent data, you can update your UI with that data on the main thread.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Conclusion</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The ability to create, manage, and track workouts in watchOS is simpler with HKWorkoutBuilder</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkworkoutsessiondelegate" target="_blank"><code>HKWorkoutSessionDelegate</code></a> allows you track the state of the workout session and update the UI accordingly.</li><li>You can track the health data using a combination of <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkobserverquery" target="_blank"><code>HKObserverQuery</code></a> and other <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hkquery" target="_blank"><code>HKQuery</code></a> subclasses such as <a rel="noopener noreferrer" href="https://developer.apple.com/documentation/healthkit/hksamplequery" target="_blank"><code>HKSampleQuery</code></a> to query <code>HKSample</code> data.</li><li>However, <code>HKLiveWorkoutBuilder</code> allows you to collect the workout data more frequently without needing to use queries.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>If you are interested in learning more, watch <a rel="noopener noreferrer" href="https://developer.apple.com/videos/play/wwdc2018/707" target="_blank">the presentation, New Ways to Work with Workouts&nbsp;from WWDC 2018.</a>&nbsp;For more info on how to develop with HealthKit, take a look at our <a href="https://learningswift.brightdigit.com/category/healthkit/">recent posts here</a>&nbsp;and for <a href="https://mailchi.mp/29b439ff4ce6/learning-swift-newsletter" target="_blank" rel="noreferrer noopener" aria-label="sign up for updates here. (opens in a new tab)">sign up for updates here.</a></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date><![CDATA[2018-06-18 11:23:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-18 11:23:18]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-01-08 17:07:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-01-08 22:07:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[hkliveworkoutbuilder-healthkit-workout-session]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="healthkit"><![CDATA[HealthKit]]></category>
		<category domain="post_tag" nicename="smarthiit"><![CDATA[Smart Intensity]]></category>
		<category domain="category" nicename="wwdc-2018"><![CDATA[WWDC 2018]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560394326;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:23;}i:1;a:1:{s:2:"id";i:74;}i:2;a:1:{s:2:"id";i:57;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_619abae2ddced3b27834ea58b0d351d5]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_05dfebfc514abc0dfeb86b75db705c8c]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_41d488008013d6e6a3fe0ab315b99c25]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
		<wp:meta_value><![CDATA[workout]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[HKLiveWorkoutBuilder]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[HKLiveWorkoutBuilder simplifies the way we track health data during workouts. Let's begin a workout and track the user's heart rate.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_draft_secret_key]]></wp:meta_key>
		<wp:meta_value><![CDATA[sfVowH]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018-06-15]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_6792719]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_is_cornerstone]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[wwdc-2018-healthkit-workout-hkliveworkoutbuilder]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-73]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[HealthKit – Apple Watch – Data and Authorization]]></title>
		<link>https://learningswift.brightdigit.com/healthkit-apple-watch-data-authorization/</link>
		<pubDate>Mon, 11 Jun 2018 09:34:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=74</guid>
		<description></description>
		<content:encoded><![CDATA[The Apple Watch has become the premier device for health, fitness, and workout tracking. So now that <a href="https://learningswift.brightdigit.com/healthkit-getting-started/" target="_blank" rel="noopener">authorization is setup on the iPhone,</a> let's take a look at how get authorization setup on the Apple Watch.

<!--more-->
<h2>Authorization on the Apple Watch</h2>
Just as on the iPhone, the code will be pretty much identical on the Apple Watch when it comes to asking for authorization:
<pre><code>if HKHealthStore.isHealthDataAvailable() {
  let healthStore = HKHealthStore()
  let heartRateQuantityType = HKObjectType.quantityType(forIdentifier: .heartRate)!
  let allTypes = Set([HKObjectType.workoutType(),
                      heartRateQuantityType
    ])
  healthStore.requestAuthorization(toShare: nil, read: allTypes) { (result, error) in
    if let error = error {
      // deal with the error
      return
    }
    guard result else {
      // deal with the failed request 
      return
    }
    // begin any necessary work if needed
  }
}
</code></pre>
<strong>However, the Apple Watch does not contain a way for the user to grant access.</strong> So what this method will do is prompt the user to go to their iPhone and grant access. This will be through the Health app as the user did previously on the iPhone example.

<img class="size-full wp-image-76 aligncenter" src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/06/Simulator-Screen-Shot-Apple-Watch-Series-3-38mm-2018-06-08-at-14.36.24.png" alt="" width="272" height="486" />

On the iPhone app, a method will need to be implemented in order to listen to this request and prompt the user with the authorization request. This is where <code><a href="https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622998-applicationshouldrequesthealthau" target="_blank" rel="noopener">AppDelegate.applicationShouldRequestHealthAuthorization</a></code> comes in. On the <code>AppDelegate</code>. implement <a href="https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622998-applicationshouldrequesthealthau" target="_blank" rel="noopener"><code>applicationShouldRequestHealthAuthorization</code></a> and call <a href="https://developer.apple.com/documentation/healthkit/hkhealthstore/1614153-handleauthorizationforextension" target="_blank" rel="noopener"><code>HKHealthKit.handleAuthorizationForExtension</code></a>.
<pre><code>@UIApplicationMain
class AppDelegate: UIResponder, UIApplicationDelegate {

  ...

  func applicationShouldRequestHealthAuthorization(_ application: UIApplication) {
    let healthStore = HKHealthStore()
    healthStore.handleAuthorizationForExtension { (success, error) -&gt; Void in
      
    }
  }
}
</code></pre>
Now whenever the request for authorization is made on the Apple Watch and with new <code>HKObjectType</code> or <code>HKSampleType</code> objects (such as the first time the app is run), the iPhone will prompt the user with the request.

[caption id="attachment_89" align="aligncenter" width="640"]<img class="wp-image-89 size-full" src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/06/ezgif.com-gif-maker.gif" alt="iPhone and Apple Watch Simulation of Health Data Authorization" width="640" height="640" /> this is what it should look like[/caption]

After the prompt is completed by the user, the <code>requestAuthorization</code> callback on the Apple Watch will be called and from there, the usual code can begin.
<h2>Conclusion</h2>
The Apple Watch is a very powerful device for getting health data. To Apple's credit, they are protective of user's data and want to make sure that users are giving that authorization. Since the Apple Watch does not have the UI to grant that authorization, the API requires the Apple Watch to:
<ul>
 	<li>let the user know they need to grant that permission on the iPhone</li>
 	<li>prompt the user with the Health authorization dialog on the iPhone</li>
 	<li>make the call once the authorization is complete on the iPhone</li>
 	<li>handle the result of the authorization from the iPhone on the Apple Watch</li>
</ul>
Following these steps correctly and the app can implement a variety of powerful health, workout and fitness features.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date><![CDATA[2018-06-11 09:34:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-11 09:34:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-07-17 18:32:18]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-07-17 18:32:18]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[healthkit-apple-watch-data-authorization]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="healthkit"><![CDATA[HealthKit]]></category>
		<category domain="post_tag" nicename="smarthiit"><![CDATA[Smart Intensity]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
		<wp:meta_value><![CDATA[Apple Watch]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Apple Watch]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[81]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[The Apple Watch has become the premier device for health monitoring. So now that authorization is setup on the iPhone, let's take a look at how get authorization setup on the Apple Watch.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560319017;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:23;}i:1;a:1:{s:2:"id";i:73;}i:2;a:1:{s:2:"id";i:506;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_draft_secret_key]]></wp:meta_key>
		<wp:meta_value><![CDATA[sfIBB2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_6792719]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_mess]]></wp:meta_key>
		<wp:meta_value><![CDATA[implementing authorization #watchOS Apple Watch #healthkit @swiftlang]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[MicroConf and building an app for the Apple Watch on iPhreaks]]></title>
		<link>https://learningswift.brightdigit.com/iphreaks-podcast-guest/</link>
		<pubDate>Wed, 20 Jun 2018 21:26:10 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=132</guid>
		<description></description>
		<content:encoded><![CDATA[Leo Dion from BrightDigit was recently a guest on the <a href="https://devchat.tv/iphreaks/ips-244-microconf-writing-health-apps-for-apple-watch">podcast iPhreaks</a> discussing <a href="https://www.microconf.com/">MicroConf</a>, customer discovery, info products, <a href="http://brightdigit.com/meetups/" target="_blank" rel="noopener noreferrer">meetups</a>, and <a href="https://learningswift.brightdigit.com/category/healthkit/" target="_blank" rel="noopener noreferrer">building an exercise app for the Apple Watch</a>.
<blockquote>In today’s episode, the iPhreaks panel talk to Leo Dion about MicroConf and writing apps for Apple Watch. Leo has been a developer for almost two decades and six years ago he created his own company called <a href="http://brightdigit.com/"><span class="s2">BrightDigit</span></a>. He mostly focuses his time and energy to the Apple space and enjoys developing apps for the iPhone, iPad, and the Apple Watch. They talk about what happens at <a href="https://www.microconf.com/"><span class="s2">MicroConf</span></a>, what he is working on now, tips for starting a meetup, and more!</blockquote>
You can check out the episode <a href="https://devchat.tv/iphreaks/ips-244-microconf-writing-health-apps-for-apple-watch" target="_blank" rel="noopener noreferrer">here</a>.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>132</wp:post_id>
		<wp:post_date><![CDATA[2018-06-20 21:26:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-20 21:26:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-01-08 15:04:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-01-08 20:04:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[iphreaks-podcast-guest]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_format" nicename="link"><![CDATA[Link]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@brightdigit]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a54a2bc3d0368604c4653d9fd63a5dbd]]></wp:meta_key>
		<wp:meta_value><![CDATA[<blockquote class="wp-embedded-content" data-secret="v6hwTMdkVs"><a href="https://devchat.tv/iphreaks/ips-244-microconf-writing-health-apps-for-apple-watch">iPS 244: MicroConf &#038; Writing Health Apps for Apple Watch</a></blockquote><iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" style="position: absolute; clip: rect(1px, 1px, 1px, 1px);" src="https://devchat.tv/iphreaks/ips-244-microconf-writing-health-apps-for-apple-watch/embed#?secret=v6hwTMdkVs" data-secret="v6hwTMdkVs" width="600" height="338" title="&#8220;iPS 244: MicroConf &#038; Writing Health Apps for Apple Watch&#8221; &#8212; Devchat.tv" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_a54a2bc3d0368604c4653d9fd63a5dbd]]></wp:meta_key>
		<wp:meta_value><![CDATA[1529529483]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[133]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Leo Dion from BrightDigit was recently a guest on the podcast iPhreaks discussing MicroConf, customer discovery, info products, meetups, and building an exercise app for the Apple Watch. ]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[medium_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_heateor_sc_meta]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"37550b67d263a3ce789993dc25046c5f";a:2:{s:7:"expires";i:1578556944;s:7:"payload";a:6:{i:0;a:1:{s:2:"id";i:1454;}i:1;a:1:{s:2:"id";i:1724;}i:2;a:1:{s:2:"id";i:1712;}i:3;a:1:{s:2:"id";i:1616;}i:4;a:1:{s:2:"id";i:1851;}i:5;a:1:{s:2:"id";i:1690;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Swift Thoughts on try!Swift NYC 2018]]></title>
		<link>https://learningswift.brightdigit.com/swift-thoughts-tryswift-nyc-2018/</link>
		<pubDate>Thu, 06 Sep 2018 18:46:52 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=158</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>I have to say I had a great time at <a href="https://www.tryswift.co/events/2018/nyc/">try!Swift New York</a> this year. I have been to many developer conferences over the years but lately I have been attending mostly business and startup conferences (i.e. <a href="https://www.microconf.com">MicroConf</a> and <a href="https://releasenotes.tv">Release Notes</a>).</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:paragraph -->
<p>Additionally, this is the first Apple developer conference I have ever attended as opposed to <a href="https://www.meetup.com/Lansing-CocoaHeads/">hosting</a>, attending, and <a href="https://www.meetup.com/A2-CocoaHeads/events/246212307/">speaking</a> at a Cocoaheads groups. This was a new environment.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>I wanted to get a feel of where the winds are blowing in Swift and there were some interesting trends to the topics presented:</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>ARKit and CoreML</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Big surprise right! 🙃</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Apple has been showcasing and backing these technologies for a while. Except for my occasional attempts at creating models, I haven't been doing enough in this area and these talks reinforce my need to do so. <a href="https://twitter.com/tryswiftnyc" target="_blank" rel="noreferrer noopener">Aileen Nielsen</a> really broke down how Machine Learning works. <a href="https://twitter.com/bertadevant" target="_blank" rel="noreferrer noopener">Berta Devant</a> explained how ARKit does face tracking and can be used. <a href="https://twitter.com/mataharimau" target="_blank" rel="noreferrer noopener">Audrey Tam</a> explained how to build your own model using Apple's new tools. <a href="https://twitter.com/kenmaz" target="_blank" rel="noreferrer noopener">Kentaro Matsumae</a> showed a great application using his <em>Super Resolution</em> technique. Overall the need to invest time in Machine Learning technology will continue to grow.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Swift on the Server</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Swift on the server is real and there is real corporate backing to it. I happen to attend the workshop by IBM on <a href="https://www.kitura.io">Kitura</a> and got a glimpse of how to develop and deploy with Docker and Kubernetes. <a href="https://twitter.com/gopalkri" target="_blank" rel="noreferrer noopener">Gopal Sharma</a> spoke about the challenges he's faced with Swift on the server. <a href="https://twitter.com/johannesweiss" target="_blank" rel="noreferrer noopener">Johannes Weiss</a> spoke about <a href="https://github.com/apple/swift-nio">SwiftNIO</a> which is the future of client and server side communication. <a href="https://twitter.com/Chris__Bailey" target="_blank" rel="noreferrer noopener">Chris Bailey</a> &amp; <a href="https://twitter.com/alfa" target="_blank" rel="noreferrer noopener">Ian Partridge</a> went into detail of Kitura's deployment process and its future and <a href="https://twitter.com/logmaestro"> Logan Wright</a> spoke about <a href="https://vapor.codes">Vapor</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If companies continue to adopt Vapor and Kitura, we'll continue to see growth in that space. It's something Swift developers should seriously spend some time understanding.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Podcasting</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Podcasts continue to be a growing area. I am the host of two podcasts: <a href="https://okproductive.com">OkProductive</a> and <a href="https://www.empowerapps.show">EmpowerApps.Show</a>. I have followed podcast networks like <a href="https://www.relay.fm">Relay Fm</a> and <a href="https://www.gimletmedia.com">Gimlet</a>, as well as software creators like <a href="https://transistor.fm">Marco Arment </a>and <a href="https://transistor.fm">Justin Jackson</a>. So it was really interesting to see <a href="https://twitter.com/leahculver" target="_blank" rel="noreferrer noopener">Leah Culver</a> from Breaker talk about their story and what she's learned about growing a software company. It'll be interesting to see what other startups flourish in this new industry.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Other Topics...</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Other Swift topics which were of interest to me included:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a href="https://twitter.com/ChristinaMltn" target="_blank" rel="noreferrer noopener">Christina Moulton</a> talking about <strong>Siri Shortcuts</strong></li><li><a href="https://twitter.com/atomicbird" target="_blank" rel="noreferrer noopener">Tom Harrington</a> on <a href="https://halide.cam">Core Data in Swift</a></li><li><a href="https://twitter.com/KrauseFx" target="_blank" rel="noreferrer noopener">Felix Krause</a> from <a href="https://fastlane.tools">Fastlane</a> on trusting 3rd-party SDKs</li><li><a href="https://twitter.com/steipete" target="_blank" rel="noreferrer noopener">Peter Steinberger</a> on hacking Marzipan (i.e. using UIKit to build Mac Apps)</li><li><a href="https://twitter.com/kthomas901" target="_blank" rel="noreferrer noopener">Kaya Thomas</a> on building advanced notifications</li><li><a href="https://twitter.com/sdw" target="_blank" rel="noreferrer noopener">Sebastiaan de With</a> on building delightful user interfaces at Apple and now with <a href="https://halide.cam">Halide</a></li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Conclusion</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>try!Swift was a great conference and a great opportunity to meet a lot of great people in the Swift space. If you are in the Swift space, especially a beginner, I would definitely recommend checking it out.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[I have to say I had a great time at try!Swift New York this year. I have been to many developer conferences over the years but lately I have been attending mostly business and startup conferences. Additionally, this is the first Apple developer conference I have ever attended as opposed to hosting, attending, and speaking at a Cocoaheads groups. This was a new environment. I wanted to get a feel of where the winds are blowing in Swift and there were some interesting trends to the topics presented.]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date><![CDATA[2018-09-06 14:46:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-09-06 18:46:52]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-11-17 16:10:26]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-11-17 21:10:26]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[swift-thoughts-tryswift-nyc-2018]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[medium_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[O:11:"Medium_Post":11:{s:16:"author_image_url";s:65:"https://cdn-images-1.medium.com/fit/c/400/400/0*5gxjmuy9X71xBtwb.";s:10:"author_url";s:28:"https://medium.com/@leogdion";s:11:"byline_name";N;s:12:"byline_email";N;s:10:"cross_link";s:3:"yes";s:2:"id";s:12:"372176520cb5";s:21:"follower_notification";s:3:"yes";s:7:"license";s:19:"all-rights-reserved";s:14:"publication_id";s:12:"4884591acd5b";s:6:"status";s:6:"public";s:3:"url";s:78:"https://medium.com/@leogdion/swift-thoughts-on-try-swift-nyc-2018-372176520cb5";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[164]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[swift]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[I had a great time at try!Swift New York this year and there were some interesting trends in Swift programming with the topics presented this year.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[84]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[swift-thoughts-tryswift-nyc-2018__trashed]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1559340464;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:544;}i:1;a:1:{s:2:"id";i:211;}i:2;a:1:{s:2:"id";i:295;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-158]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Speaking at A2 Cocoaheads on Speculid and Try!Swift]]></title>
		<link>https://learningswift.brightdigit.com/speaking-a2-speculid-tryswiftnyc/</link>
		<pubDate>Mon, 01 Oct 2018 18:53:08 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=169</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p><a href="https://www.meetup.com/A2-CocoaHeads/events/254589885/">Next Thursday on October 11,</a> I'll be speaking at the Ann Arbor Cocoaheads at ArborMoon on developing <a href="https://speculid.com/?utm_source=learning-swift&amp;utm_medium=post">Speculid</a> for macOS as well as my thoughts from <a href="https://www.tryswift.co/events/2018/nyc/">Try!Swift New York.</a></p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>Leo will share some thoughts on the challenges in building Speculid, such as using C++ libraries in a Swift app, continuous integration (Travis-Ci) and more. He'll also be freshly back from TrySwift in NYC and will share some of his observations on the Swift community.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:core-embed/meetup-com {"url":"https://www.meetup.com/A2-CocoaHeads/events/254589885/","type":"rich","providerNameSlug":"meetup"} -->
<figure class="wp-block-embed-meetup-com wp-block-embed is-type-rich is-provider-meetup"><div class="wp-block-embed__wrapper">
https://www.meetup.com/A2-CocoaHeads/events/254589885/
</div></figure>
<!-- /wp:core-embed/meetup-com -->

<!-- wp:paragraph -->
<p>Be sure to <a href="https://www.meetup.com/A2-CocoaHeads/events/254589885/">RSVP for the event</a> if you can make it. I look forward to seeing you there.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date><![CDATA[2018-10-01 14:53:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-01 18:53:08]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-10-01 15:43:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-10-01 19:43:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[speaking-a2-speculid-tryswiftnyc]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_04832b012afd59d72070170f869fc2b5]]></wp:meta_key>
		<wp:meta_value><![CDATA[<style type="text/css">#meetup_oembed .mu_clearfix:after { visibility: hidden; display: block; font-size: 0; content: " "; clear: both; height: 0; }* html #meetup_oembed .mu_clearfix, *:first-child+html #meetup_oembed .mu_clearfix { zoom: 1; }#meetup_oembed { background:#eee;border:1px solid #ccc;padding:10px;-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;margin:0; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 12px; }#meetup_oembed h3 { font-weight:normal; margin:0 0 10px; padding:0; line-height:26px; font-family:Georgia,Palatino,serif; font-size:24px }#meetup_oembed p { margin: 0 0 10px; padding:0; line-height:16px; }#meetup_oembed img { border:none; margin:0; padding:0; }#meetup_oembed a, #meetup_oembed a:visited, #meetup_oembed a:link { color: #1B76B3; text-decoration: none; cursor: hand; cursor: pointer; }#meetup_oembed a:hover { color: #1B76B3; text-decoration: underline; }#meetup_oembed a.mu_button { font-size:14px; -moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;border:2px solid #A7241D;color:white!important;text-decoration:none;background-color: #CA3E47; background-image: -moz-linear-gradient(top, #ca3e47, #a8252e); background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #a8252e), color-stop(1, #ca3e47));disvplay:inline-block;padding:5px 10px; }#meetup_oembed a.mu_button:hover { color: #fff!important; text-decoration: none; }#meetup_oembed .photo { width:50px; height:50px; overflow:hidden;background:#ccc;float:left;margin:0 5px 0 0;text-align:center;padding:1px; }#meetup_oembed .photo img { height:50px }#meetup_oembed .number { font-size:18px; }#meetup_oembed .thing { text-transform: uppercase; color: #555; }</style><div id="meetup_oembed" style="height:270px">     <div style="max-height:230px;overflow:hidden">          <h3>Swift Development Tips with Speculid and Try!Swift NYC</h3>          <p style="margin:5px 0;font-size:16px">Thursday, Oct 11, 2018,  6:30 PM</p>          <p style="margin: 0 0 5px;"><span style="font-size:14px">Arbormoon Software, Inc.</span><br /><span style="font-size:12px;">120 E Huron St Ann Arbor, mi</span></p>          <span style="color:#4F8A10;font-size:16px;">14 CocoaHeads Attending</span>           <div style="margin:5px 0 10px" class="mu_clearfix">               <div class="photo"><img src="https://secure.meetupstatic.com/photos/member/6/f/f/thumb_263461791.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/2/2/b/e/thumb_274808894.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/4/4/3/1/thumb_244457457.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/d/8/3/c/thumb_274075356.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/a/f/a/4/thumb_247844964.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/1/c/b/1/thumb_249127345.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/5/7/9/a/thumb_279922426.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/7/d/b/6/thumb_183452182.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/3/5/8/5/thumb_280573701.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/8/0/6/0/thumb_266612864.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/7/7/9/1/thumb_268230609.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/1/e/6/9/thumb_264787785.jpeg" /></div>          </div>          <p style="line-height:16px">NOTE: Arbormoon has moved, and the meeting will be at 120 E Huron! Starting at 6:30pm, we'll have free food sponsored by Instabug (http://www.instabug.com). Please RSVP to help us estimate how much food we need. While you are enjoying the food, talk with other developers and network in the local Cocoa community. Our main meeting will start at 7pm a...</p>     </div>     <p style="margin:10px 0 0;"><a href="https://www.meetup.com/A2-CocoaHeads/events/254589885/" target="_blank" class="mu_button"><strong>Check out this Meetup &rarr;</strong></a></p></div>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_04832b012afd59d72070170f869fc2b5]]></wp:meta_key>
		<wp:meta_value><![CDATA[1538420292]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[172]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[speaking]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[58]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018-10-02]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Next Thursday on October 11, I'll be speaking at the Ann Arbor Cocoaheads at ArborMoon on developing Speculid as well as Try!Swift New York.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"ceb8ce00885137a18358fb586c4ce8d8";a:2:{s:7:"expires";i:1559701694;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:260;}i:1;a:1:{s:2:"id";i:158;}i:2;a:1:{s:2:"id";i:211;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a6cc846c4d4230e4f13ebe92cbda7397]]></wp:meta_key>
		<wp:meta_value><![CDATA[<style type="text/css">#meetup_oembed .mu_clearfix:after { visibility: hidden; display: block; font-size: 0; content: " "; clear: both; height: 0; }* html #meetup_oembed .mu_clearfix, *:first-child+html #meetup_oembed .mu_clearfix { zoom: 1; }#meetup_oembed { background:#eee;border:1px solid #ccc;padding:10px;-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;margin:0; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 12px; }#meetup_oembed h3 { font-weight:normal; margin:0 0 10px; padding:0; line-height:26px; font-family:Georgia,Palatino,serif; font-size:24px }#meetup_oembed p { margin: 0 0 10px; padding:0; line-height:16px; }#meetup_oembed img { border:none; margin:0; padding:0; }#meetup_oembed a, #meetup_oembed a:visited, #meetup_oembed a:link { color: #1B76B3; text-decoration: none; cursor: hand; cursor: pointer; }#meetup_oembed a:hover { color: #1B76B3; text-decoration: underline; }#meetup_oembed a.mu_button { font-size:14px; -moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;border:2px solid #A7241D;color:white!important;text-decoration:none;background-color: #CA3E47; background-image: -moz-linear-gradient(top, #ca3e47, #a8252e); background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #a8252e), color-stop(1, #ca3e47));disvplay:inline-block;padding:5px 10px; }#meetup_oembed a.mu_button:hover { color: #fff!important; text-decoration: none; }#meetup_oembed .photo { width:50px; height:50px; overflow:hidden;background:#ccc;float:left;margin:0 5px 0 0;text-align:center;padding:1px; }#meetup_oembed .photo img { height:50px }#meetup_oembed .number { font-size:18px; }#meetup_oembed .thing { text-transform: uppercase; color: #555; }</style><div id="meetup_oembed" style="height:328px">     <div style="max-height:288px;overflow:hidden">          <h3>Swift Development Tips with Speculid and Try!Swift NYC</h3>          <p style="margin:5px 0;font-size:16px">Thursday, Oct 11, 2018,  6:30 PM</p>          <p style="margin: 0 0 5px;"><span style="font-size:14px">Arbormoon Software, Inc.</span><br /><span style="font-size:12px;">120 E Huron St Ann Arbor, mi</span></p>          <span style="color:#4F8A10;font-size:16px;">18 CocoaHeads Went</span>           <div style="margin:5px 0 10px" class="mu_clearfix">               <div class="photo"><img src="https://secure.meetupstatic.com/photos/member/7/7/9/1/thumb_268230609.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/7/d/b/6/thumb_183452182.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/d/d/a/a/thumb_269336746.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/1/c/b/1/thumb_249127345.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/a/f/a/4/thumb_247844964.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/3/1/9/3/thumb_272892691.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/d/8/3/c/thumb_274075356.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/1/e/6/9/thumb_264787785.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/4/4/3/1/thumb_244457457.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/2/2/b/e/thumb_274808894.jpeg" /></div><div class="photo"><img src="https://secure.meetupstatic.com/photos/member/a/3/a/7/thumb_243761895.jpeg" /></div>          </div>          <p style="line-height:16px">NOTE: Arbormoon has moved, and the meeting will be at 120 E Huron! Starting at 6:30pm, we'll have free food sponsored by Instabug (http://www.instabug.com). Please RSVP to help us estimate how much food we need. While you are enjoying the food, talk with other developers and network in the local Cocoa community. Our main meeting will start at 7pm a...</p>     </div>     <p style="margin:10px 0 0;"><a href="https://www.meetup.com/A2-CocoaHeads/events/254589885/" target="_blank" class="mu_button"><strong>Check out this Meetup &rarr;</strong></a></p></div>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_a6cc846c4d4230e4f13ebe92cbda7397]]></wp:meta_key>
		<wp:meta_value><![CDATA[1559532878]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-169]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[App Icon Templates - Building Graphics For Xcode]]></title>
		<link>https://learningswift.brightdigit.com/app-icon-templates-graphics-xcode/</link>
		<pubDate>Mon, 29 Oct 2018 16:22:44 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=176</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Asset Catalogs are the key component in <g class="gr_ gr_5 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-ins replaceWithoutSep" id="5" data-gr-id="5">Xcode</g> project for storing colors, sprites, metadata, and of course graphics and managing those graphics can be a challenge. Today we are going to talk about using app icon templates in Sketch and Photoshop.</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:heading -->
<h2>Using&nbsp;App Icon Templates</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>App Icon templates offer a simple and predictable way to create your assets while using graphics applications designers are familiar with. We are going to look at the top two graphic editors: <strong>Sketch</strong> and <strong>Photoshop</strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Sketch</h3>
<!-- /wp:heading -->

<!-- wp:core-embed/youtube {"url":"https://youtu.be/4Um_zRh4ENY","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://youtu.be/4Um_zRh4ENY
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>In the last few years, Sketch has grown to be one of the leading applications used by graphic designers especially in the area of mobile application development. Luckily they already supply an app icon template to use.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Run your Sketch Application and the launching dialog should appear showing various templates built into Sketch.</li><li>Select the <strong>iOS App Icon</strong> template. Now, you should see the template with various sizes of the app icon.</li><li>Go ahead and edit the largest icon. As you edit the large icon, you changes should be reflected in your other app icon sizes.</li><li>When completed, go to the top menu and select <strong>Export</strong>. In the Export dialog, select all the sizes you wish to export and then choose the folder you wish to export to.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>If you go to that folder, you should see all your icon sizes. From there you can drag the files into your Asset catalog App Icon slots.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Sketch offers a very simple way to export the set of graphics. Obviously, each time an edit needs to be made, Sketch will need to be accessed and the multiple files will need to be updated in the repo.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Photoshop</h3>
<!-- /wp:heading -->

<!-- wp:core-embed/youtube {"url":"https://youtu.be/yr6KsuP5j5A","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://youtu.be/yr6KsuP5j5A
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>Photoshop has been a well established graphics editor for over two decades. <g class="gr_ gr_6 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Punctuation only-ins replaceWithoutSep gr-progress sel" id="6" data-gr-id="6">However</g> it isn’t quite as targeted toward application development as Sketch so it isn’t geared as much towards that purpose.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Kindly enough Apple offers us UI templates and widget for Photoshop (as well as constantly updated for Sketch) through their <a href="https://developer.apple.com/design/resources/">Apple Design Resources page</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Go to the <a href="https://developer.apple.com/design/resources/">Apple Design Resources page</a> and download the template for the OS you will be building for. In this case we will be using the iOS 12 version. <strong>Please note - these downloads are quite large so make sure to do this ahead of time.</strong></li><li>Unzip the template collection, go to the <em>Production Templates</em> folder. We’ll be using the standard <em>Template-AppIcons-iOS.psd</em> file. Open that psd file, opening Photoshop.</li><li>Make sure we are generating image assets on save. Go to File...Generate...Image Assets and make sure it is checked.</li><li>Go to your layers window and double click the layer named icon. This is the layer you will be editing directly and will be carried through to the other app icon sizes.</li><li>Go to the folder containing the psd file you have opened. You should see a folder with the same name but including the suffix <em>-assets</em>. In there you should see all the icon sizes exported from the template.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Photoshop is the more established application but also less focused on UI and App Icon development. The templates can be quite large and even more cumbersome to open each time and edit can be made.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Ideally, we’d like to simply edit one file which can be included in our repo and automatically generated on the build. That’s where building a bash script to run on the <g class="gr_ gr_6 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-ins replaceWithoutSep" id="6" data-gr-id="6">build</g> would be helpful.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[Asset Catalogs are the key component in Xcode project for storing colors, sprites, metadata, and of course graphics and managing those graphics can be a challenge. Templates offer a simple and predictable way to create your assets while using graphics applications designers are familiar with. We are going to look at the top two graphic editors: Sketch and Photoshop.]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date><![CDATA[2018-10-29 12:22:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-29 16:22:44]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-11-12 13:58:49]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-11-12 18:58:49]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[app-icon-templates-graphics-xcode]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="building-icons-and-image-sets"><![CDATA[Building Icons and Image Sets]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[179]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[app icon templates]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[92]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Asset Catalogs are the key component in Xcode. Today we are going to talk about using app icon templates in Sketch and Photoshop.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560261288;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:506;}i:1;a:1:{s:2:"id";i:188;}i:2;a:1:{s:2:"id";i:195;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-176]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Asset Catalogs, Image Sets, and App Icons]]></title>
		<link>https://learningswift.brightdigit.com/asset-catalogs-image-sets-app-icons/</link>
		<pubDate>Wed, 07 Nov 2018 12:55:15 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=188</guid>
		<description></description>
		<content:encoded><![CDATA[Asset catalogs are collections of specialized files (such as graphics files) as well as JSON files containing metadata. The metadata from the JSON files are used for organizing the specialized files and denoting their purpose within the set. In the case of graphic sets like Image Sets, they contain several pieces of information.

<!--more--><img class="alignnone size-full wp-image-186" src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/AppIcons.jpg" width="1920" height="903" />

<h2>Image Sets</h2>

Here is a sample Image Set:

<pre><code>{   "images" : [     {       "idiom" : "universal",       "filename" : "apple-watch@1x.png",       "scale" : "1x"     },     {       "idiom" : "universal",       "filename" : "apple-watch@2x.png",       "scale" : "2x"     },     {       "idiom" : "universal",       "filename" : "apple-watch@3x.png",       "scale" : "3x"     }   ],   "info" : {     "version" : 1,     "author" : "xcode"   } } </code></pre>

First, we have a collection of images with the following properties:

<ul>
    <li><code>filename</code> - the file name for the particular image</li>
    <li><code>scale</code> - the designated scale for the image file, as of now there are four scales used:</li>
    <li>
<ul>
    <li><em>default unspecified</em> - vector pdf file for any display</li>
</ul>
</li>
    <li>
<ul>
    <li><code>1x</code> - iPhones up to 3GS, iPod Touch up to 3rd Gen</li>
</ul>
</li>
    <li>
<ul>
    <li><code>2x</code> - iPhone 4, iPhone 4s, iPhone 5, iPhone 5c, iPhone 5s, iPhone SE, iPhone 6, iPhone 6s, iPhone 7, iPhone 8, iPhone Xr, iPod Touch 4th Generation and Up, MacBook Pro 3rd Generation and up, MacBook (2015 and newer)</li>
</ul>
</li>
    <li>
<ul>
    <li><code>3x</code> - iPhone 6+, iPhone 6s+, iPhone 7+ iPhone 8+ iPhone X, iPhone Xs, iPhone Xs Max, iMac 4K and 5K</li>
</ul>
</li>
    <li><code>idiom</code> - the designated device and purpose for the particular image file</li>
</ul>

<h3>Idioms</h3>

Idioms designate the device and purpose of the image file. Here is the general device values of the field for the particular property:

<ul>
    <li><code>universal</code> - The default value, designates the image file works on any device and platform.</li>
    <li><code>iphone</code> - The image is for iPhone devices.</li>
    <li><code>ipad</code> - The image is for iPad devices.</li>
    <li><code>mac</code> - The image is for Mac computers.</li>
    <li><code>watch</code> - The image is for the Apple Watch devices.</li>
    <li><code>tv</code> - The image is for Apple TV.</li>
</ul>

Some idioms denote their purpose is for App Store:

<ul>
    <li><code>ios-marketing</code> - An image for the App Store icon</li>
    <li><code>watch-marketing</code> - An image for the App Store icon.</li>
</ul>

<h2>App Icons</h2>

App Icons contain the same information as an Image Set with a few particular properties for app icons on certain devices:

<pre><code>... {   "size" : "24x24",   "idiom" : "watch",   "scale" : "2x",   "role" : "notificationCenter",   "subtype" : "38mm" }, ... </code></pre>

<ul>
    <li><code>size</code> the size of the image file in points, this designates whether the image</li>
    <li><code>subtype</code> - typically used for Apple Watch icons, they designate what Apple Watch size the image file is for</li>
    <li><code>role</code> - typically used for Apple Watch icons, they designate a specific purpose for the icon. The values could be:</li>
    <li>
<ul>
    <li><code>appLauncher</code> - An image shown app launcher.</li>
</ul>
</li>
    <li>
<ul>
    <li><code>companionSettings</code> - An image for the Apple Watch Settings app</li>
</ul>
</li>
    <li>
<ul>
    <li><code>notificationCenter</code> - An image for the notification center on watchOS.</li>
</ul>
</li>
    <li>
<ul>
    <li><code>quickLook</code> - An image used for a short look notification</li>
</ul>
</li>
    <li>
<ul>
    <li><code>longLook</code> - An image used for a long look notification</li>
</ul>
</li>
</ul>

With all these properties an App Icon set can contain as many as 41 individual files. That’s why it is best to use an automated method to render these files. Check out our <a href="https://learningswift.brightdigit.com/category/building-icons-and-image-sets/" target="_blank" rel="noopener">series of blog posts on automating that process for more details.</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>188</wp:post_id>
		<wp:post_date><![CDATA[2018-11-07 07:55:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-07 12:55:15]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-11-28 05:31:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-11-28 10:31:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[asset-catalogs-image-sets-app-icons]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="building-icons-and-image-sets"><![CDATA[Building Icons and Image Sets]]></category>
		<category domain="category" nicename="building-speculid"><![CDATA[Building Speculid]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[187]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Asset Catalogs]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[91]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[In Xcode, Asset Catalogs are an important part of that process and the primary way they are used is through Image Sets and App Icons.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018-11-06]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_6792719]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560394458;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:176;}i:1;a:1:{s:2:"id";i:211;}i:2;a:1:{s:2:"id";i:195;}}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Integrating ​​​C++ Libraries with Swift - How Speculid Is Built]]></title>
		<link>https://learningswift.brightdigit.com/integrating-c-plus-plus-swift/</link>
		<pubDate>Wed, 16 Jan 2019 15:00:00 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=195</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>In the article <a rel="noreferrer noopener" aria-label="Objective-C and Swift - Being Friendly (opens in a new tab)" href="https://learningswift.brightdigit.com/objective-c-and-swift-being-friendly/" target="_blank">Objective-C and Swift - Being Friendly</a>, I talked about how I used Objective-C to integrate C++ libraries with Swift in <a rel="noreferrer noopener" aria-label="Speculid (opens in a new tab)" href="https://Speculid.com" target="_blank">Speculid</a>. Today, I'm going to talk about the challenges of using C++ Libraries in your XCode project.</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:paragraph -->
<p><a rel="noreferrer noopener" href="https://Speculid.com" target="_blank">Speculid is a completely open source application</a> built with the latest version of Xcode (10.1) primarily in Swift (I’ll explain why primarily and not only). With Speculid, you <strong>can take a single graphic and build it into a complete App Icon or Image Set. </strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Therefore, this meant packaging any required dependencies within the .App package. At first, I thought about including <em>Inkscape</em> and <em>ImageMagick</em> with the installation. However the fact that <em>Inkscape</em> has other dependencies such as <em>XQuartz</em> meant that would be too cumbersome. Therefore, Cairo and librsvg became the obvious choice.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p style="text-align:center"><img class="wp-image-201" style="width: 131px;" src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/11/440px-Librsvg.svg_-e1541095349996.png" alt="" scale="0"><img class="wp-image-200" style="width: 150px;" src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/11/500px-Cairo_banner_1.svg_-e1541095276942.png" alt="" scale="0"></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Integrating Cairo and librsvg with Swift</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The first version of Speculid required the installation of two software packages: <a rel="noreferrer noopener" aria-label="Inkscape (opens in a new tab)" href="https://inkscape.org" target="_blank">Inkscape</a> and <a rel="noreferrer noopener" aria-label="ImageMagick (opens in a new tab)" href="https://www.imagemagick.org" target="_blank">ImageMagick</a>. Each application would be used in some combination to read, manipulate, and export SVG, PNG, JPEG, or PDF files. As a result, <strong>requiring these software packages made the user experience clumsy and difficult.</strong> However, since they are complete applications including both of these packages would be cumbersome as well. That’s why I looked into integrating C++ libraries - specifically two of them: <a rel="noreferrer noopener" aria-label="Cairo (opens in a new tab)" href="https://cairographics.org" target="_blank"><strong>Cairo</strong></a><strong> and </strong><a rel="noreferrer noopener" aria-label="libRSVG (opens in a new tab)" href="https://developer.gnome.org/rsvg/" target="_blank"><strong>libRSVG</strong></a><strong>.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Used by several software packages, <strong>Cairo</strong> and <strong>librsvg</strong> are the leading libraries for the development of graphics and SVG manipulation software especially in the open source and Linux communities. <strong>So with Speculid v2.0, I integrated and packaged these libraries as the primary means of reading PNG and SVG and exporting PDF and PNG files</strong>. Above all, both of these libraries can be installed on your Mac through <a rel="noreferrer noopener" aria-label="HomeBrew (opens in a new tab)" href="http://brew.sh" target="_blank"><strong>HomeBrew</strong></a>, using the command:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>brew install cairo librsvg</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Now we'll need to make sure to copy and link the files.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":350} -->
<figure class="wp-block-image"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/01/xe7za0jttem-e1547589614468-1024x513.jpg" alt="Linking" class="wp-image-350"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Properly Linking and Copying C++ Libraries</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><span style="color: #191e23;"><span style="caret-color: #191e23; background-color: #ffffff;">I</span></span>n order to use C++ libraries, <strong>we can either compile every piece of C++ code as their individual libraries within Speculid or integrate the already compiled libraries.</strong> At first it seemed compiling the code would be the most clean and efficient way, except for the fact that each library had many requirements as well as special flags for compiling each library. Therefore I decided to take a different route and use the compiled libraries themselves.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>After installing the libraries using HomeBrew, copy the directories for Cairo and librsvg to your project folder. <strong>HomeBrew stores its applications and libraries at:</strong></p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/usr/local/Cellar</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Therefore, <strong>Cairo</strong>, for instance, would be located at:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/usr/local/Cellar/cairo</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Once it's copied to your project, there are three spots the files need to be under <strong>build phases:</strong></p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>Link With Libraries -&nbsp;</strong>all <strong>.dylib</strong> files need to be listed </li><li><strong>Copy Files - </strong>all <strong>.dylib</strong> files need to be copied to the <strong>Frameworks</strong> folder</li><li><strong>Headers&nbsp;-</strong> all <strong>.h</strong> files need to be listed under <strong>Project</strong></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><strong>After that, you should be good to go.</strong> If you have any issues with building the application, <strong>double check all the proper files are listed under build phases in your Xcode projec</strong>t.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":351} -->
<figure class="wp-block-image"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/01/eiwvoa9zb10-e1547589663680-1024x512.jpg" alt="Dependency Hell" class="wp-image-351"/></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3>Staying Organized in Dependency Hell</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>With your C++ libraries linked and embedded, you run the app and it works without a hitch. So then you archive and package your product and send it off for someone to run and they get something like this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>dyld: Library not loaded: @loader _path/../lib/libintl.8.dylib</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p><strong>Unfortunatley libraries like Cairo and librsvg, often have dependencies of their own which are required.</strong> However there are a few commands to help with this:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><code>otool -L</code> <br>If we want to find out actual dependencies, this command displays names and version numbers of libraries which are required and used by a particular library.</li><li><code>brew deps —tree</code><br>In order to make sure we have all the dependencies installed on the developer machine, we can use HomeBrew to find their dependencies installed along with the package. Once they are installed we can add them to our project and include them in the App package</li><li><code>install_name_tool</code><br>Once the dependencies are copied and included with our App, we need to update the paths used to look for our dependencies.</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":4} -->
<h4>Gathering Dependencies</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Firstly we need to make sure we've included all the dependencies in your App by adding the dynamic libraries described by <code>otool -L</code>. For instance if we ran <code>otool -L</code> on the Cairo library we get this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ otool -L libcairo.2.dylib
/usr/local/Cellar/cairo/1.14.12/lib/libcairo.2.dylib:
    /usr/local/opt/cairo/lib/libcairo.2.dylib (compatibility version 11403.0.0, current version 11403.12.0)
    /usr/local/opt/pixman/lib/libpixman-1.0.dylib (compatibility version 35.0.0, current version 35.0.0)
    /usr/local/opt/fontconfig/lib/libfontconfig.1.dylib (compatibility version 12.0.0, current version 12.1.0)
    /usr/local/opt/freetype/lib/libfreetype.6.dylib (compatibility version 22.0.0, current version 22.0.0)
    /usr/local/opt/libpng/lib/libpng16.16.dylib (compatibility version 51.0.0, current version 51.0.0)
    /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.11)
    /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices (compatibility version 1.0.0, current version 50.0.0)
    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.0.0)
    /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1450.16.0)
    /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1129.5.0)
    /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0)

</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Therefore, we see Cairo requires a few libraries like <em>pixman</em>. Thankfully, <strong>we can get the HomeBrew dependency tree by using the command </strong><br><code>brew deps —tree</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ brew deps -tree cairo
fontconfig
freetype
gettext
glib
libffi
libpng
pcre
pixman
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Thankfully now, if we are missing <em>pixman</em> on our development machine, we can install it using <code>brew install pixman</code> and then copy the HomeBrew cellar directory for <em>pixman</em> to our project folder.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Again make sure the dynamic libraries are part of the build process under build phases.  In other words, you should have something like this under <strong>Build Phases</strong>:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":193} -->
<figure class="wp-block-image"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/10/pixman_example.png" alt="" class="wp-image-193"/></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":4} -->
<h4>Updating References with <code>install_name_tool</code></h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Now that all the required dependencies are included with the applications, we need to tell Speculid where to look for dependenciesndencies where to look for <g class="gr_ gr_5 gr-alert gr_spell gr_inline_cards gr_disable_anim_appear ContextualSpelling multiReplace" id="5" data-gr-id="5">it’s</g> respective dependencies. That’s <g class="gr_ gr_6 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace" id="6" data-gr-id="6">where </g><code>install_name_tool</code><g class="gr_ gr_6 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace" id="6" data-gr-id="6"> comes</g> in.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>Writing a Script to Search and Update Dynamic Libraries</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>So for this process we are going to write a script to update our dependencies, it will need to do the following:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Look for the dependencies using <code>otool -L</code> which are not system installed</li><li>Update the <em>id</em> of each dynamic library and the path to use @rpath which is the run-time search path the application uses.</li><li>Go through each file in our <code>Frameworks</code> folder and…</li><li>Again update the <em>id</em> as well as the path to use <code>@rpath</code></li><li>Use <code>otool -L</code> to look for each dependency of that dependency</li><li>And update the search path to use <code>@rpath</code></li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Here is the result:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#!/bin/sh

LIBS=`otool -L "$1" | grep "/opt\|Cellar" | awk -F' ' '{ print $1 }'`
for lib in $LIBS; do
  install_name_tool -id @rpath/`basename $lib` "`dirname $1`/Frameworks/`basename $lib`"
  install_name_tool -change $lib @rpath/`basename $lib` "$1"
done

FRAMEWORKS_FOLDER_PATH="`dirname $1`/Frameworks/"
deps=`ls "$FRAMEWORKS_FOLDER_PATH" | awk -F' ' '{ print $1 }'`
for lib in $deps; do
  install_name_tool -id @rpath/`basename $lib` "`dirname $1`/Frameworks/`basename $lib`"
  install_name_tool -change $lib @rpath/`basename $lib` "$1"
  dylib="`dirname $1`/Frameworks/`basename $lib`"
  deps=`otool -L "$dylib" | grep "/opt\|Cellar" | awk -F' ' '{ print $1 }'`
  for dependency in $deps; do
      install_name_tool -change $dependency @rpath/`basename $dependency` "$dylib"
    done
done
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Let’s break this down...</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h5>Breaking Down Updating Dynamic Libraries</h5>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>LIBS=`otool -L "$1" | grep "/opt\|Cellar" | awk -F' ' '{ print $1 }'`</code></pre>
<!-- /wp:code -->

<!-- wp:list {"ordered":true} -->
<ol><li>Look for the dependencies using <code>otool -L</code> which are not system installed<br>$1 is the path to the executable or <code>${TARGET_BUILD_DIR}/${EXECUTABLE_PATH}</code>. <code>otool -L</code> will list all the dependencies. Piping to grep, we can filter results which are not system installed but in locations like <code>/usr/local/opt</code> are installed via HomeBrew. <code>awk -F' ' '{ print $1 }'</code> will print the results into a format we can use in a for loop.</li></ol>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>for lib in $LIBS; do
  install_name_tool -id @rpath/`basename $lib` "`dirname $1`/Frameworks/`basename $lib`"
  install_name_tool -change $lib @rpath/`basename $lib` "$1"
done
</code></pre>
<!-- /wp:code -->

<!-- wp:list {"ordered":true,"className":"continue"} -->
<ol class="continue" start="2"><li>Update the <em>id</em> of each dynamic library and the path to use @rpath which is the run-time search path the application uses.<br>Here we go through each dependency and update the identification name and the path to look for the dependency in our framework to use <code>@rpath</code>.</li></ol>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>FRAMEWORKS_FOLDER_PATH="`dirname $1`/Frameworks/"
deps=`ls "$FRAMEWORKS_FOLDER_PATH" | awk -F' ' '{ print $1 }'`
for lib in $deps; do
</code></pre>
<!-- /wp:code -->

<!-- wp:list {"ordered":true,"className":"continue"} -->
<ol class="continue" start="3"><li>Go through each file in our <code>Frameworks</code> folder and…</li></ol>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  install_name_tool -id @rpath/`basename $lib` "`dirname $1`/Frameworks/`basename $lib`"
  install_name_tool -change $lib @rpath/`basename $lib` "$1"
</code></pre>
<!-- /wp:code -->

<!-- wp:list {"ordered":true,"className":"continue"} -->
<ol class="continue" start="4"><li>Again update the <em>id</em> as well as the path to use <code>@rpath</code></li></ol>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  dylib="`dirname $1`/Frameworks/`basename $lib`"
  deps=`otool -L "$dylib" | grep "/opt\|Cellar" | awk -F' ' 
</code></pre>
<!-- /wp:code -->

<!-- wp:list {"ordered":true,"className":"continue"} -->
<ol class="continue" start="5"><li>Use <code>otool -L</code> to look for each dependency of that dependency <br>Calculate the path to the dependency and run <code>otool -L</code> to get its dependencies.</li></ol>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>for dependency in $deps; do
      install_name_tool -change $dependency @rpath/`basename $dependency` "$dylib"
    done
</code></pre>
<!-- /wp:code -->

<!-- wp:list {"ordered":true,"className":"continue"} -->
<ol class="continue" start="6"><li>And update the search path to use <code>@rpath</code></li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Now the application and framework should contain all that’s needed for our application to run on another machine.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p style="text-align:center"><em>The latest version of the script can be found </em><a href="https://gist.github.com/leogdion/88516f580108075c8b2d05ab7f895fd0"><em>here</em></a><em>.</em></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Conclusion</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Last time we learned <a href="https://learningswift.brightdigit.com/objective-c-and-swift-being-friendly/" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">how to optimize Objective-C and Swift code so they work well together</a>. Today we learned how to:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>integrate C++ libraries from HomeBrew into our project</li><li>verify all dependencies are included</li><li>fix references using install_name_tool and a script</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>So with Speculid, the Swift code which run the main interface can talk to the Objective-C which interfaces with the C++ libraries. No need for external applications or cumbersome installations. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If interested check out <a href="https://www.youtube.com/watch?v=SxW5fs7_o18" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">the presentation I did at Ann Arbor Cocoaheads on this very topic</a>:</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {"url":"https://www.youtube.com/watch?v=SxW5fs7_o18","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=SxW5fs7_o18
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>What are some challenges you face using C++ Libraries? Have you ever using any libraries for an iOS app? Let me know in the comments.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>195</wp:post_id>
		<wp:post_date><![CDATA[2019-01-16 10:00:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-16 15:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-01-16 12:34:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-01-16 17:34:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[integrating-c-plus-plus-swift]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="building-speculid"><![CDATA[Building Speculid]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[194]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[C++]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Previously, I discussed using Objective-C to integrate C++ with Swift in Speculid. Today, I'm going to talk about the challenges of using C++.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018-11-08]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_mess]]></wp:meta_key>
		<wp:meta_value><![CDATA[Here's how I integrate C++ libraries in Xcode projects with Swift and Objective-C]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560292758;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:211;}i:1;a:1:{s:2:"id";i:260;}i:2;a:1:{s:2:"id";i:169;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-195]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Objective-C and Swift - Being Friendly]]></title>
		<link>https://learningswift.brightdigit.com/objective-c-and-swift-being-friendly/</link>
		<pubDate>Wed, 14 Nov 2018 15:23:49 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=211</guid>
		<description></description>
		<content:encoded><![CDATA[There are times where Objective-C is still necessary for Swift development. For instance, with one such app I've built in Swift, <a href="https://speculid.com/?utm_source=web&amp;utm_medium=blog-post&amp;utm_campaign=building-speculid" target="_blank" rel="noopener">Speculid</a>, I needed to bring Objective-C code in. With the introduction of C++ libraries in version 2.0, Objective-C became necessary. Luckily there are ways to make both Objective-C and Swift work together in a friendly fashion.

<!--more-->

<h2>Simplifying Installation with C++ Libraries</h2>

Speculid is a completely open source application built with the latest version of Xcode. It <a href="https://learningswift.brightdigit.com/app-icon-templates-graphics-xcode/" rel="noopener">automates the process of converting PNG and SVG files into complete Image Sets and App Icons.</a> In the first version, it required the installation of Inkscape and ImageMagick to facilitate the conversion of images from SVG or PNG to PDF or PNG. This became cumbersome both in the installation and usage.

With version 2.0, I wanted to make the process of installation and integration as easy as possible by removing any prerequisites steps and pre-existing dependencies. This meant packaging any required dependencies within the application package. In this case, we are using two C++ libraries, <a href="https://cairographics.org" target="_blank" rel="noopener"><em>Cairo</em></a> and <em><a href="https://wiki.gnome.org/Projects/LibRsvg" target="_blank" rel="noopener">libRSVG</a></em>. <em>Cairo</em> is the leading 2D library used throughout the open source community and <em>libRSVG </em>is used for reading SVG content. With these two libraries available, the challenge then became integrating them into the Swift code.

As of now, Swift has no way to directly interface with C++. Therefore, we need an intermediary and those intermediaries can either be code in C or Objective-C. While C has some simplicity to it, in this case, I went with Objective-C.

<h2>Bridging the Gap with Objective-C</h2>

Not only do I have experience with Objective-C, but Objective-C has a strong integration with the Apple ecosystem; despite the simplicity of C. While I am using Objective-C, I want to keep the bulk of the code in Swift.

Objective-C will only serve to interface with the C++ libraries as needed. Swift will interact with the user, manage jobs, etc... Objective-C will call the C++ libraries to build the actual graphics.

The Swift code will be completely unaware of the code actually used to read, manipulate, and write the resulting files.

Here is a brief rundown of the process:

<ul>
    <li><strong>Main</strong> - instantiate and run NSApplication</li>
    <li><strong>SpeculidApplication</strong> - looks for the <em>speculid</em> file and parses the file using <em>Codable</em>
<ul>
    <li>Finds the source graphic file (PNG or SVG)</li>
    <li>Parses the <a href="https://learningswift.brightdigit.com/asset-catalogs-image-sets-app-icons/" rel="noopener">Asset Catalog</a> file</li>
    <li>Parses the specifications in the <em>speculid</em> file</li>
    <li>Creates the specifications to be passed to the Objective-C code</li>
</ul>
</li>
    <li><strong>In Objective-C</strong>, use the specifications passed to call the C++ functions to write out the target graphic files (PNG or PDF)</li>
</ul>

<h2>Writing Swift-Friendly Code in Objective-C</h2>

There are a couple of ways to make our Objective-C and Swift code work well together. One is making sure the API uses compatible types.

<h3>Using Protocols to Facilitate Communication</h3>

Objective-C does not use Swift Structs. This leaves Classes as the only way to pass complex data between the Swift and the Objective-C framework. However, in order to keep the interfaces agnostic of each other, we can create Protocols in the Objective-C API which can signify to Swift what is required.

In our Objective-C framework, there are two methods available to Swift. The main method which calls the <em>Cairo</em> library and takes an <em>ImageSpecificationProtocol</em> and an <em>ImageHandle</em> object:

<pre><code>@interface CairoInterface : NSObject
+  (BOOL)exportImage:(id&lt;ImageHandle&gt;) sourceHandle withSpecification: (id&lt;ImageSpecificationProtocol&gt;) specification error: (NSError **) error;
@end
</code></pre>

<h4>Abstracting with Protocols</h4>

<em>ImageHandle</em> is another Protocol which the Objective-C framework will use containing the painting surface needed by Cairo. However, the Swift framework doesn’t need to know anything about Cairo. So how does Swift create an <em>ImageHandle</em> without having access to the Cairo surface reference? That's where the other method comes in.

We provide a builder/factory class in the Objective-C class which takes parameters available in Swift:

<pre><code>@interface ImageHandleBuilder : NSObject
@property (class, nonatomic, assign, readonly) ImageHandleBuilder*  shared;
- (id&lt;ImageHandle&gt;) imageHandleFromFile: (id&lt;ImageFileProtocol&gt;) file error:(NSError**) error;
@end
</code></pre>

The <em>ImageFileProtocol</em> protocol looks this:

<pre><code>@protocol ImageFileProtocol &lt;NSObject&gt;
@property (readonly) NSURL * _Nonnull url;
@property (readonly) ImageFileFormat format;
@end
</code></pre>

<h4>Protocols as Guidance</h4>

<em>ImageFileFormat </em>is an enum which is available in Swift and denotes a file type (PNG, PDF, or SVG). <em>NSURL</em> is automatically taken care of and will be a<em> URL</em> in Swift. As long as we implement <em>ImageFileProtocol </em>in Swift with these properties and it subclasses <em>NSObject</em>, we can easily pass that object to <em>ImageHandleBuilder</em>, we should be able to call the ImageHandleBuilder easily.

This goes the same for <em>ImageSpecificationProtocol </em>in<code>CairoInterace.exportImage:withSpecification:error:</code>. ImageSpecificationProtocol contains the information needed to know what and how the information is painted:

<pre><code>@protocol ImageSpecificationProtocol &lt;NSObject&gt;
@property (readonly) id&lt;ImageFileProtocol&gt; file;
@property (readonly) GeometryDimension geometry;
@property (readonly) BOOL removeAlphaChannel;
@property (readonly) id&lt;CairoColorProtocol&gt; backgroundColor;
@end
</code></pre>

Let’s look at each of these properties excluding ImageFileProtocol which we already talked about...

<ul>
    <li><em>removeAlphaChannel</em> which is a boolean value and that’s transferred between languages easily.</li>
    <li><em>geometry is</em> <em>GeometryDimension,</em> a C struct which contains information about which dimension to scale based on (width, height or scale) and the size. <code>
</code></li>
    <li><em>backgroundColor is</em> <em>CairoColorProtocol</em> which contains information about the background color in case you need an image without a transparency and your source image has a transparency (i.e. App Icons).</li>
</ul>

With the <em>CairoColorProtocol, </em>we could simply create a new class that contains the info that is needed. However, in Swift, we could minimize new code by simply using an Extension on an existing class.

<h3>Using Extensions to Add Functionality to Existing Classes</h3>

Here is how the protocol for <em>CairoColorProtocol </em>looks in Objective-C:

<pre><code>@protocol CairoColorProtocol &lt;NSObject&gt;
@property (readonly) double red;
@property (readonly) double green;
@property (readonly) double blue;
@end
</code></pre>

In this case rather <ins>then</ins> creating a new class to implement this in Swift we can extend existing class: NSColor. Here the<ins> simple</ins> implementation<ins> as a Swift extension</ins>:

<pre><code>extension NSColor: CairoColorProtocol {
  public var red: Double {
    return Double(redComponent)
  }

  public var green: Double {
    return Double(greenComponent)
  }

  public var blue: Double {
    return Double(blueComponent)
  }
}
</code></pre>

Now we can easily communicate between Swift and Objective-C. However, there are a couple of improvements we could make to our Objective-C code to make it even better for Swift.

<h2>Writing Swift friendly code in Objective-C</h2>

Since day one of Swift, working with Objective-C has been a requirement in some way. As the years have passed, Objective-C has added attributes to make it friendly to paradigms in Swift. There are two main ways we’ll look at: <strong>error handling</strong> and <strong>optionals</strong>.

<h3>Error Handling</h3>

Since the inclusion of try statements in Swift 2.0, we’ve replaced the need for NSError pointers as parameters in Swift. However, if you follow the standard NSError paradigms in Objective-C, Swift will see that method as though it could throw an Error. Here’s an example from the CairoInterface class:

<pre><code>@interface CairoInterface : NSObject
+  (BOOL)exportImage:(id&lt;ImageHandle&gt;) sourceHandle withSpecification: (id&lt;ImageSpecificationProtocol&gt;) specification error: (NSError **) error;
@end
</code></pre>

Swift will see this as:

<pre><code>class CairoInterface : NSObject {
    static func exportImage(_ sourceHandle: ImageHandle!, withSpecification specification: ImageSpecificationProtocol!) throws
}
</code></pre>

Two things are required for the translation to an error throwing function:

<ul>
    <li>the return is a boolean which indicates true for success, false for failure</li>
    <li>an NSError pointer parameter specifically named error</li>
</ul>

Let’s take a look again at the ImageHandleBuilder method:

<pre><code>@interface ImageHandleBuilder : NSObject
@property (class, nonatomic, assign, readonly) ImageHandleBuilder*  shared;
- (id&lt;ImageHandle&gt;) imageHandleFromFile: (id&lt;ImageFileProtocol&gt;) file error:(NSError**) error;
@end
</code></pre>

The difference is that it returns an actual value possibly. Otherwise, we still have an NSError pointer parameter named error.

<pre><code>class ImageHandleBuilder : NSObject {
    func imageHandleFromFile(_ file: ImageFileProtocol!) throws -&gt; ImageHandle!
}
</code></pre>

By following this standard, we’ve made error handling much cleaner and easier between languages. However, we still have annoying implicit optionals. Luckily there’s a way to fix that as well.

<h3>Optionals and Objective-C</h3>

One of the first features of Swift was the idea of Optionals. Optionals remove the ambiguity of pointers used by Objective-C. Unfortunately, for each of these pointers in Objective-C, Swift sees an implicitly unwrapped optional. You can read more about<a href="https://learningswift.brightdigit.com/understanding-optionals-in-swift/" rel="noopener"> optionals and implicitly unwrapped optionals here.</a> Luckily, there are Objective-C attributes which can help clarify optionals better.

Objective-C has two attributes to signify to Swift whether a parameter, property, or return value is optional or not: <code>_Nonnull</code> and <code>_Nullable</code>. Let’s look again at <em>ImageHandleBuilder</em>:

<pre><code>@interface ImageHandleBuilder : NSObject
@property (class, nonatomic, assign, readonly) ImageHandleBuilder*  shared;
- (id&lt;ImageHandle&gt;) imageHandleFromFile: (id&lt;ImageFileProtocol&gt;) file error:(NSError**) error;
@end
</code></pre>

We have a singleton, <code>shared</code> which must exist and we have a function <code>imageHandleFromFile:error:</code> which needs an ImageFileProtocol and may return an ImageHandle. There, the property <code>shared </code>needs to be  <code>_Nonnull</code><code></code> and the <code>file</code> parameter in <code>imageHandleFromFile:error:</code> needs to be <code>_Nonnull</code>. Since <code>imageHandleFromFile:error:</code> can fail and throw an error, the return type must be optional so we mark that we the <code>_Nullable</code> attribute. Here is the result:

<pre><code>@interface ImageHandleBuilder : NSObject
@property (class, nonatomic, assign, readonly) ImageHandleBuilder* _Nonnull shared;
- (id&lt;ImageHandle&gt; _Nullable) imageHandleFromFile: (id&lt;ImageFileProtocol&gt; _Nonnull) file error:(NSError**) error;
@end
</code></pre>

So now rather than Swift seeing:

<pre><code>class ImageHandleBuilder : NSObject {
    class var shared : ImageHandleBuilder! { get }
    func imageHandleFromFile(_ file: ImageFileProtocol!) throws -&gt; ImageHandle!
}
</code></pre>

We’ll see:

<pre><code>class ImageHandleBuilder : NSObject {
    class var shared : ImageHandleBuilder { get }
    func imageHandleFromFile(_ file: ImageFileProtocol) throws -&gt; ImageHandle?
}
</code></pre>

This makes the API much more understandable in Swift and easier to interface with.

<h2>Making Code Friendly</h2>

When you need to write Objective-C code or perhaps you are in the process of migrating Objective-C code over to Swift. There are a few things you can do:

<ul>
    <li>If you can to keep as much as code in Swift as possible, <strong>write Protocols in Objective-C and implementation (i.e. Classes) in Swift</strong></li>
    <li><strong>Use Protocol to guide the API for other frameworks and libraries</strong></li>
    <li><strong>Use Extensions to avoid duplicating types</strong> and reuse existing types.</li>
    <li>In Objective-C, if your function can throw an Error, <strong>use the standard paradigm in so Swift interprets your code correctly</strong></li>
    <li><strong>Mark your Objective-C generously</strong> with attributes to note whether a parameter, return type, etc... is nullable or not.</li>
</ul>

Next, we'll be talking about using those C++ libraries in a framework. If you want to stay up-to-date,<a href="http://eepurl.com/c5uqxP" target="_blank" rel="noopener"> fill out the form</a> so I can let you know when the article is posted. In the meantime, feel free to checkout <a href="https://speculid.com" rel="noopener">Speculid</a> or<a href="https://github.com/brightdigit/Speculid" rel="noopener"> the open-source repo</a>, as well as <a href="https://developer.apple.com/documentation/swift/migrating_your_objective-c_code_to_swift" rel="noopener">Apple's documentation on migrating from Objective-C to Swift</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>211</wp:post_id>
		<wp:post_date><![CDATA[2018-11-14 10:23:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-14 15:23:49]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-11-14 10:23:49]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-11-14 15:23:49]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[objective-c-and-swift-being-friendly]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="building-speculid"><![CDATA[Building Speculid]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[212]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_dp_original]]></wp:meta_key>
		<wp:meta_value><![CDATA[195]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[objective-c and swift]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[94]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Objective-C is still necessary for Swift development. With the introduction of C++ libraries in version 2.0 of Speculid, Objective-C became necessary.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_mess]]></wp:meta_key>
		<wp:meta_value><![CDATA[Here are some ways Objective-C and Swift can be more friendly to each other.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560410483;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:195;}i:1;a:1:{s:2:"id";i:169;}i:2;a:1:{s:2:"id";i:260;}}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[ScriptingBridge - Communicating with Swift  and AppleScript]]></title>
		<link>https://learningswift.brightdigit.com/scriptingbridge-applescript-swift/</link>
		<pubDate>Sat, 15 Jul 2017 14:34:38 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=246</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>AppleScript </strong>is a great technology on macOS for both developers and power users. With <strong>AppleScript, </strong>users can create automated processes which work other apps. As a developer though, sometimes you want a <strong>build an app in Xcode with the power of AppleScript</strong> without the need to have separate script files. That's where ScriptingBridge comes in.

<!--more-->

To work with AppleScript in any app, there are two options to do this:

<ol>
    <li><strong>Write a separate AppleScript file </strong>and use the <a href="https://developer.apple.com/documentation/foundation/scripting_support" target="_blank" rel="noreferrer noopener"><em>NSAppleScript API</em></a> to execute and run the script.</li>
    <li><strong>Use ScriptingBridge</strong> to work with AppleScript in <strong>Swift </strong>or <strong>Objective-C</strong>.</li>
</ol>

We are going to look at the second option: ScriptingBridge. In particular, <strong>how to use ScriptingBridge in Swift</strong> without the need for AppleScript files or event Objective-C bridging.

<h2>The Drawbacks of ScriptingBridge</h2>

<strong>If you intend to write an App for the Mac App Store there are restrictions as </strong><a href="https://developer.apple.com/library/content/qa/qa1888/_index.html" target="_blank" rel="noreferrer noopener"><strong>noted by Apple</strong></a><strong>.</strong> You can also look at <a href="https://www.objc.io/issues/14-mac/sandbox-scripting/" target="_blank" rel="noreferrer noopener">this article by Craig Hockenberry</a> which shows how you can use the AppleScript API in a Mac Store app. The bottom line is: <strong>You can not use ScriptingBridge with an app in the Mac App Store.</strong>

<h2>Objective-C ScriptingBridge to Swift ScriptingBridge</h2>

When it comes to <strong>Objective-C ScriptingBridge</strong>, Apple already provides <a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ScriptingBridgeConcepts/UsingScriptingBridge/UsingScriptingBridge.html#//apple_ref/doc/uid/TP40006104-CH4-DontLinkElementID_12" target="_blank" rel="noreferrer noopener">tools to prepare the code</a>. Luckily, <strong>Tony Ingraldi of </strong><a href="http://majestysoftware.com/" target="_blank" rel="noreferrer noopener"><strong>Majesty Software</strong></a><strong>, has </strong><a href="https://github.com/tingraldi/SwiftScripting" target="_blank" rel="noreferrer noopener"><strong>a great set of python scripts</strong></a><strong> for creating the same code in Swift.</strong> For more details on this specifically, take a look <a href="https://github.com/tingraldi/SwiftScripting" target="_blank" rel="noreferrer noopener">his repo on GitHub</a> or <a href="https://majestysoftware.wordpress.com/2015/03/31/swift-scripting-part-1/" target="_blank" rel="noreferrer noopener">his blog post here</a>.

<h2>ScriptingBridge with Safari</h2>

Now let’s try doing this <strong>by writing </strong><a href="https://github.com/brightdigit/jURLnal" target="_blank" rel="noreferrer noopener"><strong>an app which pulls the tab urls out of a Safari window</strong></a><strong>. </strong>The repo for this app can be found <a href="https://github.com/brightdigit/jURLnal" target="_blank" rel="noreferrer noopener">here</a>.

Building the Swift Code from AppleScript Definition

Download the python scripting tools from the <a href="https://github.com/tingraldi/SwiftScripting" target="_blank" rel="noreferrer noopener">SwiftScripting repo on GitHub</a>. From the repo’s directory, run the following commands:

<pre class="wp-block-code"><code>pip install clangsdef /Applications/Safari.app &gt; Safari.sdefsdp -fh --basename Safari Safari.sdef./sbhc.py Safari.h./sbsc.py Safari.sdef</code></pre>

Let’s break this down:

<ol>
    <li><code>pip install clang</code>- ensures clang is installed for python</li>
    <li><code>sdef /Applications/Safari.app &gt; Safari.sdef</code>- gets the scripting definition from the specified scriptable application</li>
    <li><code>sdp -fh --basename Safari Safari.sdef</code>- transforms a scripting definition to an Objective-C header file</li>
    <li><code>./sbhc.py Safari.h</code>- transforms the Objective-C header file to Swift</li>
    <li><code>./sbsc.py Safari.sdef</code>- extracts the enums from the standard definition to Swift</li>
</ol>

Now you should have 4 new files:

<ul>
    <li><strong>Safari.sdef</strong> — the scripting definition file</li>
    <li><strong>Safari.h</strong> — the objective-c header file, which we would use if we were doing objective-c directly or using objective-c bridging</li>
    <li><strong>Safari.swift</strong> — the primary file containing the main ScriptingBridge API to the application</li>
    <li><strong>SafariScripting.swift</strong> — the necessary enums needed by the ScriptingBridge API for the application</li>
</ul>

Since we are using only Swift code, we will only need the two Swift files (Safari.swift and SafariScripting.swift) in our application.

Add the two files to your project in Xcode and now in our application, we can talk to Safari.

<h2>Using the ScriptingBridge API for Safari</h2>

To pull the all Safari windows currently open:

<pre class="wp-block-code"><code>if let application = SBApplication(bundleIdentifier: "com.apple.Safari") {  let safariApplication = application as SafariApplication  let safariWindows = safariApplication.windows?().flatMap({ $0 as? SafariWindow })  ...}</code></pre>

We call the <code><a href="https://developer.apple.com/documentation/scriptingbridge/sbapplication" target="_blank" rel="noreferrer noopener">SBApplication</a></code>constructor using the bundle identifier. If an object is returned, we cast as the <code>SafariApplication</code>protocol and get all the windows. The <code>windows</code>property only returns a <code><a href="https://developer.apple.com/documentation/scriptingbridge/sbelementarray" target="_blank" rel="noreferrer noopener">SBElementArray</a></code>, so we need to cast those elements to a <code>SafariWindow</code>.

Therefore by using the SafariWindow, we can get the window’s set of tabs:

<pre class="wp-block-code"><code>let safariWindow = safariWindows?.firstlet safariTab = safariWindow?.tabs?().firstObject as? SafariTablet url = safariTab?.URL</code></pre>

So, let’s break this down:

<ol>
    <li><code>let safariWindow = safariWindows?.first</code>- get the first Safari window</li>
    <li><code>let safariTab = safariWindow?.tabs?().firstObject as? SafariTab</code>- grab the first tab of the Safari window and cast it to SafariTab</li>
    <li><code>let url = safariTab?.URL</code>- get the url of that particular tab</li>
</ol>

If you need more details, check out <a href="https://github.com/brightdigit/jURLnal" target="_blank" rel="noreferrer noopener">the repo for the sample app</a> called <a href="https://github.com/brightdigit/jURLnal" target="_blank" rel="noreferrer noopener">jURLnal</a> which copies the URLs to the clipboard.

<h2>Conclusion</h2>

So as you can see -

<ol>
    <li>We have used the standard ScriptingBridge tools to build the standard definition and Objective-C header file of Safari’s AppleScript API.</li>
    <li>By using <a href="https://github.com/tingraldi/SwiftScripting" target="_blank" rel="noreferrer noopener">a set of python scripts</a> from Tony Ingraldi of <a href="http://majestysoftware.com/" target="_blank" rel="noreferrer noopener">Majesty Software</a>, we can convert the Objective-C header file and standard definition to Swift code.</li>
    <li>Adding the two Swift files to our project, we can use the API to extract the windows and tabs of the currently open Safari application.</li>
</ol>

If you want to learn more about Swift and ScriptingBridge, sign up at the <a href="http://eepurl.com/dNQNAw">form here</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>246</wp:post_id>
		<wp:post_date><![CDATA[2017-07-15 10:34:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-07-15 14:34:38]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-11-16 10:47:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-11-16 15:47:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[scriptingbridge-applescript-swift]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[247]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[ScriptingBridge]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[You may want to build an app in Xcode with the power of AppleScript and without the need for scripts - particularly using Swift with ScriptingBridge.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[87]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[scriptingbridge-%e2%80%8acommunicating-using-applescript-swift]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_6792719]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018-11-16]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560418398;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:211;}i:1;a:1:{s:2:"id";i:195;}i:2;a:1:{s:2:"id";i:544;}}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Swift Development Tips - Speculid & Try!Swift NYC 2018]]></title>
		<link>https://learningswift.brightdigit.com/swift-development-tips-speculid-tryswift/</link>
		<pubDate>Mon, 19 Nov 2018 14:30:00 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=260</guid>
		<description></description>
		<content:encoded><![CDATA[<iframe src="https://www.youtube.com/embed/videoseries?list= PLmpJxPaZbSnB_h1FlXwN7TdJ7UGzvEtsG" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"><span style="display: inline-block; width: 0px; overflow: hidden; line-height: 0;" data-mce-type="bookmark" class="mce_SELRES_start">﻿</span><span style="display: inline-block; width: 0px; overflow: hidden; line-height: 0;" data-mce-type="bookmark" class="mce_SELRES_start">﻿</span></iframe>

<a href="https://learningswift.brightdigit.com/speaking-a2-speculid-tryswiftnyc/" target="_blank" rel="noopener">On October 11,</a> I spoke at <a href="https://www.meetup.com/A2-CocoaHeads/events/254589885/" target="_blank" rel="noopener">Ann Arbor Cocoaheads</a> at ArborMoon and gave some swift development tips. Specifically based my experience developing <a href="https://speculid.com/?utm_source=learning-swift&amp;utm_medium=post">Speculid</a> for macOS as well as <a href="https://learningswift.brightdigit.com/swift-thoughts-tryswift-nyc-2018/" target="_blank" rel="noopener">Try!Swift New York.</a>

<!--more-->

<blockquote class="wp-block-quote">Leo will share some thoughts on the challenges in building Speculid, such as using C++ libraries in a Swift app, continuous integration (Travis-Ci) and more. He’ll also be freshly back from TrySwift in NYC and will share some of his observations on the Swift community.</blockquote>

If you are interested in the videos from Try!SwiftNYC 2018, they <a href="https://www.youtube.com/playlist?list=PLCl5NM4qD3u8NyOjK0deNu4AQk2hgyhjS" target="_blank" rel="noopener">are posted on youtube</a>. You can also access <a href="https://www.dropbox.com/s/214oa7zo42aul0b/Swift%20Development%20Tips%20with%20Speculid%20and%20Try%21Swift%20NYC%20-%20Slides.zip?dl=0" target="_blank" rel="noopener">my slides</a> as well.

Be sure to check our other posts on <a href="https://learningswift.brightdigit.com/category/building-icons-and-image-sets/" target="_blank" rel="noopener">managing graphics for Xcode</a> as well as the <a href="https://learningswift.brightdigit.com/category/building-speculid/" target="_blank" rel="noopener">development of Speculid</a> for more swift development tips.

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[On October 11, I spoke at Ann Arbor Cocoaheads at ArborMoon and gave some swift development tips. Specifically based my experience developing Speculid for macOS as well as Try!Swift New York.]]></excerpt:encoded>
		<wp:post_id>260</wp:post_id>
		<wp:post_date><![CDATA[2018-11-19 09:30:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-19 14:30:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-11-19 10:19:36]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-11-19 15:19:36]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[swift-development-tips-speculid-tryswift]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="building-icons-and-image-sets"><![CDATA[Building Icons and Image Sets]]></category>
		<category domain="category" nicename="building-speculid"><![CDATA[Building Speculid]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_6aab5e47f4a1839947a8c007ff742224]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_33de1929a874186bcc8c518cdbfca7eb]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_730fd9500fb66281d6c41b69e8b176d3]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[264]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[swift development tips]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[75]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[On October 11, I spoke at Ann Arbor Cocoaheads at ArborMoon and gave some swift development tips. Specifically developing Speculid and Try!Swift New York.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_mess]]></wp:meta_key>
		<wp:meta_value><![CDATA[Swift Development Tips - Speculid & Try!Swift NYC 2018 Video]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_6792719]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560043528;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:169;}i:1;a:1:{s:2:"id";i:195;}i:2;a:1:{s:2:"id";i:211;}}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Freelancing - How to Prepare and Get Started]]></title>
		<link>https://learningswift.brightdigit.com/freelancing-prepare-started/</link>
		<pubDate>Mon, 10 Dec 2018 17:58:45 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=280</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Last week I spoke at the <a rel="noreferrer noopener" aria-label="Last week I spoke at the LaDev in Ann Arbor on what it takes to go out on your own as a freelancer and entrepeneur.&nbsp; (opens in a new tab)" href="https://www.meetup.com/ladevmi/events/256221529/" target="_blank">LaDev in Ann Arbor</a> on what it takes to go out on your own as a freelancing software developer and entrepreneur.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>Leo Dion of BrightDigit will discuss what should be done to get started as well as how what skills you can nurture to become a successful freelancer. We'll talk about what is needed to manage your money, your reputation, and your time. If you are thinking about freelancing or just curious about what freelancing involves you’ll want to check this out.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>I have posted <a href="https://www.dropbox.com/s/co7wh1xiqh5q94y/181205-Prepare%20and%20Get%20Started.zip?dl=0" target="_blank" rel="noreferrer noopener" aria-label="I have posted the slides as well as the video of the event which you can check out.&nbsp; (opens in a new tab)">the slides</a> as well as the video of the event which you can check out.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {"url":"https://www.youtube.com/watch?v=WVXvIso24Sc","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=WVXvIso24Sc
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>What questions do you have? What challenges have you faced along the way? <a href="https://twitter.com/leogdion" target="_blank" rel="noreferrer noopener" aria-label="What questions do you have? What challenges have you faced along the way? Let me know on Twitter what are your thoughts. (opens in a new tab)">Let me know on Twitter</a> what are your thoughts.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>280</wp:post_id>
		<wp:post_date><![CDATA[2018-12-10 12:58:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-10 17:58:45]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-12-10 13:49:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-12-10 18:49:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[freelancing-prepare-started]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[freelancing]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[79]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[282]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Last week I spoke at the LaDev in Ann Arbor on what it takes to go out on your own as a freelancing software developer and entrepreneur.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_mess]]></wp:meta_key>
		<wp:meta_value><![CDATA[Last week I spoke at @LaDev on what it takes to go out on your own as a freelancing software developer and entrepreneur.  The video and slides have been posted. Learn more about how to get started marketing, networking, sales, etc... ]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560417308;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:544;}i:1;a:1:{s:2:"id";i:295;}i:2;a:1:{s:2:"id";i:158;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-280]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Swift 5.0 and XCode 10.1 - Using a Custom Toolchain]]></title>
		<link>https://learningswift.brightdigit.com/swift-5-0-xcode-10-1/</link>
		<pubDate>Wed, 19 Dec 2018 13:05:59 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=295</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Just as <a rel="noreferrer noopener" aria-label="Just as Swift 4.2 brought some interesting features, the release of Swift 5.0 will soon, you may be interested in trying out the latest version features such as raw strings, dynamically callable types, and compactMapValues for dictionaries. Of course, the biggest feature of Swift 5.0 is ABI stability. (opens in a new tab)" href="https://learningswift.brightdigit.com/swift-4-2-random-changes-wwdc-2018/" target="_blank">Swift 4.2 brought some interesting features</a>, the release of Swift 5.0 will bring several as well such as <a rel="noreferrer noopener" aria-label="With the release of Swift 5.0 soon, you may be interested in trying out the latest version features such as raw strings, dynamically callable types, and compactMapValues for dictionaries. (opens in a new tab)" href="https://github.com/apple/swift-evolution/blob/master/proposals/0200-raw-string-escaping.md" target="_blank">raw strings</a>, <a rel="noreferrer noopener" aria-label="With the release of Swift 5.0 soon, you may be interested in trying out the latest version features such as raw strings, dynamically callable types, and compactMapValues for dictionaries. (opens in a new tab)" href="https://github.com/apple/swift-evolution/blob/master/proposals/0216-dynamic-callable.md" target="_blank">dynamically callable types</a>, and <a rel="noreferrer noopener" aria-label="With the release of Swift 5.0 soon, you may be interested in trying out the latest version features such as raw strings, dynamically callable types, and compactMapValues for dictionaries. (opens in a new tab)" href="https://github.com/apple/swift-evolution/blob/master/proposals/0218-introduce-compact-map-values.md" target="_blank">compactMapValues for dictionaries</a>. Of course, the biggest feature of Swift 5.0 is <a href="https://swift.org/abi-stability/" target="_blank" rel="noreferrer noopener" aria-label="Just as Swift 4.2 brought some interesting features, the release of Swift 5.0 will bring several as well such as raw strings, dynamically callable types, and compactMapValues for dictionaries. Of course, the biggest feature of Swift 5.0 is ABI stability. (opens in a new tab)">ABI stability</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The good news is you can try out these new features <strong>now</strong> by using the Swift 5.0 development branch. </p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:heading -->
<h2>Using Custom Toolsets</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you use the swift package manager, I highly recommend taking a look at the<a rel="noreferrer noopener" aria-label="The good news is you can try out these new features and start using Swift 5.0 based on the dev branch now. If you use the swift package manager and not Xcode, I highly recommend taking a look at the swiftenv&nbsp;project by Kyle Fuller. As a frequent user of nvm and rbenv and other tools, this is great.&nbsp; (opens in a new tab)" href="https://github.com/kylef/swiftenv/" target="_blank"> swiftenv&nbsp;project</a> by Kyle Fuller. As a frequent user of <em>nvm</em> and <em>rbenv</em> and other tools, this is great. However, Xcode is particular about using different toolchains and development versions of Swift, so it takes a bit of tweaking to get it to work.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Here's how:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Download and Install <a rel="noreferrer noopener" aria-label="Download and Install the Swift 5.0 Development Branch Toolchain. (opens in a new tab)" href="https://swift.org/download/#snapshots" target="_blank">the Swift 5.0 Development Branch Toolchain.</a></li><li>Create Your Project or Target in Xcode 10.1</li><li>Go to the Top Menu and Select<strong><em> Xcode...Toolchains... Swift 5.0 Snapshot...</em></strong></li></ol>
<!-- /wp:list -->

<!-- wp:image {"id":308,"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/12/Xcode-Toolchain-Menu.png" alt="Xcode Toolchain Menu Item" class="wp-image-308"/><figcaption>Xcode Toolchain Menu Item</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>If you try to compile you will get an error saying no <em>SWIFT_VERSION </em>is set. So you try to set the <em>SWIFT_VERSION,</em> but 5.0 is not available under<strong><em> Build Settings</em></strong>&nbsp;<strong>and </strong>even if you try to set it manually by editing&nbsp;the <em>.pbxproj,&nbsp;</em>Xcode will say 5.0 is not supported. So now what? Well, you have two options: <strong>Use the <em>Legacy Build System</em></strong><em> </em>or <strong>hack Xcode program language support.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Option #1: Using the Legacy Build System for Swift 5.0</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To use the <em>Legacy Build System</em>&nbsp;which essentially ignores the&nbsp;<em>SWIFT_VERSION</em>:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":309,"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/12/Xcode-ProjectSettings-Menu-e1545173707171.png" alt="Xcode Project Settings Menu Item" class="wp-image-309"/><figcaption>Xcode Project Settings Menu Item</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:list {"ordered":true} -->
<ol><li>Go to the Top Menu and Select <strong><em>File...Project Settings</em></strong></li><li>Under <g class="gr_ gr_250 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Grammar only-ins replaceWithoutSep" id="250" data-gr-id="250"><em>Shared</em></g><em> Project Settings</em> section select <strong><em>Legacy Build System</em>.</strong>&nbsp;</li></ol>
<!-- /wp:list -->

<!-- wp:image {"id":310,"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2018/12/Xcode-ProjectSettings-Window-e1545173841972.png" alt="Xcode Project Settings Window" class="wp-image-310"/><figcaption>Xcode Project Settings Window</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>You should be good to go. However, if you wish to use the <strong><em>New Build System</em></strong>,&nbsp;you'll need to do a bit of tweaking&nbsp;of the Xcode application files.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Option #2: Using the New Build System by Hacking Xcode</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you wish to use the <strong><em>New Build System</em></strong>, you'll need to edit a <strong><em>.xcspec</em></strong> file inside the Xcode.app. Thanks to <a href="https://forums.swift.org/t/how-to-set-swift-version-5-for-recent-dev-snapshots-in-xcode-build-settings/18692/20" target="_blank" rel="noreferrer noopener" aria-label="If you wish to use the New Build System, you'll need to edit a .xcspec file inside the Xcode.app. Thanks to some help from the Swift team here is how: (opens in a new tab)">some help from the Swift team</a> here is how:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>In your favorite editor, open the file:&nbsp;</li></ol>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/Applications/Xcode.app/Contents/PlugIns/Xcode3Core.ideplugin/Contents/SharedSupport/Developer/Library/Xcode/Plug-ins/XCLanguageSupport.xcplugin/Contents/Resources/Swift.xcspec</code></pre>
<!-- /wp:code -->

<!-- wp:html -->
<ol class="continue" start="2">
  <li>Find the section with SupportedLanguage</li>
</ol>
<!-- /wp:html -->

<!-- wp:code -->
<pre class="wp-block-code"><code>        SupportedLanguageVersions = (  
            3.0,             
            4.0,
             4.2      
        );         
        LanguageVersionDisplayNames = {             
            3.0 = "Swift 3";             
            4.0 = "Swift 4";             
            4.2 = "Swift 4.2";       
        }; </code></pre>
<!-- /wp:code -->

<!-- wp:html -->
<ol class="continue" start="3">
  <li>Add 5.0 as a <strong><em>SupportedLanguageVersions</em></strong> and add a label for it under <strong><em>LanguageVersionDisplayNames</em></strong> (such as "5.0-dev")</li>
</ol>
<!-- /wp:html -->

<!-- wp:code -->
<pre class="wp-block-code"><code>        SupportedLanguageVersions = (  
            3.0,             
            4.0,
             4.2,
             5.0         
        );         
        LanguageVersionDisplayNames = {             
            3.0 = "Swift 3";             
            4.0 = "Swift 4";             
            4.2 = "Swift 4.2";             
            5.0 = "Swift 5.0-dev";         
        }; </code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now all you'll need to do is select the SWIFT_VERSION as the display name you have set up for Swift 5.0. Now you are using both the&nbsp;<strong><em>New Build System </em></strong>and <strong>Swift 5.0.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For more details on Swift 5.0 and its features,&nbsp;<a rel="noreferrer noopener" aria-label="For more details on Swift 5.0 and the features it has check out this article from Paul Hudson.&nbsp; (opens in a new tab)" class="" href="https://www.hackingwithswift.com/articles/126/whats-new-in-swift-5-0">check out this article from Paul Hudson</a>&nbsp;and stay tuned for more articles here on how to take advantage of Swift 5.0 and its new features.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>295</wp:post_id>
		<wp:post_date><![CDATA[2018-12-19 08:05:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-12-19 13:05:59]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-12-19 08:13:47]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-12-19 13:13:47]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[swift-5-0-xcode-10-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[swift 5.0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[98]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[303]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[You can try the features of Swift 5.0 using the development branch toolchain now. However with Xcode 10.1, it takes a bit of tweaking to get it to work.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2018-12-18]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_mess]]></wp:meta_key>
		<wp:meta_value><![CDATA[A guide to using Swift 5.0 in Xcode 10.1 with custom toolchains]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560388039;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:260;}i:1;a:1:{s:2:"id";i:506;}i:2;a:1:{s:2:"id";i:246;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-295]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[EmpowerApps.Show &#8211; Project Estimation]]></title>
		<link>https://learningswift.brightdigit.com/empowerapps-show-project-estimation/</link>
		<pubDate>Mon, 07 Jan 2019 21:40:23 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=322</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p><a href="https://www.empowerapps.show/6" target="_blank" rel="noreferrer noopener" aria-label="In this episode (opens in a new tab)">In this episode</a>, Leo and Theresa talk about how the process of going from a customer's idea to a proposal happens. These also include: what features to consider, how much involvement might be needed to get a proposal, budgets, timelines and more…</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:html -->
<iframe src='https://share.transistor.fm/e/00603d96' width='100%' height='180' frameborder='0' scrolling='no' seamless='true' style='width:100%; height:180px;'></iframe>
<!-- /wp:html -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>322</wp:post_id>
		<wp:post_date><![CDATA[2019-01-07 16:40:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-07 21:40:23]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-11 11:36:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-11 15:36:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[empowerapps-show-project-estimation]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="empowerapps-show-podcast"><![CDATA[EmpowerApps.Show Podcast]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_heateor_sc_meta]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Project Estimation]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[48]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[495]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[In this episode, Leo and Theresa talk about the new Apple Watch Series 4. How should apps be updated on the new watch? What kind of industries should think about having an app on the watch?]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1559401879;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:57;}i:1;a:1:{s:2:"id";i:280;}i:2;a:1:{s:2:"id";i:412;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-322]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Unit Testing Networking with Associated Types]]></title>
		<link>https://learningswift.brightdigit.com/?p=996</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=996</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Two of most painful things in Swift can be unit tests and generics with protocols. However there's a use-case to be made when you are try unit test around certain integrations like networking. That's where Generics, Protocols and Associated Types help.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In this article, I want to go over how I unit test around networking by using Protocols with Associated Types. By following these examples, you can easily mock your networking allowing for better code coverage and easier unit testing.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Avoiding Outside Integrations</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>One of the key takeaways with unit testing is you want to avoid anything that needs to be integrated with the outside. Networking is a prime example of this. If you are actual making networks inside your unit test, you are probably doing something wrong.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This is where mocking comes. The idea of mocking is simply fake various conditions which a network call could do and verify that your behaves correctly. Therefore, the challenge is how do you mock networking (i.e. URLSession, etc...) in Swift.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Protocol-Oriented Testing</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>996</wp:post_id>
		<wp:post_date><![CDATA[2020-06-18 08:38:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-18 08:38:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-18 12:38:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Working Combine with Classic APIs]]></title>
		<link>https://learningswift.brightdigit.com/?p=999</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=999</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>How Combine changes the paradigm </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Issues with Older APIs</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Common Publishers </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Common Problems</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>999</wp:post_id>
		<wp:post_date><![CDATA[2020-06-22 09:32:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-22 09:32:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-22 13:32:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Combine-ing the Old with the New]]></title>
		<link>https://learningswift.brightdigit.com/?p=1004</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=1004</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>Adapting Combine to a variety of older patterns, APIs and practices</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>So now it is more important than ever to look at Combine and adapt it to older APIs. So, first we are going to take a look at Combine and how it works. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Next we’re gonna look at common publishers we’ll be using eally talk about the common problems Fox run into with combine such as complex data, dealing with failures, dealing with an S objects and then will get into dealing with comment if he eyes such as healthcare use your default her location Claudia as well as outside APR is like fireplace</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>What is Reactive Functional Programming?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The power of Combine comes from the fact that it uses a programming paradigm known as reactive functional programming. In other words, Combine reacts to changes in data while allowing the programmer to convert and combine various sources in order to update part of the application accordingly.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Of course, this is particularly useful when it comes to SwiftUI since SwiftUI can take advantage of those data sources i.e. Publishers accordingly.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Common Publishers</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>With this in mind, let’s take a look at the most common Publishers available. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3><code>@Published</code> Property Wrapper</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>First is the commonly used <code>@Published</code> property wrapper. The <code>@Published</code> property wrapper automatically converts a common property into a  Publisher. Most importantly, it enables SwiftUI to listen to changes from the property and update the UI accordingly. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>CurrentValueSubject</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Underneath the hood, a <code>@Published</code> property is probably a <code>CurrentValueSubject</code>. This is a publisher which also holds latest the value from the Publisher. While it is nearly identical to a <code>@Published</code> property, there are a few niceties lost by using a <code>CurrentValueSubject</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Here are two properties we are using in an <code>ObservedObject</code> used by SwiftUI:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class ContentObject: ObservableObject {
  @Published var value : Int
  var valueB : CurrentValueSubject&lt;Int, Never>
...
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Firstly, we can see there are two generic type arguments for <code>CurrentValueSubject</code>: <code>Int</code> for the successful value type and <code>Never</code>. Correspondingly, the second <code>Never</code> type argument signifies the <code>Failure</code> type of the Publisher.  <strong>What important to note is that SwiftUI requires that Publishers never fail in order to be used in a UI component. </strong> Therefore, we are using the <code>Never</code> type as opposed to an <code>Error</code> type in order to indicate that this publisher never fails.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Now let’s take a look at the differences in updating the value:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>self.valueB.send(self.valueB.value + 1)
self.value += 1
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Notice how we need to use send to update the value as opposed to just using the equality operator. Also we can see in order to access the value we need to use the <code>.value</code> property. For example, here’s how we access the values for SwiftUI components.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...
@EnvironmentObject var object : ContentObject

var body: some View {
  VStack{
     Text(object.value.description)
     Text(object.valueB.value.description)
...
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Conversely we can access the publisher from the <code>@Published</code> property by using the <code>$</code> prefix on the variable name. This is important for the functional aspect of transforming the data.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>PassthroughSubject</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There are instances where we need to know what data and when data comes in but don’t need that data to necessarily stick around. In this case, a <code>PassthroughtSubject</code> would be useful. If you only need to act on data when it comes in and perhaps transform it accordingly, there is no need to store that initial information. For example, the action of the button press is more important then the information itself:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class ContentObject: ObservableObject {
  var buttonPress = PassthroughSubject&lt;Void, Never>()
...
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In our SwiftUI, we can simply send a <code>Void</code> object to activate the publisher:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>Button(action: {
   self.object.increment.send(())
}) {
  Text("Increment")
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>We covered how to create a property for a Publisher. Let’s now talk about creating within our code with Just and Future.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Constructing Publishers</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There are two main Publisher types which will be useful for transforming older APIs: Just and Future. Firstly, Just is the most simple and is initially a constant hard-coded Publisher. For instance, there will be cases where a Publisher is required rather than a value - Just is perfect for these cases. Since they can never fail, all Just publishers have a <code>Never</code> failure type.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>More importantly, there are Futures. Futures are ideal for asynchronous callbacks and promises which need to be mapped to a Publisher. To better explain the purpose of Futures, let’s deep dive into one important transform: <code>.flatMap</code></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Built-In Publishers and Transforms</h2>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>Older APIs </h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>Dealing with Delegates</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>More often than when dealing with older Objective-C APIs, we see something like this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>protocol NSDelegate : NSObjectProtocol {
  func manager(_ manager: NSManager, hasData data: AnyObject)
  func manager(_ manager: NSManager, grantedPermission: BoolOrEnum)
}

class NSManager : NSObject {
  weak var delegate : NSDelegate?
  
  func requestAuthorization()  
  func beginUpdates () 
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this example, we have a some sort of Manager class and a Delegate protocol which needs to be an NSObject. A great use case of this is CoreLocation:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>The App needs to grant some sort permission before use </li><li>The delegate listens to updates from the manager</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>In this case, the challenge to creating a publisher which based on what the delegate receives. Firstly, let’s setup a simple SwiftUI view for our location:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":1003} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/06/Simulator-Screen-Shot-iPhone-11-2020-06-27-at-11.41.11.png" alt="" class="wp-image-1003"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>In this view, we are displaying a description of the authorization status followed by the location. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Therefore, we’ll need a way to convert the enum to a string:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>extension CLAuthorizationStatus: CustomStringConvertible {
  public var description: String {
    switch self {
    case .authorizedAlways:
      return "Always Authorized"
    case .authorizedWhenInUse:
      return "Authorized When In Use"
    case .denied:
      return "Denied"
    case .notDetermined:
      return "Not Determined"
    case .restricted:
      return "Restricted"
    @unknown default:
      return "🤷‍♂️"
    }
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Lastly, something like this for our SwiftUI View:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>struct LocationView: View {
  // CLLocationManager is basically a singleton so an EnvironmentObject ObservableObject makes sense
  @EnvironmentObject var locationObject: CoreLocationObject

  var body: some View {
    VStack {
      // use our extension method to display a description of the status
      Text("\(locationObject.authorizationStatus.description)")
      // use Optional.map to hide the Text if there's no location	
      self.locationObject.location.map {
        Text($0.description)
      }
    }
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>The best part about the Views in SwiftUI is their ability to react to changes from ObservableObjects. With ObservableObjects, there are a variety of ways to do this. In most cases with Objective-C Delegates, EnvironmentObjects makes sense if there is only going to be one Manager in use.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Based on the SwiftUI View above, here’s a stub of how the object will look:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CoreLocationObject: ObservableObject {  
  @Published var authorizationStatus = CLAuthorizationStatus.notDetermined
  @Published var location: CLLocation?
  
  func authorize()
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As we can we have two @Published properties for the authorization status and the location. We set the initial status to <code>notDetermined</code> since we don’t know the status. However in the case of location, we are using an optional type to signify that there are instances where we don’t know the location. With ObservedObjects, it all depends on how your app interprets the information from the API and how it will display that information.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Lastly, we need to a way to trigger the request for authorization. Hence, we have an <code>authorize</code> function which we’ll call from our SwiftUI. Accordingly, there are a few ways we can trigger the CoreLocation authorization from SwiftUI such as <code>.onAppear</code>. However, in this case, I want the user to trigger it based on a tap. Therefore, let’s do this in our SwiftUI code:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...
      Text("\(locationObject.authorizationStatus.description)")
        .onTapGesture {
        self.locationObject.authorize()
      }
...
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>At this point, you should be to compile your app and get a “Not Determined” message.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Now that we have most of the scaffolding out of the way, let’s begin hooking up CoreLocation to our ObservableObject.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Firstly, we’ll need a reference to a <code>CLLocationManager</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CoreLocationObject: ObservableObject {
  let manager: CLLocationManager

  @Published var authorizationStatus = CLAuthorizationStatus.notDetermined
  @Published var location: CLLocation?

  init() {
    let manager = CLLocationManager()
...
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Additionally that <code>CLLocationManager</code> needs a <code>CLLocationManagerDelegate</code> to listen to events. Besides implementing <code>CLLocationManagerDelegate</code>, the class will need create Publishers we can pipe into the location and authorization status properties of <code>CoreLocationObject</code>. </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>protocol CLLocationManagerCombineDelegate: CLLocationManagerDelegate {
  func authorizationPublisher() -> AnyPublisher&lt;CLAuthorizationStatus, Never>
  func locationPublisher() -> AnyPublisher&lt;&#91;CLLocation], Never>
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Let’s take note of a few things:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>The Protocol appends the functionality of  <code>CLLocationManagerDelegate</code></li><li>It builds two publishers which are of type <code>AnyPublisher</code>. This is to remove the need for very specific generic type via type-erasure (i.e. <code>eraseToAnyPublisher</code>).</li><li>Since <code>CLLocationManagerDelegate</code> is an Objective-C Protocol, it requires the implementation to subclass <code>NSObject</code> and it contains optional functionality which we will need to implement</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>With all this in mind, here’s a stub of our  <code>CLLocationManagerCombineDelegate </code> implementation:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CLLocationManagerPublicist: NSObject, CLLocationManagerCombineDelegate {
  // CLLocationManagerCombineDelegate functions
  func authorizationPublisher() -> AnyPublisher&lt;CLAuthorizationStatus, Never>
    
  func locationPublisher() -> AnyPublisher&lt;&#91;CLLocation], Never>

  // CLLocationManagerDelegate functions  
  func locationManager(_: CLLocationManager, didUpdateLocations locations: &#91;CLLocation])
    
  func locationManager(_: CLLocationManager, didChangeAuthorization status: CLAuthorizationStatus)
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Looking the common publisher types listed, above we’ll need to both store the value for authorization status and location. at the same time, we will not need <code>@Published</code> since these will not be used directly by SwiftUI. Therefore, our best option is a <code>CurrentSubjectValue</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CLLocationManagerPublicist: NSObject, CLLocationManagerCombineDelegate {
  let authorizationSubject = CurrentValueSubject&lt;CLAuthorizationStatus?, Never>(nil)

  let locationSubject = CurrentValueSubject&lt;&#91;CLLocation], Never>(&#91;CLLocation]())

  func locationManager(_: CLLocationManager, didUpdateLocations locations: &#91;CLLocation]) {
    locationSubject.send(locations)
  }
    
  func locationManager(_: CLLocationManager, didChangeAuthorization status: CLAuthorizationStatus) {
    authorizationSubject.send(status)
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now we are storing and publishing each change in Core Location. Next we need to take advantage of functional reactive programming to transform these into useful values for <code>ObservableObject</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Let’s start with the more simple <code>locationPublisher</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  func locationPublisher() -> AnyPublisher&lt;&#91;CLLocation], Never> {
    return locationSubject.eraseToAnyPublisher()
  }
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this case, we are using type erasure to hide the specific Publisher we are using. However, for <code>authorizationPublisher</code> there are a few additional step we need to make:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Get the initial authorization status with <code>authorizationStatus</code></li><li>Merge with the <code>CurrentValueSubject</code></li><li>Filter out any <code>nil</code> values</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>With this in mind here’s how we go about doing this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  func authorizationPublisher() -> AnyPublisher&lt;CLAuthorizationStatus, Never> {
    return Just(CLLocationManager.authorizationStatus())
      .merge(with:
        authorizationSubject.compactMap { $0 }
    ).eraseToAnyPublisher()
  }
</code></pre>
<!-- /wp:code -->

<!-- wp:list {"ordered":true} -->
<ol><li>We create a Publisher&lt;CLAuthorizationStatus, Never&gt; using a Just from the current authorizationStatus  from CLLocationManager.</li><li>Inside the merge we need use <code>compactMap</code> to both remove all optionals (i.e. the initial CurrentSubjectValue) as well as match the Publisher type the Just publisher which comes before.</li><li>Lastly, we use <code>eraseToAnyPublisher</code> to remove the specific generic arguments and simplify the return type.</li></ol>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":1002} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/06/Combine-ing-the-Old-with-the-New.gif" alt="" class="wp-image-1002"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Here’s our resulting class:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CLLocationManagerPublicist: NSObject, CLLocationManagerCombineDelegate {
  let authorizationSubject = CurrentValueSubject&lt;CLAuthorizationStatus?, Never>(nil)

  let locationSubject = CurrentValueSubject&lt;&#91;CLLocation], Never>(&#91;CLLocation]())

  func authorizationPublisher() -> AnyPublisher&lt;CLAuthorizationStatus, Never> {
    return Just(CLLocationManager.authorizationStatus())
      .merge(with:
        authorizationSubject.compactMap { $0 }
    ).eraseToAnyPublisher()
  }

  func locationPublisher() -> AnyPublisher&lt;&#91;CLLocation], Never> {
    return locationSubject.eraseToAnyPublisher()
  }


  func locationManager(_: CLLocationManager, didUpdateLocations locations: &#91;CLLocation]) {
    locationSubject.send(locations)
  }

  func locationManager(_: CLLocationManager, didFailWithError _: Error) {
    // Implement to avoid crashes
    // Extra Credit: Create a publisher for errors 😃
  }

  func locationManager(_: CLLocationManager, didChangeAuthorization status: CLAuthorizationStatus) {
    authorizationSubject.send(status)
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now that our publicist is implemented, let’s use this in our ObservableObject.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CoreLocationObject: ObservableObject {

  @Published var authorizationStatus = CLAuthorizationStatus.notDetermined
  @Published var location: CLLocation?
  
  let manager: CLLocationManager
  let publicist: CLLocationManagerCombineDelegate

  var cancellables = &#91;AnyCancellable]()
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Here we are storing a reference to the <code>CLLocationManager</code> as well as the <code>CLLocationManagerCombineDelegate</code>. Since this will be the end point for our publishers, we need to store the <code>AnyCancellable</code> objects here.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Now that we have our properties setup, let’s create setup the <code>CLLocationManager</code> and its delegate. </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CoreLocationObject: ObservableObject {
  ...
  init() {
    let manager = CLLocationManager()
    let publicist = CLLocationManagerPublicist()

    manager.delegate = publicist

    self.manager = manager
    self.publicist = publicist
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>With the <code>publicist</code> is listening to the <code>CLLocationManager</code>,  let’s create out initial publishers:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CoreLocationObject: ObservableObject {
  ...
  init() {
	...
    let authorizationPublisher = 
	  publicist.authorizationPublisher()
    
	let locationPublisher = 
	  publicist.locationPublisher()
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Firstly, we’ll need to make sure we begin getting location updates when a the <code>authorizationStatus</code> is updated:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CoreLocationObject: ObservableObject {
  ...
  init() {
	...
    let locationPublisher = publicist.locationPublisher()

    // trigger an update when authorization changes
    authorizationPublisher
      .sink(receiveValue: beginUpdates)
      .store(in: &amp;cancellables)
	...
  }

  func beginUpdates(_ authorizationStatus: CLAuthorizationStatus) {
    if authorizationStatus == .authorizedAlways || authorizationStatus == .authorizedWhenInUse {
      manager.startUpdatingLocation()
    }
  }
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>There are two possible endpoints for a publisher: <code>assign</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>and <code>sink</code>. Since are not assigning any value from the publisher, we are <code>sink</code> to call <code>beginUpdates</code>. Inside <code>beginUpdates</code>, we check the authorizationStatus if it will allow location updates. If it is a valid status, we tell the <code>CLLocationManager</code> to begin location updates.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Having setup <code>CLLocationManager</code>  to begin updates, let’s track our values. Firstly, let’s store the <code>authorizationStatus</code> for our SwiftUI View:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CoreLocationObject: ObservableObject {
  ...
  init() {
	...    
    // set authorization status when authorization changes
    authorizationPublisher
      // since this is for the UI
	  // it needs to be on the main DispatchQueue
      .receive(on: DispatchQueue.main)
      // store the value in the authorizationStatus property
      .assign(to: \.authorizationStatus, on: self)
      // store the cancellable so it be stopped on deinit
      .store(in: &amp;cancellables)
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Let’s break this down:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Just as with UIKit, all UI changes in SwiftUI must be on the main DispatchQueue. Hence we use <code>receive</code> to specify this.</li><li>Using the KeyValue path to the <code>authorizedStatus</code> property, we set the result from the Publisher to the property.</li><li>Store the Cancellable, so that the subscription to changes is cancelled on deinitialization.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Next, let’s record our location as it changes:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>    locationPublisher
      // convert the array of CLLocation 
      //  into a Publisher itself
      .flatMap(Publishers.Sequence.init(sequence:))
      // in order to match the property map to Optional
      .map{ $0 as CLLocation? }
      // since this is used in the UI,
      //  it needs to be on the main DispatchQueue
      .receive(on: DispatchQueue.main)
      // store the value in the location property
      .assign(to: \.location, on: self)
      // store the cancellable so it be stopped on deinit
      .store(in: &amp;cancellables)
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Similarly, we need to run on <code>DispatchQueue.main</code>, assign the value to <code>location</code>, and store the cancellable. However since the result of the publisher is <code>[CLLocation]</code> and the property type is <code>CLLocation?</code>, we need to make some transformations. Firstly, we are using <code>.flatMap</code> to flatten the Array.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>flatMap</code> is a very useful transformation in Combine. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In this case, we are creating a <code>Sequence</code> Publisher, which produces a </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The purpose of the CoreLocationObject is to bridge the gap using Combine between the older world of Objective-C delegates and SwiftUI components. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>so Next, we’ll need to display the location, however there are instances where CoreLocation can fail, and we may want the user to know. Therefore, we are going </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>struct LocationView: View {
  @EnvironmentObject var locationObject: CoreLocationObject
  var body: some View {
    VStack {
      Text("\(locationObject.authorizationStatus.description)").onTapGesture {
        self.locationObject.authorize()
      }.onReceive(self.locationObject.$authorizationStatus) { _ in
        self.locationObject.beginUpdates()
      }
      self.locationObject.location.map {
        Text($0.text)
      }
    }
  }
}
</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1004</wp:post_id>
		<wp:post_date><![CDATA[2020-06-30 14:26:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-30 14:26:49]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-30 18:26:49]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[combine-ing-the-old-with-the-new]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[EmpowerApps.Show &#8211; Apple 2019]]></title>
		<link>https://learningswift.brightdigit.com/apple-2019-empowerapps-show/</link>
		<pubDate>Thu, 07 Feb 2019 16:24:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=412</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p><a href="https://share.transistor.fm/s/3ee56c45">In this episode</a>, Leo talks about the current state of Apple in 2019 and how it affects businesses and developers: </p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Slow Down in Smartphone Sales</li><li>The Future For Macs and Business</li><li>Apple and China</li><li>Apple's Move to Services on Other Platforms</li><li>Apple's Relationship to the Cloud and Developers</li></ul>
<!-- /wp:list -->

<!-- wp:html -->
<iframe src="https://share.transistor.fm/e/3ee56c45" width="100%" height="180" frameborder="0" scrolling="no" seamless="true" style="width:100%; height:180px;"></iframe>
<!-- /wp:html -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>412</wp:post_id>
		<wp:post_date><![CDATA[2019-02-07 11:24:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-07 16:24:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-11 11:36:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-11 15:36:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[apple-2019-empowerapps-show]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="empowerapps-show-podcast"><![CDATA[EmpowerApps.Show Podcast]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_heateor_sc_meta]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[apple 2019]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[59]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[In this episode, Leo talks about the current state of Apple in 2019 and how it affects businesses, developers, services, and the cloud.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[493]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1559192426;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:132;}i:1;a:1:{s:2:"id";i:158;}i:2;a:1:{s:2:"id";i:544;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-412]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Codable  - 4 Ways to Improve How You Decode JSON]]></title>
		<link>https://learningswift.brightdigit.com/codable-4-ways-improve-decode-json/</link>
		<pubDate>Thu, 21 Feb 2019 08:17:51 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=436</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Codable, introduced in Swift 4, provides a convenient and easy way to encode and decode JSON. <strong>However, not everything works out of the box. </strong></p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:paragraph -->
<p>For instance, let's look at this <a href="https://github.com/brightdigit/advanced-swift-codable/blob/master/advanced-swift-codable.playground/Resources/twitter.json">JSON file&nbsp;from&nbsp;Twitter</a>. As a result of the way the JSON decoder works, we see:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>Quoted and Standard Tweets use similar but not exactly the same fields.</strong></li><li><strong>Keys which get translated to property names don't follow Swift conventions.</strong></li><li><strong>Dates are not in the standard accepted format.</strong></li><li><strong>Colors are not in a format accepted by any Color class </strong>(UIColor, NSColor, etc...)</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>As a result of this, we are going to learn how to setup your Codable types for some of those special cases. Specifically, we are going to look at:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a href="#protocols-with-codable"><strong>Using Protocols with Codable types</strong></a></li><li><a href="#custom-property-names"><strong>Different Property Names and Keys</strong></a></li><li><a href="#custom-property-values"><strong>Dates in Property Values</strong></a></li><li><a href="#custom-decoding"><strong>Property Values for Custom Types</strong></a></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>To follow along you can look at <a href="https://github.com/brightdigit/advanced-swift-codable">the Xcode playground for this article here at GitHub.</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>How JSONDecoder works</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>These are basic rules for how the JSONDecoder converts JSON into a structured type:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Property names are converted as is. </li><li>Simple property values by default are converted to <code>String</code>, <code>Int</code>, or <code>Double</code></li><li>Property values which follow the correct format may be decoded into <code>URL</code>, <code>Data</code>, or <code>Date</code>.</li><li>Any property value may be assumed to be <code>Optional</code></li><li>Square bracket <code>[]</code> values are converted to <code>Array</code></li><li>Curly brackets <code>{}</code> values are convert to <code>Dictionary</code> or a custom type.</li><li>All types which need to be decoded need to implement the Decodable protocol. Likewise, types which need to be encoded need to implement the Encodable protocol. If the type needs to be both decoded and encoded can simply implement Codable. </li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>In this case, we’ll be looking at the <a rel="noreferrer noopener" aria-label="Twitter JSON data (opens in a new tab)" href="https://github.com/brightdigit/advanced-swift-codable/blob/master/advanced-swift-codable.playground/Resources/twitter.json" target="_blank">Twitter JSON data</a> returned for a tweet. Therefore, <strong>the first thing we are going to do is simply create some basic structures for each type of data returned</strong>. As a result, you can look at <a href="https://github.com/brightdigit/advanced-swift-codable/tree/step-1">the first step of working decoding here on this branch of the repo</a>. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Even if the data is similar, we create separate structs in order to allow more flexibility. However, that does not mean we can’t use protocols in order simplify the consumption of those types in functions.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":458,"align":"center","width":512,"height":340} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/401od83ke6o-1024x680.jpg" alt="" class="wp-image-458" width="512" height="340"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2 id="protocols-with-codable">Using Protocols with Codable</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For instance, in the Twitter API, the notion of a tweet is used throughout. As an example, their JSON has a main tweet as well as <em>quoted tweets</em>. Therefore, one might be inclined to use the same structure for both. However, a better approach is two separate structures:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>public struct Tweet : Codable {
  public let created_at : Date
  public let id : Int
  public let full_text : String
  public let display_text_range : [Int]
  public let entities : TweetEntities
  public let source : String
  public let in_reply_to_status_id : Int?
  public let in_reply_to_user_id : Int?
  public let in_reply_to_screen_name : String
  public let user : TweetUser
  public let quoted_status : QuotedTweet?
  public let is_quote_status : Bool
  public let retweet_count : Int
  public let favorite_count : Int
  public let favorited : Bool
  public let retweeted : Bool
  public let possibly_sensitive : Bool
  public let possibly_sensitive_appealable : Bool
  public let lang : String
}

public struct QuotedTweet : Codable {
  public let created_at : Date
  public let id : Int
  public let full_text : String
  public let display_text_range : [Int]
  public let entities : TweetEntities
  public let user : TweetUser
  public let source : String
  public let extended_entities : TweetEntities
  public let is_quote_status : Bool
  public let retweet_count : Int
  public let favorite_count : Int
  public let favorited : Bool
  public let retweeted : Bool
  public let possibly_sensitive : Bool
  public let possibly_sensitive_appealable : Bool
  public let lang : String
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p><strong>Therefore, this means duplicated fields. However, it also allows for better flexibility and easier JSON decoding</strong>. On the other hand, we can simplify these types when used as parameters in functions. For instance, let’s say we need to print the tweet out:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>func printTweet (_ tweet: Tweet) {
  print(tweet.full_text)
  if let quoted_status = tweet.quoted_status {
    printTweet(quoted_status)
  }
}

func printTweet (_ tweet: QuotedTweet) {
  print(">",tweet.full_text)
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>However, using some basic <em>Protocol-Oriented Programming</em>, we can in fact be optimize this. Firstly, we stub a function which prints out the tweet based on a protocol regardless of whether it is a <em>quoted tweet </em>or not.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>func printTweet(_ tweet: TweetProtocol, withQuoteLevel level: Int = 0) {
  print(String(repeating: ">", count: level),tweet.full_text)
  if let quotedTweet = tweet.quotedTweet {
    printTweet(quotedTweet, withQuoteLevel: level+1)
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Consequently, we create the protocol which has the properties we need for the function above.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>public protocol TweetProtocol {
  var full_text : String { get }
  var quotedTweet : TweetProtocol? { get }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Lastly, we implement the protocol for the two types we’ll use it for - <code>Tweet</code> and <code>QuotedTweet</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>extension Tweet : TweetProtocol {
  public var quotedTweet: TweetProtocol? {
    return self.quoted_status
  }
}

extension QuotedTweet : TweetProtocol {
  public var quotedTweet: TweetProtocol? {
    return nil
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now <strong>we have better flexibility to work with Codable while at the same time adding similar functionality using <em>Protocols</em>.</strong> Next, let's cleanup the property names.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":400,"height":267} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/hrtdxy5urbu.jpg" alt="" width="400" height="267"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2 id="custom-property-names">Custom Property Names</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>One thing you notice about Twitter’s JSON is that <strong>they use what’s called </strong><a href="https://en.wikipedia.org/wiki/Snake_case"><strong>snake-case</strong></a><strong> for combining words in property names. As a result, underscores </strong><code><strong>_</strong></code><strong> are used for combining words in JSON keys.</strong> For instance, the property for the full text of a tweet is called <code>full_text</code>. However, <strong>the </strong><a href="https://swift.org/documentation/api-design-guidelines/#general-conventions"><strong>Swift API design guidelines</strong></a><strong> recommend using </strong><a href="https://en.wikipedia.org/wiki/Camel_case"><strong>camel case.</strong></a><strong> Camel case capitalizes each new word. </strong>Consequently, our property name would be in this case would be <code>fullText</code>. Therefore, we have two ways of fixing this: <strong>custom CodingKeys or using a KeyEncodingStrategy.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Custom CodingKeys allows us the most flexibility by allowing us to provide a map from JSON keys to property names. However, in this case <strong>there is a consistent strategy for mapping all keys to property names.</strong> Therefore, in this case, we'll use  <code><a href="https://developer.apple.com/documentation/foundation/jsondecoder/keydecodingstrategy" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">KeyDecodingStrategy</a></code> specifically <a href="https://developer.apple.com/documentation/foundation/jsondecoder/keydecodingstrategy/convertfromsnakecase"><code>KeyDecodingStrategy.convertFromSnakeCase</code></a>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let decoder = JSONDecoder()
decoder.keyDecodingStrategy = .convertFromSnakeCase</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In addition, if <a href="https://developer.apple.com/documentation/foundation/jsondecoder/keydecodingstrategy/convertfromsnakecase"><code>KeyDecodingStrategy.convertFromSnakeCase</code></a> doesn’t quite fit with your JSON keys, Swift does allow the use of <a href="https://developer.apple.com/documentation/foundation/jsondecoder/keydecodingstrategy/custom">custom strategies.</a> In other words, you can supply a closure for converting a CodingKey array to single CodingKey result.<br>Last but not least, if none of this strategies work for converting a key to a property name you can always supply a custom CodingKeys enumeration. <strong>In short, you want to use the simplest and most consistent strategy for mapping property names or JSON keys.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":400,"height":281} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/zmmxsrmsoi8.jpg" alt="" width="400" height="281"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2 id="custom-property-values">Custom Property Values</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Another quirk with Twitter’s JSON data is how they format some of the property values. Let’s take a look at the easiest to deal with which is dates. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>How to deal with Date</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>By default, dates are serialized as a floating decimal specifically <a href="https://developer.apple.com/documentation/foundation/timeinterval">TimeInterval</a> (number of seconds) since the <em>reference date </em>of <a href="https://developer.apple.com/documentation/foundation/nsdate/1417376-timeintervalsincereferencedate">January 1st, 2001</a>. However, if the format from the JSON property value is different, you can use <a href="https://developer.apple.com/documentation/foundation/jsondecoder/datedecodingstrategy">one of the strategies available</a>:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>iso8601</strong> - <a rel="noreferrer noopener" aria-label="a standard format (opens in a new tab)" href="https://www.iso.org/iso-8601-date-and-time-format.html" target="_blank">a standard format</a> used throughout the web</li><li><strong>secondsSince1970</strong> - <a rel="noreferrer noopener" aria-label="unix time (opens in a new tab)" href="https://en.wikipedia.org/wiki/Unix_time" target="_blank">unix time</a> in seconds</li><li><strong>millisecondsSince1970</strong> - <a rel="noreferrer noopener" aria-label="unix time (opens in a new tab)" href="https://en.wikipedia.org/wiki/Unix_time" target="_blank">unix time</a> in milliseconds</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Consequently, <strong>if the date format does not follow any of these you need to provide either a closure to convert it or a </strong><a href="https://developer.apple.com/documentation/foundation/dateformatter"><strong>DateFormatter</strong></a><strong>.</strong> The main way to specify the format in <a href="https://developer.apple.com/documentation/foundation/dateformatter">DateFormatter</a> is with the <a href="https://developer.apple.com/documentation/foundation/dateformatter/1413514-dateformat">dateFormat String property</a>. In other words, by using the <a href="http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns">Unicode provided codes</a>, we can create a <em>dateFormat</em> string to represent the format of dates and times provided by Twitter. As a result, from the date <code>Mon Mar 28 14:39:13 +0000 2016</code> in our JSON, we can infer the format to be: <code>eee MMM dd HH:mm:ss ZZZZ yyyy</code>. Therefore, we can create a <a href="https://developer.apple.com/documentation/foundation/dateformatter">DateFormatter</a> and set the strategy accordingly:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let dateFormat = "eee MMM dd HH:mm:ss ZZZZ yyyy"

let dateFormatter = DateFormatter ()
dateFormatter.dateFormat = dateFormat

let decoder = JSONDecoder()
decoder.dateDecodingStrategy = .formatted(dateFormatter)
decoder.keyDecodingStrategy = .convertFromSnakeCase
return decoder</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In conclusion, by customizing the DateFormatter, dates can be decoded as Date property values. However, colors will be slightly more challenging.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":400,"height":300} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/f6xv0xs9jwg.jpg" alt="" width="400" height="300"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3 id="custom-decoding">Custom Decoding of Property Values</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For colors such as the profile background color, we need to create a separate struct and implement the encoding and decoding ourselves to convert the hexidecimal string to a usable color structure:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>import Foundation
import CoreGraphics

public struct Color : Codable {
  public let red : CGFloat
  public let green : CGFloat
  public let blue : CGFloat
  public let alpha : CGFloat

  public init(from decoder: Decoder) throws {
    let hexCode = try decoder.singleValueContainer().decode(String.self)
    let scanner = Scanner(string: hexCode)
    var hexint : UInt32 = 0
    scanner.scanHexInt32(&amp;hexint)

    self.red = CGFloat((hexint &amp; 0xff0000) >> 16) / 255.0
    self.green = CGFloat((hexint &amp; 0xff00) >> 8) / 255.0
    self.blue = CGFloat((hexint &amp; 0xff) >> 0) / 255.0
    self.alpha = 1
  }

  public func encode(to encoder: Encoder) throws {
    let string = String(format: "%02lX%02lX%02lX", lroundf(Float(red * 255.0)), lroundf(Float(green * 255.0)), lroundf(Float(blue * 255.0)))
    var container = encoder.singleValueContainer()
    try container.encode(string)
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this case, we override the init method and grab the string from the <code>singleValueContainer</code>. After that, we use a <a rel="noreferrer noopener" aria-label="Scanner (opens in a new tab)" href="https://developer.apple.com/documentation/foundation/scanner" target="_blank">Scanner</a> to convert the color hexcode into a hexidecimal number. Then use a combination of bitwise and logical operations to grab each component value in between 0 and 255. Lastly, we use decimal division to calculate the value in between 0 and 1. (I have also included the encode method for completion sake.) As a result, we can easily convert a hexcode String to a Color struct. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Since we can't use the existing system color types, here is the code to convert from our custom Color struct to whatever the system's default UI color type is:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#if os(iOS) || os(watchOS) || os(tvOS)
import UIKit
public typealias SystemColor = UIColor
#elseif os(macOS)
public typealias SystemColor = NSColor
#endif

extension Color {  
  public var systemColor : SystemColor {
    return SystemColor(red: self.red, green: self.green, blue: self.blue, alpha: self.alpha)
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:image {"align":"center","width":400,"height":267} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/02/xde_p0expc8.jpg" alt="" width="400" height="267"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Make Codable Work For Us</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p> Codable offers many layers of customability. However, in more case we want to use the least amount of customization with the most amount of consistency.</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>For data used in similar ways <strong>use separate types but implement the same protocol</strong></li><li>If property names with a consistent strategy, <strong>use a KeyEncodingStrategy rather than custom CodingKeys</strong></li><li>For dates <strong>use dateDecodingStrategy, DateFormatter, or a closure</strong>.</li><li>For other custom types, <strong>create a separate type and customize the decoding </strong>(and encoding) there.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>If you have other issues you'd like me to look into, <a rel="noreferrer noopener" href="http://twitter.com/leogdion" target="_blank">reach me at twitter</a>. In addition, if you are interested in learning more about complex JSON decoding or encoding and other Swift topic, subscribe to my newsletter to stay up to date.</p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<!-- Begin Mailchimp Signup Form -->
<link href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css" rel="stylesheet" type="text/css">
<style type="text/css">
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own Mailchimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
</style>
<div id="mc_embed_signup">
<form action="https://brightdigit.us12.list-manage.com/subscribe/post?u=cb3bba007ed171091f55c47f0&amp;id=2eed4772ab" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate="">
    <div id="mc_embed_signup_scroll">
<div class="indicates-required"><span class="asterisk">*</span> indicates required</div>
<div class="mc-field-group">
	<label for="mce-EMAIL">Email Address  <span class="asterisk">*</span>
</label>
	<input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL">
</div>
<div class="mc-field-group">
	<label for="mce-FNAME">First Name </label>
	<input type="text" value="" name="FNAME" class="" id="mce-FNAME">
</div>
<div class="mc-field-group">
	<label for="mce-LNAME">Last Name </label>
	<input type="text" value="" name="LNAME" class="" id="mce-LNAME">
</div>
	<div id="mce-responses" class="clear">
		<div class="response" id="mce-error-response" style="display:none"></div>
		<div class="response" id="mce-success-response" style="display:none"></div>
	</div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
    <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_cb3bba007ed171091f55c47f0_2eed4772ab" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
    </div>
</form>
</div>
<script type="text/javascript" src="//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js"></script><script type="text/javascript">(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';fnames[2]='LNAME';ftypes[2]='text';}(jQuery));var $mcj = jQuery.noConflict(true);</script>
<!--End mc_embed_signup-->
<!-- /wp:html -->]]></content:encoded>
		<excerpt:encoded><![CDATA[Codable, introduced in Swift 4, provides a convenient and easy way to encode and decode JSON. However, not everything works out of the box.]]></excerpt:encoded>
		<wp:post_id>436</wp:post_id>
		<wp:post_date><![CDATA[2019-02-21 03:17:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-21 08:17:51]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-27 13:03:14]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-27 17:03:14]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[codable-4-ways-improve-decode-json]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[codable]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[73]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Codable, introduced in Swift 4, provides a convenient and easy way to encode and decode JSON. However not everything works out of the box.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[457]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_mess]]></wp:meta_key>
		<wp:meta_value><![CDATA[4 Ways to Improve How You Decode JSON in Swift using Codable]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560354037;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:544;}i:1;a:1:{s:2:"id";i:211;}i:2;a:1:{s:2:"id";i:506;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-436]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[EmpowerApps.Show &#8211; Cloud and Backend Services For Apps]]></title>
		<link>https://learningswift.brightdigit.com/empowerapps-show-cloud-and-backend-services-for-apps/</link>
		<pubDate>Mon, 18 Feb 2019 13:31:07 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=477</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p><a href="https://share.transistor.fm/s/ffcb9fc1" target="_blank" rel="noreferrer noopener" aria-label="In this episode (opens in a new tab)">In this episode</a>, Leo talks different backend technologies to use when building an iOS app or any other Apple device: when you need a cloud service, running on your own server, cloudkit, firebase, and more...</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Does an app need a back-end or cloud service?</li><li>Enterprise vs MVP</li><li>Cloud Service vs. Custom Backend</li><li>Firebase vs CloudKit</li><li>Designing for the User</li><li>Abstracting Away Cloud Services</li></ul>
<!-- /wp:list -->

<!-- wp:html -->
<iframe src="https://share.transistor.fm/e/ffcb9fc1" width="100%" height="180" frameborder="0" scrolling="no" seamless="true" style="width:100%; height:180px;"></iframe>
<!-- /wp:html -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>477</wp:post_id>
		<wp:post_date><![CDATA[2019-02-18 08:31:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-02-18 13:31:07]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-24 10:11:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-24 15:11:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[empowerapps-show-cloud-and-backend-services-for-apps]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_heateor_sc_meta]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[apple 2019]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[49]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[In this episode, Leo talks about the current state of Apple in 2019 and how it affects businesses, developers, services, and the cloud.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[478]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560060315;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:506;}i:1;a:1:{s:2:"id";i:412;}i:2;a:1:{s:2:"id";i:57;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-477]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Vapor - Deep Dive Guide into Setup and Deployment for Heroku and Ubuntu]]></title>
		<link>https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/</link>
		<pubDate>Tue, 19 Mar 2019 11:51:47 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=506</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>It can be a real challenge <a rel="noreferrer noopener" aria-label="picking the right back end (opens in a new tab)" href="https://share.transistor.fm/s/ffcb9fc1?utm_source=learning-swift&amp;utm_medium=web" target="_blank">picking the right back end</a> for your mobile app. For instance, Swift developers don't have anything without needing to run on another language. Therefore, I decided to do <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://learningswift.brightdigit.com/vapor-swift-backend-review/?utm_medium=web&amp;utm_source=learning-swift" target="_blank">a review of Vapor</a> and whether it is really a right choice.</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:paragraph -->
<p><strong>What I found was that for Swift developers, </strong><a rel="noreferrer noopener" aria-label="Vapor (opens in a new tab)" href="https://vapor.codes" target="_blank"><strong>Vapor</strong></a><strong> is a really great choice and fairly easy to work with</strong>. In addition, Vapor has an effective community and a great API if your development team is dedicated to Swift. Therefore, rather than having your team hop from Xcode and Swift to VSCode or Firebase etc... </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In this article I am going to cover how to get started, specifically:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong><a href="#macos-dev">Setup your Mac for Vapor Development</a></strong></li><li>Convert your project to <strong><a href="#macos-postgresql">use PostgreSQL Database</a></strong></li><li>Modify your project for <strong><a href="#heroku-vapor">Heroku Deployment</a></strong></li><li>Prepare an <strong><a href="#ubuntu-vapor">Ubuntu Server for Vapor</a></strong></li><li>Modify your project for <strong><a href="#ubuntu-code">Ubuntu deployment</a></strong></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>As a result, you'll have fully working backend with Postgres ready and easily deployable.</p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<!-- Begin Mailchimp Signup Form -->
<link href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css" rel="stylesheet" type="text/css">
<style type="text/css">
  #mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
  /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block.
     We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
</style>
<style type="text/css">
  #mc-embedded-subscribe-form input[type=checkbox]{display: inline; width: auto;margin-right: 10px;}
  #mergeRow-gdpr {margin-top: 20px;}
  #mergeRow-gdpr fieldset label {font-weight: normal;}
  #mc-embedded-subscribe-form .mc_fieldset{border:none;min-height: 0px;padding-bottom:0px;}
</style>
<div id="mc_embed_signup">
<form action="https://brightdigit.us12.list-manage.com/subscribe/post?u=cb3bba007ed171091f55c47f0&amp;id=584d0d5c40" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
    <div id="mc_embed_signup_scroll">
  <h2>Want to Learn More?<br>Get the Full Guide and Video Mini-Course Today</h2>
<div class="indicates-required"><span class="asterisk">*</span> indicates required</div>
<div class="mc-field-group">
  <label for="mce-EMAIL">Email Address  <span class="asterisk">*</span>
</label>
  <input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL">
</div>
<div class="mc-field-group">
  <label for="mce-FNAME">First Name  <span class="asterisk">*</span>
</label>
  <input type="text" value="" name="FNAME" class="required" id="mce-FNAME">
</div>
<div class="mc-field-group">
  <label for="mce-LNAME">Last Name  <span class="asterisk">*</span>
</label>
  <input type="text" value="" name="LNAME" class="required" id="mce-LNAME">
</div>
<div class="mc-field-group input-group" style="display:none">
    <ul><li><input type="checkbox" value="1" name="group[19229][1]" id="mce-group[19229]-19229-0" checked readonly><label for="mce-group[19229]-19229-0">Swift</label></li>
<li><input type="checkbox" value="2" name="group[19229][2]" id="mce-group[19229]-19229-1"><label for="mce-group[19229]-19229-1">Productivity</label></li>
<li><input type="checkbox" value="8" name="group[19229][8]" id="mce-group[19229]-19229-2" checked readonly><label for="mce-group[19229]-19229-2">Vapor</label></li>
</ul>
</div>
<div class="mc-field-group input-group" style="display:none">
    <strong>Products </strong>
    <ul><li><input type="checkbox" value="4" name="group[19233][4]" id="mce-group[19233]-19233-0"><label for="mce-group[19233]-19233-0">Speculid</label></li>
</ul>
</div>
<div id="mergeRow-gdpr" class="mergeRow gdpr-mergeRow content__gdprBlock mc-field-group">
    <div class="content__gdpr">
        <label>Marketing Permissions</label>
        <p>Please select all the ways you would like to hear from BrightDigit:</p>
        <fieldset class="mc_fieldset gdprRequired mc-field-group" name="interestgroup_field">
    <label class="checkbox subfield" for="gdpr_34225"><input type="checkbox" id="gdpr_34225" name="gdpr[34225]" value="Y" class="av-checkbox "><span>Email</span> </label>
        </fieldset>
        <p>You can unsubscribe at any time by clicking the link in the footer of our emails. For information about our privacy practices, please visit our website.</p>
    </div>
    <div class="content__gdprLegal">
        <p>We use Mailchimp as our marketing platform. By clicking below to subscribe, you acknowledge that your information will be transferred to Mailchimp for processing. <a href="https://mailchimp.com/legal/" target="_blank" rel="noopener noreferrer">Learn more about Mailchimp's privacy practices here.</a></p>
    </div>
</div>
  <div id="mce-responses" class="clear">
    <div class="response" id="mce-error-response" style="display:none"></div>
    <div class="response" id="mce-success-response" style="display:none"></div>
  </div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
    <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_cb3bba007ed171091f55c47f0_584d0d5c40" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
    </div>
</form>
</div>
<script type='text/javascript' src='//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js'></script><script type='text/javascript'>(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';fnames[2]='LNAME';ftypes[2]='text';fnames[3]='MMERGE3';ftypes[3]='text';fnames[4]='MMERGE4';ftypes[4]='number';fnames[6]='MMERGE6';ftypes[6]='number';fnames[7]='MMERGE7';ftypes[7]='text';}(jQuery));var $mcj = jQuery.noConflict(true);</script>
<!--End mc_embed_signup-->
<!-- /wp:html -->

<!-- wp:heading -->
<h2 id="macos-dev">Setting Up Your Mac For Vapor Development</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In order to start developing a Vapor application, we’ll need to setup our Mac. According to the Vapor docs,<strong> you need Xcode 9.3 or greater</strong>. However for this tutorial, I used the latest version of macOS and Xcode at the time of writing: </p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>macOS <strong>Mojave 10.14.3</strong> </li><li>Xcode <strong>10.1</strong> </li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>Prerequisites For Vapor</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>I also have installed <strong><a href="https://brew.sh/">Homebrew</a></strong>. To install Homebrew, open your terminal application and type:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"`</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>For more details you can go to <strong><a href="https://brew.sh/">the official Homebrew home page</a></strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Installing Vapor</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Once you have Homebrew installed we can go ahead and install <strong>Vapor</strong> on your Mac. Before we proceed, we’ll need to add the Vapor repository to Homebrew.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {"url":"https://m.youtube.com/watch?v=yYCxa6ev1Ng","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://m.youtube.com/watch?v=yYCxa6ev1Ng
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:list {"ordered":true} -->
<ol><li>Firstly, <strong>add the Vapor repository</strong> using the <code>tap</code> command:</li></ol>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>brew tap vapor/tap</code></pre>
<!-- /wp:code -->

<!-- wp:html -->
<ol start="2"><li>Next, <strong>install the Vapor toolkit</strong>:</li></ol>
<!-- /wp:html -->

<!-- wp:code -->
<pre class="wp-block-code"><code>brew install vapor/tap/vapor</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As a result of installing the Vapor toolkit, <strong>we’ll have access to the Vapor CLI tool</strong>. Therefore, you can get access to the list of commands available by typing:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>vapor --help</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>For example, <strong>with the Vapor CLI tool</strong>, you can:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>Build </strong>the application</li><li><strong>Run</strong> the application</li><li>setup for <strong>Heroku</strong> deployment later</li><li>Create the <strong>Xcode</strong> project and of course...</li><li>Create the <strong>new</strong> Swift package</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>Creating Your First Vapor Project</h3>
<!-- /wp:heading -->

<!-- wp:core-embed/youtube {"url":"https://m.youtube.com/watch?v=iZqHmFnisXQ","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://m.youtube.com/watch?v=iZqHmFnisXQ
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>Therefore, <strong>we can create the Switch package which will contain the dependencies needed to run our server application</strong> with the command:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>vapor new app-collection</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Additionally, <strong>we can create an Xcode project</strong> from our Vapor application Swift package by typing: </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>vapor xcode</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As a result, we can open the newly created Xcode project. </p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":514} -->
<figure class="wp-block-image"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/macos_xcode_switch_target.jpg" alt="Switching the target to Run in Xcode" class="wp-image-514"/><figcaption>Switching the target to <em>Run</em></figcaption></figure>
<!-- /wp:image -->

<!-- wp:image {"id":515} -->
<figure class="wp-block-image"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/macos_xcode_run.jpg" alt="Run the Vapor app from Xcode" class="wp-image-515"/><figcaption>Building and running the <em>Run</em> target</figcaption></figure>
<!-- /wp:image -->

<!-- wp:core-embed/youtube {"url":"https://www.youtube.com/watch?v=kZKP2MiFaLQ","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=kZKP2MiFaLQ
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>After that, switch the target in the top left to <em>Run</em> and press the <em>play button</em> to run the application. Consequently, you should see a log message at the bottom stating that a http server is started at port 8080. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>As a result, go to the terminal and run the command:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>curl http://localhost:8080/hello</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Therefore, you should receive the message:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>Hello, world!%</code></pre>
<!-- /wp:code -->

<!-- wp:core-embed/youtube {"url":"https://m.youtube.com/watch?v=bRXTT8K-lP8","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://m.youtube.com/watch?v=bRXTT8K-lP8
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>In conclusion, we’ve successfully used the provided Vapor templates with the <em>new</em> and <em>xcode</em> commands to create the Swift package and build the application in Xcode. However the application only used SQLite for our database storage. Instead, let’s switch to using a more common database: PostgreSQL.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="macos-postgresql">Setting Up For PostgreSQL</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>PostgreSQL has been my favorite relational SQL based database server. As a result, we are going to look at converting the current Vapor project to use PostgreSQL rather than the default SQLite.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Therefore, make sure you already have PostgreSQL installed. Consequently, if you don’t you can use Homebrew to install PostgreSQL with the following command:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>brew install postgresql</code></pre>
<!-- /wp:code -->

<!-- wp:core-embed/youtube {"url":"https://www.youtube.com/watch?v=KeLHTQrZXNI","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=KeLHTQrZXNI
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>Further, to run the server from the Terminal:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>pg_ctl -D /usr/local/var/postgres start</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Similarly, you can stop the server from the Terminal with:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>pg_ctl -D /usr/local/var/postgres stop</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>On the other hand, if you wish to run PostgreSQL as background service with launchd you can use the <a href="https://github.com/Homebrew/homebrew-services"><code>brew services</code></a> command:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>brew services start postgresql</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Most importantly, once PostgreSQL is started, we’ll need to add the database and user for our application to use.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Setup Database and User</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>As a result of switching the PostgreSQL, we’ll need to add the user and database our Vapor application will use. Therefore, let’s run the PostgreSQL terminal-based front-end <a href="https://www.postgresql.org/docs/11/index.html"><code>psql</code></a> by going to the Terminal and typing:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>psql -d postgres</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>After that, at the <code>psql</code> prompt, create the database with:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>create database app_collection;</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Likewise, we need to create a user. To clarify, we are creating a user with no password by typing:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>create user app_collection;</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Subsequently grant that user the privileges it needs with:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>grant all privileges on database app_collection to app_collection;</code></pre>
<!-- /wp:code -->

<!-- wp:core-embed/youtube {"url":"https://www.youtube.com/watch?v=gmKSy71PxWM","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=gmKSy71PxWM
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>As a result, our database should be ready for access. However, we’ll need to update the code and specifically the Swift package to use PostgreSQL.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Updating the Code For PostgreSQL</h3>
<!-- /wp:heading -->

<!-- wp:heading {"level":4} -->
<h4>Update Package.swift with PostgreSQL</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In order to use PostgreSQL in our backend application, we’ll need to update the Package.swift file to use PostgreSQL as opposed to SQLite. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Therefore, open the Package.swift and update <code>dependencies</code> by changing the line from:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>.package(url: "https://github.com/vapor/fluent-sqlite.git", from: "3.0.0")</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>to the line:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>.package(url: "https://github.com/vapor/fluent-postgresql.git", from: "1.0.0")</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>To clarify, we’ll be using <a href="https://docs.vapor.codes/3.0/fluent/getting-started/">Fluent</a>, Vapor’s ORM Framework, along with PostgreSQL. In other words, we are swapping the Fluent driver for SQLite with the one for PostgreSQL. Likewise, if you can read more details on the different drivers and how their setup works in Fluent’s documentation.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Consequently, we need to also update the <em>App targets</em> to use the new <em>FluentPostgreSQL</em> dependency. Therefore change the line:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code> .target(name: "App", dependencies: ["FluentSQLite", "Vapor"]),</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>to the line:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code> .target(name: "App", dependencies: ["FluentPostgreSQL", "Vapor"]),</code></pre>
<!-- /wp:code -->

<!-- wp:core-embed/youtube {"url":"https://www.youtube.com/watch?v=j3Z1HxSMVWU","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=j3Z1HxSMVWU
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>In addition to updating the <em>Package.swift</em> file, we need to actually update our Xcode project to use the new dependencies.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Update Packages</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Therefore, in order to fetch and update the package with the new dependencies and update the Xcode project file, we can run the <em>xcode</em> command again with:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>vapor xcode</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As a result, vapor has fetched the Fluent PostgreSQL driver  and updated the Xcode project. Therefore, we can move forward by updating the code.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Update the Code</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Consequently, open the update Xcode project. Since we have removed the Fluent SQLite driver, we should no longer be able to build the project. As a result we need update our models to use PostgreSQL as well as the Provider, Database, and Migration used in our configuration. Therefore, open the <em>configure.swift</em>. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Firstly, let’s update the import at the top of the file from:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>import FluentSQLite</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>to:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>import FluentPostgreSQL</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Secondly, update the provider by updating the line:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>try services.register(FluentSQLiteProvider())</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>to</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>try services.register(FluentPostgreSQLProvider())</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Further, update the database used by changing the line from:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// Configure a SQLite database
let sqlite = try SQLiteDatabase(storage: .memory)

// Register the configured SQLite database to the database config.
var databases = DatabasesConfig()
databases.add(database: sqlite, as: .sqlite)
services.register(databases)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>to:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// Configure a PostgreSQL database
let postgreSQLConfig = PostgreSQLDatabaseConfig(hostname: "localhost", username: "app_collection")
let postgreSQL = PostgreSQLDatabase(config: postgreSQLConfig)

// Register the configured PostreSQL database to the database config.
var databases = DatabasesConfig()
databases.add(database: postgreSQL, as: .psql)
services.register(databases)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In other words, we are replacing the memory based SQLite database with the PostgreSQL local database configured with the user name <em>app_collection</em>. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To clarify, the <a href="https://api.vapor.codes/postgresql/latest/PostgreSQL/Structs/PostgreSQLDatabaseConfig.html#/s:10PostgreSQL0A17SQLDatabaseConfigVACSS8hostname_Si4portSS8usernameSSSg8databaseAG8passwordAA0A13SQLConnectionC09TransportD0V9transporttcfc"><code>PostgreSQLDatabaseConfig</code>  initializer</a> can multiple parameters in this case we are using the default port number and the default database name which matches with user name, in this case <em>app_collection</em>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Lastly, in the <em>configuration.swift</em>, update the migration for the <code>Todo</code> model. To clarify, <a href="https://docs.vapor.codes/3.0/fluent/migrations/">migrations</a> are used to create and update the tables and relationships used by Fluent. Therefore, in this case we just need to change the parameter in this line:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>migrations.add(model: Todo.self, database: .sqlite)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>to this line:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>migrations.add(model: Todo.self, database: .psql)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In the same vein, we need to change the subclasses used by our model by opening <em>Todo.swift</em>. After that change the import statement at the top again and then update model subclass from:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>final class Todo: SQLiteModel {</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>to</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>final class Todo: PostgreSQLModel {</code></pre>
<!-- /wp:code -->

<!-- wp:core-embed/youtube {"url":"https://www.youtube.com/watch?v=EL98HVIzV9M","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=EL98HVIzV9M
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>As a result, we can go ahead and run the Vapor application.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Run the Code</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To sum up, now that have setup the PostgreSQL database on our machine, update the Swift package dependencies, and updated the code accordingly; we can build and run the Vapor application. Therefore, in Xcode, run the <em>Run</em> target again. After that, let’s go to the Terminal app to test the application. For example we can run again:  </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>curl http://localhost:8080/hello</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>However, we can also add a <code>Todo</code> item by running:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>curl -X POST -H "Content-Type: application/json" -d '{"title": "example"}' http://localhost:8080/todos</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Consequently, we can verify the <code>Todo</code> item was added by calling:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>curl http://localhost:8080/todos</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As a result, we get the JSON response:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>[{"id":1,"title":"example"}]</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Subsequently, let’s deploy this to the cloud. Firstly, we’ll look into Heroku.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="heroku-vapor">Deploying Vapor to Heroku</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In addition to setting up our application for PostgreSQL, we will move forward with deploying it Heroku. Above all, Heroku offers the easiest way to get up and running. In addition, it offers enough plugins and services on its free tier that we can simply get started. Therefore, let’s begin by setting up our project for Heroku.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Preparing Vapor Package For Heroku</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Importantly, make sure you have an account setup at Heroku. After that, go to the Terminal again, and in the project directory, we can simply run the command:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>vapor heroku init</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As a result, of running the command, we have created a Heroku application and added :</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Created a Heroku application in your account then </li><li>Vapor buildpack for Heroku deployment</li><li>git remote for Heroku</li><li>Procfile needed for Heroku to run the application</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>The Procfile, which you read about in <a href="https://devcenter.heroku.com/articles/procfile" target="_blank" rel="noreferrer noopener" aria-label="the Procfile documentation (opens in a new tab)">the Procfile documentation</a>, contains the following line:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>web: Run serve --env production --port $PORT --hostname 0.0.0.0</code></pre>
<!-- /wp:code -->

<!-- wp:core-embed/youtube {"url":"https://m.youtube.com/watch?v=8piDsDi6PNo","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://m.youtube.com/watch?v=8piDsDi6PNo
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>Moreover when you run the command, you do not need the supply any customizations. However we will need to add PostgreSQL to our Heroku application.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Adding PostgreSQL To Heroku Instance</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Similarly, as we have setup the Vapor application in Heroku via the Terminal, we need to add PostgreSQL to our application. Therefore, we can add the Heroku repo and install the <em>heroku</em> command with Homebrew by running:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>brew tap heroku/brew &amp;&amp; brew install heroku</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Consequently, we can add PostgreSQL by running the command:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>heroku addons:create heroku-postgresql:hobby-dev</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As a result of running this command, we’ve added a <a href="https://www.heroku.com/postgres#heroku-postgres-hobby">free  <em>hobby</em> level instance of PostgreSQL</a> to our application. </p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {"url":"https://m.youtube.com/watch?v=rprznYi-kKQ","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://m.youtube.com/watch?v=rprznYi-kKQ
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>Consequently, Heroku will add an environment variable for the database called <code>DATABASE_URL</code>. Therefore, we’ll need to update our code to use this.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Update Code For Heroku PostgreSQL </h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Since we have added PostgreSQL to our Heroku instance, we need to update our code to use the environment the variable for the new database url, <code>DATABASE_URL</code>. Therefore, open the <em>configure.swift</em>. After that, change the lines where we setup the database from:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let postgreSQLConfig = PostgreSQLDatabaseConfig(hostname: "localhost", username: "app_collection")</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>to:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let postgreSQLConfig : PostgreSQLDatabaseConfig
  
if let url = Environment.get("DATABASE_URL") {
  postgreSQLConfig = PostgreSQLDatabaseConfig(url: url)!
} else {
  postgreSQLConfig = PostgreSQLDatabaseConfig(hostname: "localhost", username: "app_collection")
}</code></pre>
<!-- /wp:code -->

<!-- wp:core-embed/youtube {"url":"https://www.youtube.com/watch?v=J7VILggBt0Q","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=J7VILggBt0Q
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>As a result of changing the code, we will be checking if there is an environment variable called <code>DATABASE_URL</code>. In other words, we are using the static method<a href="https://docs.vapor.codes/3.0/getting-started/services/#environment"><code>Environment.get(_:)</code></a> to fetch the string value if it exists. Secondly, if the variable doesn’t exist we assume this is being run locally and it uses the default settings. To clarify, we are using an unconditional unwrapping since we’d rather it trigger a runtime error than attempt to use the default settings. Lastly, let’s move forward with deploying our application.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Deploying Vapor Package to Heroku</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Similarly, we can deploy the application to Heroku in the terminal with one of two commands. Firstly, you can push directly with git using the command: </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>git push heroku master</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Secondly, you can push with the Vapor CLI command:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>vapor heroku push</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In short, either command will:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Firstly, push your code to the Heroku </li><li>Secondly, build the Application</li><li>Lastly, run the application (based on the command in the Procfile)</li></ul>
<!-- /wp:list -->

<!-- wp:core-embed/youtube {"url":"https://m.youtube.com/watch?v=J0-wLRCarzc","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://m.youtube.com/watch?v=J0-wLRCarzc
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>Therefore, if our application instance is called <em> damp-spire-56788 </em>, we should be call our application with <code>curl</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>> curl http://damp-spire-56788.herokuapp.com/hello
Hello, world!%
> curl -X POST -H "Content-Type: application/json" -d '{"title": "example"}' http://damp-spire-56788.herokuapp.com/todos
{"id":1,"title":"example"}%
> curl http://damp-spire-56788.herokuapp.com/todos 
[{"id":1,"title":"example"}]%</code></pre>
<!-- /wp:code -->

<!-- wp:core-embed/youtube {"url":"https://m.youtube.com/watch?v=a0IJUTOJafo","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://m.youtube.com/watch?v=a0IJUTOJafo
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>In short, we can setup our app for Heroku by </p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Firstly, using the Vapor CLI to setup the instance, build pack, Procfile, and git remote</li><li>Secondly, using setting up a PostgreSQL instance in Heroku</li><li>After that, updating the code to use the environment variable for the database url to access the Heroku PostgreSQL instance</li><li>Lastly, pushing the code to Heroku and testing the application</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Similarly, now that we know how to deploy to Heroku, let’s look at what we need to do to setup our own Ubuntu server for hosting our Vapor application.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="ubuntu-vapor">Setting Up Vapor For Ubuntu</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In the same way, I showed how to setup our Vapor application for Heroku; we are going to look at what is needed to setup an Ubuntu server. In this case, we are using the latest LTS version of Ubuntu which is Bionic Beaver 18.04. However, according to the <a href="https://docs.vapor.codes/3.0/install/ubuntu/">documentation</a>, Vapor does support version 14.04 (Trusty Tahr) and up including 18.10 (Cosmic Cuttlefish).</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Installing Prerequisites</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>With a new server setup, we need to install several package. However, first we need add Vapor’s APT repo. Therefore, on the server (as root), run the following command:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>eval "$(curl -sL https://apt.vapor.sh)"</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>After that, we can proceed with installing the software we’ll be using to setup our server:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>git</strong> - for fetching the code of our application</li><li><strong>nginx</strong> - our http server</li><li><strong>postgresql</strong> - our database server</li><li><strong>supervisor</strong> - which is used to monitor and execute the application</li><li><strong>swift</strong> and <strong>vapor</strong> - which is used to build and run the application</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Therefore, we can install the application with:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>apt install git supervisor postgresql swift vapor nginx</code></pre>
<!-- /wp:code -->

<!-- wp:core-embed/youtube {"url":"https://m.youtube.com/watch?v=Ul4hL9vP06g","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://m.youtube.com/watch?v=Ul4hL9vP06g
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading {"level":3} -->
<h3>Setting Up the PostgreSQL Database</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Similarly to how we use the <code>DATABASE_URL</code> on Heroku, we are going to setup environment variables in Ubuntu. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4 id="ubuntu-code">Updating the Code</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Therefore, open up Xcode and in our project go back to <code>configure.swift</code>. After that, between the <code>import</code> statements but before the <code>configure</code> function add a struct to store the defaults for PostgreSQL:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>public struct PostgresDefaults {
  public static let hostname = "localhost"
  public static let username = "app_collection"
  public static let port = 5432
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>To clarify, this struct stores the default host name, user name, and port, we use for PostgreSQL configuration</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Moreover change the line in the else statement from:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>postgreSQLConfig = PostgreSQLDatabaseConfig(hostname: "localhost", username: "app_collection")</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>to:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let hostname = Environment.get("DATABASE_HOSTNAME") ?? PostgresDefaults.hostname
let username = Environment.get("DATABASE_USERNAME") ?? PostgresDefaults.username
let database = Environment.get("DATABASE_DATABASE")
let password = Environment.get("DATABASE_PASSWORD")

let port : Int

if let portString = Environment.get("DATABASE_PORT") {
  port = Int(portString) ?? PostgresDefaults.port
} else {
  port = PostgresDefaults.port
}

postgreSQLConfig = PostgreSQLDatabaseConfig(hostname: hostname, port: port, username: username, database: database, password: password, transport: .cleartext)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>To sum up, this code fetches from the environment variables for the host name, user name, database, password, and port. Consequently, if any value is invalid or does not exist it falls back to the default setup in the <code>PostgresDefaults</code> struct or null and let’s the <code>PostgreSQLDatabaseConfig</code> use its default value. Likewise, this code will still work on Heroku (with the <code>DATABASE_URL</code>) and on localhost with the defaults setup. </p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {"url":"https://www.youtube.com/watch?v=xb3LNa_eADo","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=xb3LNa_eADo
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>However, before we setup the environment variables for our application, we need to setup the database. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Add Database and User</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Therefore, as root, sudo in as the <code>postgres</code> user and run <code>psql</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>sudo -u postgres psql</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>After that, run the following sql statements:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>create database app_collection;
create user app_collection with encrypted password 'app_collection_pw';
grant all privileges on database app_collection to app_collection;</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>To clarify, we are creating:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>database named <em>app_collection</em> </li><li>user named <em>app_collection</em> with a password  <em>app_collection_pw</em></li><li>grant the user all privileges on the database, we’ve created</li></ul>
<!-- /wp:list -->

<!-- wp:core-embed/youtube {"url":"https://m.youtube.com/watch?v=hY1gOcB4XbE","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://m.youtube.com/watch?v=hY1gOcB4XbE
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>As a result of setting up the database, we can begin to setup <em>supervisor</em>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Setting Up Supervisor</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Since we are using supervisor, we are going to be setting up a Linux user to run the actual application. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Adding a Linux User</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>As root user again, run the following command:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>adduser app_collection</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>To clarify, we are setting up user called <code>app_collection</code> which does not need any other metadata (Full Name, Room Number, etc...). Therefore having setup the user, let’s pull and build the code.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Pulling Repo</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Having setup the user in Linux, go ahead and super user in as the new user:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>su -l app_collection</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>After that, as the new user, clone the repo:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>git clone https://github.com/brightdigit/swift-vapor-app-collection-sample.git app</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Subsequently, go to the directory and build the application:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>cd app
vapor build</code></pre>
<!-- /wp:code -->

<!-- wp:core-embed/youtube {"url":"https://m.youtube.com/watch?v=RU3jJUe66uE","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://m.youtube.com/watch?v=RU3jJUe66uE
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>In short, we have cloned the code from our repo and built the application. As a result, we can move forward with configuring supervisor.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Configuring Supervisor</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While our application will serve our Rest API and <em>nginx</em> will proxy that connection, <em>supervisor</em> will monitor and control the actual Vapor application process. Therefore, let’s create a configuration for our Vapor application. In other words, as root, create a file here:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/etc/supervisor/conf.d/app_collection.conf</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>After that, paste this text into the configuration file:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>[program:app_collection]
environment =
        DATABASE_PASSWORD="app_collection_pw",
command=vapor run --port=3000 --env=production
directory=/home/app_collection/app/ 
autorestart=true
user=app_collection             
stdout_logfile=/var/log/supervisor/%(program_name)-stdout.log
stderr_logfile=/var/log/supervisor/%(program_name)-stderr.log
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>To clarify:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>the name of this process will be <em>program:app_collection</em></li><li>we setup an environment variable for the database password</li><li>the command is to run Vapor from our code’s directory</li><li>auto restart if the app fails</li><li>run as our new user </li><li>lastly, we have setup a path for the application output and errors</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Subsequently, we can go ahead and update supervisor by with the following commands:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>supervisorctl reread
supervisorctl update</code></pre>
<!-- /wp:code -->

<!-- wp:core-embed/youtube {"url":"https://m.youtube.com/watch?v=-dCqEE3L0nk","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://m.youtube.com/watch?v=-dCqEE3L0nk
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>After that, you can test if supervisor was successful by calling the application from port 3000:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>curl http://localhost:3000/hello</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In short, we’ve setup our Vapor application in supervisor to run on port 3000 with a database password setup as an environment variable. As a result, let’s setup <em>nginx</em> to proxy our application.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Setting Up Nginx</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For our http server, we’ll be using <em>nginx</em>. Most importantly, we’ll be setting up a host name for our application. Therefore, we are using the nginxconfig.io to setup the config files. Consequently, you can download <a href="https://nginxconfig.io/?0.domain=app_collection.local&amp;0.redirect=false&amp;0.https=false&amp;0.php=false&amp;0.proxy&amp;0.proxy_pass=http:%2F%2Flocalhost:3000&amp;0.root=false">the specific <em>nginx</em> configuration</a> we are using from <a href="https://nginxconfig.io/?0.domain=app_collection.local&amp;0.redirect=false&amp;0.https=false&amp;0.php=false&amp;0.proxy&amp;0.proxy_pass=http:%2F%2Flocalhost:3000&amp;0.root=false" title="specific nginx configuration for our example">here</a>. In addition, feel free to change host name before downloading.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>After that, unzip the file:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>unzip nginxconfig.io-app_collection.local.zip</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Firstly, we can, as root, move the files to their proper locations:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>mv nginx.conf /etc/nginx/nginx.conf
mv sites-available/app_collection.local.conf /etc/nginx/sites-available
ln -s /etc/nginx/sites-available/app_collection.local.conf /etc/nginx/sites-enabled
mv nginxconfig.io /etc/nginx/</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Secondly, now that we have moved the configuration files over, restart nginx:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>service nginx restart</code></pre>
<!-- /wp:code -->

<!-- wp:core-embed/youtube {"url":"https://m.youtube.com/watch?v=qUrDtoHI-zw","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://m.youtube.com/watch?v=qUrDtoHI-zw
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>Most importantly, if you are using a <code>.local</code> host name, make sure to setup the host name on your network. That is to say, make sure the host name is accessible from your local development computer. For instance, on macOS or Linux, you would need to edit <a href="https://en.wikipedia.org/wiki/Hosts_(file)">the <code>/etc/hosts</code> file</a>.  On the other hand, if this is to be a public host name, verify you have updated  your dns accordingly.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>After you have verified the dns or hosts file is updated, we can proceed if testing the application out:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>> curl http://app_collection.local/hello
Hello, world!%
> curl -X POST -H "Content-Type: application/json" -d '{"title": "example"}' http://app_collection.local/todos
{"id":1,"title":"example"}%
> curl http://app_collection.local/todos 
[{"id":1,"title":"example"}]%</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In short, we’ve successfully setup the application on an Ubuntu server.</p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<!-- Begin Mailchimp Signup Form -->
<link href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css" rel="stylesheet" type="text/css">
<style type="text/css">
  #mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
  /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block.
     We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
</style>
<style type="text/css">
  #mc-embedded-subscribe-form input[type=checkbox]{display: inline; width: auto;margin-right: 10px;}
  #mergeRow-gdpr {margin-top: 20px;}
  #mergeRow-gdpr fieldset label {font-weight: normal;}
  #mc-embedded-subscribe-form .mc_fieldset{border:none;min-height: 0px;padding-bottom:0px;}
</style>
<div id="mc_embed_signup">
<form action="https://brightdigit.us12.list-manage.com/subscribe/post?u=cb3bba007ed171091f55c47f0&amp;id=584d0d5c40" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
    <div id="mc_embed_signup_scroll">
  <h2>Want to Learn More?<br>Get the Full Guide and Video Mini-Course Today</h2>
<div class="indicates-required"><span class="asterisk">*</span> indicates required</div>
<div class="mc-field-group">
  <label for="mce-EMAIL">Email Address  <span class="asterisk">*</span>
</label>
  <input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL">
</div>
<div class="mc-field-group">
  <label for="mce-FNAME">First Name  <span class="asterisk">*</span>
</label>
  <input type="text" value="" name="FNAME" class="required" id="mce-FNAME">
</div>
<div class="mc-field-group">
  <label for="mce-LNAME">Last Name  <span class="asterisk">*</span>
</label>
  <input type="text" value="" name="LNAME" class="required" id="mce-LNAME">
</div>
<div class="mc-field-group input-group" style="display:none">
    <ul><li><input type="checkbox" value="1" name="group[19229][1]" id="mce-group[19229]-19229-0" checked readonly><label for="mce-group[19229]-19229-0">Swift</label></li>
<li><input type="checkbox" value="2" name="group[19229][2]" id="mce-group[19229]-19229-1"><label for="mce-group[19229]-19229-1">Productivity</label></li>
<li><input type="checkbox" value="8" name="group[19229][8]" id="mce-group[19229]-19229-2" checked readonly><label for="mce-group[19229]-19229-2">Vapor</label></li>
</ul>
</div>
<div class="mc-field-group input-group" style="display:none">
    <strong>Products </strong>
    <ul><li><input type="checkbox" value="4" name="group[19233][4]" id="mce-group[19233]-19233-0"><label for="mce-group[19233]-19233-0">Speculid</label></li>
</ul>
</div>
<div id="mergeRow-gdpr" class="mergeRow gdpr-mergeRow content__gdprBlock mc-field-group">
    <div class="content__gdpr">
        <label>Marketing Permissions</label>
        <p>Please select all the ways you would like to hear from BrightDigit:</p>
        <fieldset class="mc_fieldset gdprRequired mc-field-group" name="interestgroup_field">
    <label class="checkbox subfield" for="gdpr_34225"><input type="checkbox" id="gdpr_34225" name="gdpr[34225]" value="Y" class="av-checkbox "><span>Email</span> </label>
        </fieldset>
        <p>You can unsubscribe at any time by clicking the link in the footer of our emails. For information about our privacy practices, please visit our website.</p>
    </div>
    <div class="content__gdprLegal">
        <p>We use Mailchimp as our marketing platform. By clicking below to subscribe, you acknowledge that your information will be transferred to Mailchimp for processing. <a href="https://mailchimp.com/legal/" target="_blank" rel="noopener noreferrer">Learn more about Mailchimp's privacy practices here.</a></p>
    </div>
</div>
  <div id="mce-responses" class="clear">
    <div class="response" id="mce-error-response" style="display:none"></div>
    <div class="response" id="mce-success-response" style="display:none"></div>
  </div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
    <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_cb3bba007ed171091f55c47f0_584d0d5c40" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
    </div>
</form>
</div>
<script type='text/javascript' src='//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js'></script><script type='text/javascript'>(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';fnames[2]='LNAME';ftypes[2]='text';fnames[3]='MMERGE3';ftypes[3]='text';fnames[4]='MMERGE4';ftypes[4]='number';fnames[6]='MMERGE6';ftypes[6]='number';fnames[7]='MMERGE7';ftypes[7]='text';}(jQuery));var $mcj = jQuery.noConflict(true);</script>
<!--End mc_embed_signup-->
<!-- /wp:html -->

<!-- wp:heading -->
<h2>And There's More...</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In conclusion, we’ve successfully:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>setup our <strong>Mac for developing</strong> server-side Swift application using Vapor</li><li>converted the beginner template to <strong>use PostgreSQL</strong> from SQLite</li><li>updated the code to <strong>use environment variables</strong> for different server environments</li><li>setup and deployed the application to <strong>Heroku</strong></li><li>setup and deployed to an <strong>Ubuntu</strong> server</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Vapor will will reduce friction in your Swift development and has effective community support. To get a full guide and video mini-course, fill out <a href="http://eepurl.com/gku85T">this form</a> and <strong>let me know what other Vapor topics</strong> you are interested in learning more about such as:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>setting up <strong>complicated database models</strong> and relationships</li><li>how to configure <strong>advanced Rest API routes</strong></li><li>writing <strong>complex queries using Fluent ORM</strong> and Futures in Swift</li><li>setting up for <strong>authentication</strong></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>I look forward to hearing your feedback and I’ll keep you posted on updates.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>506</wp:post_id>
		<wp:post_date><![CDATA[2019-03-19 07:51:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-19 11:51:47]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-30 17:12:43]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-30 21:12:43]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[vapor-heroku-ubuntu-setup-deploy]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vapor"><![CDATA[Vapor]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[505]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:2:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560400880;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:544;}i:1;a:1:{s:2:"id";i:158;}i:2;a:1:{s:2:"id";i:246;}}}s:32:"37550b67d263a3ce789993dc25046c5f";a:2:{s:7:"expires";i:1560416922;s:7:"payload";a:6:{i:0;a:1:{s:2:"id";i:544;}i:1;a:1:{s:2:"id";i:158;}i:2;a:1:{s:2:"id";i:246;}i:3;a:1:{s:2:"id";i:195;}i:4;a:1:{s:2:"id";i:295;}i:5;a:1:{s:2:"id";i:11;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[vapor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[82]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_000ef6bf14b4af63ca19c50eb19fe1fe]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/yYCxa6ev1Ng?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_000ef6bf14b4af63ca19c50eb19fe1fe]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552600836]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b89d5862690ebb8f5edd2265e1bb469b]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/iZqHmFnisXQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_b89d5862690ebb8f5edd2265e1bb469b]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552600836]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_115aa0b7c8a3ea103035249442920729]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/kZKP2MiFaLQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_115aa0b7c8a3ea103035249442920729]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552600836]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_2f07da88d654b46aaa54bbaab478742a]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/bRXTT8K-lP8?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_2f07da88d654b46aaa54bbaab478742a]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552600836]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_1e5f1b2c57d8d15b738a25082860f4b0]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/8piDsDi6PNo?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_1e5f1b2c57d8d15b738a25082860f4b0]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552601757]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_4bacf1536f9970b316027e71156bfd7a]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/rprznYi-kKQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_4bacf1536f9970b316027e71156bfd7a]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552601757]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_45ed36301970c8ea76445ebdf5a4c52e]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/X1f_oGRlpM4?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_45ed36301970c8ea76445ebdf5a4c52e]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552601757]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8682f8f9b4c37be483eb67f28421dc5f]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/J0-wLRCarzc?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_8682f8f9b4c37be483eb67f28421dc5f]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552601757]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_5d978892b1bdf300919dd6fc11643d56]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/a0IJUTOJafo?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_5d978892b1bdf300919dd6fc11643d56]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552601757]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_baa8765dd5bbf3e29a1459d96b088130]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/Ul4hL9vP06g?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_baa8765dd5bbf3e29a1459d96b088130]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552601757]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_624faa359e2d2a9b5c5eb6551650fe9a]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/jxe7axdlXhQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_624faa359e2d2a9b5c5eb6551650fe9a]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552601757]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8aef28c0429e6a9853774c16c448ef16]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/hY1gOcB4XbE?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_8aef28c0429e6a9853774c16c448ef16]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552601758]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_2938171d7ffb5512cc4c7c933136f5e5]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/RU3jJUe66uE?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_2938171d7ffb5512cc4c7c933136f5e5]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552601758]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b29da67422124f970c9c35889281064e]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/-dCqEE3L0nk?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_b29da67422124f970c9c35889281064e]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552601758]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_eb7a40fae501fe05197bfcbffb1fc4cb]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe width="1040" height="585" src="https://www.youtube.com/embed/qUrDtoHI-zw?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_eb7a40fae501fe05197bfcbffb1fc4cb]]></wp:meta_key>
		<wp:meta_value><![CDATA[1552601758]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-03-18]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_6792719]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[Vapor - Setup and Deployment with Heroku and Ubuntu - %%page%% %%sep%% %%sitename%%]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Vapor is a really great choice and fairly easy to work with. In this article I am going to cover how to get started and deployed to the web.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_699cf7428cfed3a4cabb0c8ee194d161]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="Vapor Deep Drive - Step 1 - Installing Vapor on your Mac" width="640" height="360" src="https://www.youtube.com/embed/yYCxa6ev1Ng?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_699cf7428cfed3a4cabb0c8ee194d161]]></wp:meta_key>
		<wp:meta_value><![CDATA[1569877733]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_35a9d0f17ab7fed466b87a4a6394a4c3]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="Vapor Deep Drive - Step 2 - Creating Xcode Project on macOS" width="640" height="360" src="https://www.youtube.com/embed/iZqHmFnisXQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_35a9d0f17ab7fed466b87a4a6394a4c3]]></wp:meta_key>
		<wp:meta_value><![CDATA[1569877733]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_723fab4ddd5f4b0db9e614517693985c]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="Vapor Deep Drive - Step 4 - Testing the Application with cURL" width="640" height="360" src="https://www.youtube.com/embed/bRXTT8K-lP8?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_723fab4ddd5f4b0db9e614517693985c]]></wp:meta_key>
		<wp:meta_value><![CDATA[1569877733]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_16458978014783a6ab225c52293f9e66]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="Vapor Deep Drive - Step 11 - Prepare Package for Heroku" width="640" height="360" src="https://www.youtube.com/embed/8piDsDi6PNo?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_16458978014783a6ab225c52293f9e66]]></wp:meta_key>
		<wp:meta_value><![CDATA[1569877733]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_c37c1ca3be99e008ab2ae18334a8e4ae]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="Vapor Deep Drive - Step 12 - Adding PostgreSQL to Heroku" width="640" height="360" src="https://www.youtube.com/embed/rprznYi-kKQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_c37c1ca3be99e008ab2ae18334a8e4ae]]></wp:meta_key>
		<wp:meta_value><![CDATA[1569877734]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_14335aeeccc7f8a830925c484800f26a]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="Vapor Deep Drive - Step 14 - Deploy to Heroku" width="640" height="360" src="https://www.youtube.com/embed/J0-wLRCarzc?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_14335aeeccc7f8a830925c484800f26a]]></wp:meta_key>
		<wp:meta_value><![CDATA[1569877734]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_d117e4799b6d3d0f852435c307bcc57f]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="Vapor Deep Drive - Step 15 - Testing Heroku" width="640" height="360" src="https://www.youtube.com/embed/a0IJUTOJafo?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_d117e4799b6d3d0f852435c307bcc57f]]></wp:meta_key>
		<wp:meta_value><![CDATA[1569877734]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_4f3f6f2f79c1890e36e80fd3413968a1]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="Vapor Deep Drive - Step 16 - Preparing Ubuntu Server" width="640" height="360" src="https://www.youtube.com/embed/Ul4hL9vP06g?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_4f3f6f2f79c1890e36e80fd3413968a1]]></wp:meta_key>
		<wp:meta_value><![CDATA[1569877734]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_65e62ae771f43c7d24fa81cee5806dbd]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="Vapor Deep Drive - Step 18 - Setup PostgreSQL on Ubuntu" width="640" height="360" src="https://www.youtube.com/embed/hY1gOcB4XbE?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_65e62ae771f43c7d24fa81cee5806dbd]]></wp:meta_key>
		<wp:meta_value><![CDATA[1569877734]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_90f418282a7c95bdf807763bedc33d5e]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="Vapor Deep Drive - Step 19 - Deploying Code on Ubuntu" width="640" height="360" src="https://www.youtube.com/embed/RU3jJUe66uE?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_90f418282a7c95bdf807763bedc33d5e]]></wp:meta_key>
		<wp:meta_value><![CDATA[1569877734]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_ec688d10b01a525c525ff9b79c3c04b8]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="Vapor Deep Drive - Step 20 - Setting up Supervisor in Ubuntu" width="640" height="360" src="https://www.youtube.com/embed/-dCqEE3L0nk?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_ec688d10b01a525c525ff9b79c3c04b8]]></wp:meta_key>
		<wp:meta_value><![CDATA[1569877734]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_bd2d45cf3a365696cdf760188a14a85c]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="Vapor Deep Drive - Step 21 - Setting up Nginx in Ubuntu" width="640" height="360" src="https://www.youtube.com/embed/qUrDtoHI-zw?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_bd2d45cf3a365696cdf760188a14a85c]]></wp:meta_key>
		<wp:meta_value><![CDATA[1569877734]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-506]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Vapor - Swift Choice For the Back End]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-backend-review/</link>
		<pubDate>Tue, 19 Mar 2019 11:44:33 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=544</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Back in February, I did <a rel="noreferrer noopener" aria-label="an episode of empowerapps.show where I gave an overview of different backend options when developing a mobile application. (opens in a new tab)" href="https://share.transistor.fm/s/ffcb9fc1?utm_source=learning-swift&amp;utm_medium=web" target="_blank">an episode of my podcast where I gave an overview of different backend options when developing a mobile application.</a> In short, when looking for the right option, there is a plethora of choices. For instance, for Swift developers, <a rel="noreferrer noopener" aria-label="Vapor (opens in a new tab)" href="https://vapor.codes" target="_blank">Vapor</a> has become an increasingly apt choice. Therefore, I decided to <a href="https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/?utm_medium=web&amp;utm_source=learning-swift" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">deep dive</a> into <a rel="noreferrer noopener" aria-label="Vapor (opens in a new tab)" href="https://vapor.codes" target="_blank">Vapor</a> and whether it is really a viable choice.</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:html -->
<script type="text/javascript" src="//downloads.mailchimp.com/js/signup-forms/popup/unique-methods/embed.js" data-dojo-config="usePlainJson: true, isDebug: false"></script><script type="text/javascript">window.dojoRequire(["mojo/signup-forms/Loader"], function(L) { L.start({"baseUrl":"mc.us12.list-manage.com","uuid":"cb3bba007ed171091f55c47f0","lid":"f8cb12280f","uniqueMethods":true}) })</script>
<!-- /wp:html -->

<!-- wp:image {"id":551} -->
<figure class="wp-block-image"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/jared-murray-974070-unsplash-e1552938209336-1024x512.jpg" alt="Where do you go for the right back end choice?" class="wp-image-551"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>A Plethora Of Choices</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Looking at the landscape of back end choices can be rather confusing. In the end, <strong>it really depends on team’s skillset</strong>. For instance, if you’re using JavaScript to build your web and mobile applications, Node.JS makes sense. On the other hand, if you are .Net developer team, Web API makes sense. Moreover, if you are particularly skilled with PHP, Python, Ruby, Go, etc..., you should stay within your comfort zone. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>However for single developers and developer teams (such as me) which focus on Apple products, there isn’t a dedicated framework for server-side applications. Therefore, the closest option is <a href="https://developer.apple.com/icloud/cloudkit/" target="_blank" rel="noreferrer noopener" aria-label="CloudKit (opens in a new tab)">CloudKit</a>, which is good for data storage but lacks options such as:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>No support outside of web and Apple devices</li><li>No support for complete backups</li><li>Locked into the CloudKit data model for relationships</li><li>No Cron Jobs </li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>However there are other options to remain developing in Swift on server.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":554} -->
<figure class="wp-block-image"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/wordmark-horizontal-1024x271.png" alt="Vapor Logo" class="wp-image-554"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Vapor - Swift for the Server</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Since Swift was open sourced in late 2015, compatibility for other operating system has been added. One of the first teams to move Swift to the server was the Vapor team. Since the release of version 3.0 in May 2018, interest has grown.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In this article, I will review Vapor and cover:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong><a href="#getting-started">Ease of Installation and Deployment</a></strong></li><li><strong><a href="#developing">Developing For Vapor</a></strong></li><li><strong><a href="#database-support">Database Support</a></strong></li><li><strong><a href="#event-driven">Event-Driven Async API</a></strong></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Therefore, let’s begin by talking about how easy it is to get started.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":555} -->
<figure class="wp-block-image"><img src="https://i1.wp.com/learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/getting-things-setup.jpg?fit=1024%2C512&amp;ssl=1" alt="Getting Started" class="wp-image-555"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2 id="getting-started">Getting Started with Vapor</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/?utm_medium=web&amp;utm_source=learning-swift">In this article I recently published, I showed how to get started by installing Vapor on your Mac and Ubuntu as well as services like Heroku.</a> In short, <strong>I found the process to be pretty simple and effective</strong>. That is to say, it is no more complex then any other web framework. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For instance, on the Mac, developers can use <a href="https://brew.sh" target="_blank" rel="noreferrer noopener" aria-label="Homebrew (opens in a new tab)">Homebrew</a>, which is fairly common, to tap the Vapor repo and install. After you have access to the Vapor CLI tool which includes a subcommand for setting up your Heroku application with the Vapor buildpack. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Likewise on Ubuntu, you add the apt repo for Vapor and install via <a href="https://help.ubuntu.com/lts/serverguide/apt.html.en" target="_blank" rel="noreferrer noopener" aria-label="the apt command (opens in a new tab)">the </a><em><a href="https://help.ubuntu.com/lts/serverguide/apt.html.en" target="_blank" rel="noreferrer noopener" aria-label="the apt command (opens in a new tab)">apt</a></em><a href="https://help.ubuntu.com/lts/serverguide/apt.html.en" target="_blank" rel="noreferrer noopener" aria-label="the apt command (opens in a new tab)"> command</a>. Having done that, you can easily use a combination of a process monitor and an http server to proxy the server. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you are interested in more details on this process, <strong>check out <a rel="noreferrer noopener" aria-label="this article which deep dives into Vapor and setting up for macOS, Heroku, and Ubuntu. (opens in a new tab)" href="https://learningswift.brightdigit.com/vapor-heroku-ubuntu-setup-deploy/?utm_medium=web&amp;utm_source=learning-swift" target="_blank">this article which deep dives into Vapor and setting up for macOS, Heroku, and Ubuntu.</a></strong></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":558} -->
<figure class="wp-block-image"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/developer-tools-1024x512.jpg" alt="The Tools to Get Started Developing" class="wp-image-558"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2 id="developing">Developing with Vapor </h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Having installed Vapor, the next part of the procedure is developing the app. As a result, the IDE is very important. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Developer Tools with Vapor</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In spite of <a href="#Xcode-issues">its issues</a>, we can still develop in Swift with Xcode. However, since there are command line tools to build a Swift application and a developer could choose their own tool. At the present time, the real limitation is that Swift in general is only supported on macOS and Ubuntu. That is to say <strong>there is no support for other Linux or Unix operating systems as well as no support for Windows.</strong> However, the community is certainly moving forward with extending support in those areas. Similarly, the community has provided plenty of packages.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Third Party Support for Vapor</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Node.js has npm, Ruby has gems, C# has Nuget, Python has pip and Swift has the <a rel="noreferrer noopener" aria-label="Swift Package Manager (opens in a new tab)" href="https://swift.org/package-manager/" target="_blank">Swift Package Manager</a>. Generally speaking, the Swift Package Manager or SPM has been slowly adapted as the premier dependency manager. In the long run while Cocoapods and Carthage still reign in the area of iOS development,<strong> it is inevitable that SPM will dominate in the future</strong>. Having discussed outside support for Vapor, let’s discuss what Vapor (and its package support currently).</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="database-support">Database Support and Fluent ORM</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>My experience working with various ORMs are varied. Being that I’ve worked with Entity Framework in C# and Sequelize for Node.Js, I have some experience. Having said that, <strong>what makes these work so well is the ability to use lambdas and implement many functional programming paradigms.</strong> As a result, since Swift has that ability, using the Fluent ORM is fairly easy to learn.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Equally important is its support of various database software. As of now, there is support for:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>MySQL</li><li>MariaDB</li><li>MongoDB</li><li>PostgreSQL</li><li>SQLite</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>As can be seen, there is sufficient database support. Not to mention, but its support for those databases is fairly deep. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Deep Database Support</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For instance, I ran into an issue where I was searching for objects by title - a fairly simple keyword search for a REST API list operation. However, what I didn’t realize was that many titles have <a href="https://en.wikipedia.org/wiki/Diacritic"><em>diacritcs</em></a>, specifically accents. In other words if a user searches for something with an <em>e</em> if a title has an <em>é</em>, that result won’t show up. In spite of this, there is code in PostgreSQL to <em>unaccent</em> a string, such as there is a way to do lower or upper case transformation. Having adding the necessary functions, I am able to call the function with Fluent’s API:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let columnId = PostgreSQLColumnIdentifier.column("Game", "title")
let column = PostgreSQLExpression.column(columnId)
let arg = GenericSQLFunctionArgument&lt;PostgreSQLExpression>.expression(column)
let args : [GenericSQLFunctionArgument&lt;PostgreSQLExpression>] = [arg]
let expression = PostgreSQLExpression.function("unaccent", args)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As shown above, this may not be ideal, but it works. In addition, you always have access to lower level, direct SQL code using the Database Kit API. However what truly makes Fluent ORM so robust is the use of SwiftNIO async API. </p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":559} -->
<figure class="wp-block-image"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/futures-and-promises-1024x512.jpg" alt="The Future of Programming" class="wp-image-559"/></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3 id="event-driven">The <em>Future</em> of Programming</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In short, <a href="https://github.com/apple/swift-nio" target="_blank" rel="noreferrer noopener" aria-label="SwiftNIO (opens in a new tab)">SwiftNIO</a>, the event-driven network application framework started by Apple, provides a set of types for handling callback-based asynchronous APIs such as database queries. </p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<a id="Xcode-issues"></a>
<!-- /wp:html -->

<!-- wp:paragraph -->
<p>In addition, Vapor provides a set of functionality which make complex queries accessible in code. That is to say <strong>SwiftNIO and Vapor provides futures and promises as well as and API for dealing with multiple objects such as transformations</strong>. Despite this, <strong>the most significant friction I have found was the combination of Xcode and Swift compiler delivering misleading error message.</strong> At present, this is very common complaint with Swift and Xcode in general but it is certainly an issue worth mentioning. Likewise, I used the same async API when making various HTTP calls and found it very reliable. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>The REST of the API</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>As opposed to URLRequest,<strong> the HTTP API is promise/future friendly</strong> which is nice improvement. However, any async call in Swift can easily be made friendly. In addition to the Fluent ORM, HTTP, and Async APIs, I did make use of the Auth, Crypto, and Routing APIs. In short, all worked flawlessly. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For instance, serialization from JSON or Multipart encoded data works without much needed implementation. That is to say, if you are implementing a type which correctly implements Codable then there should not be much extra effort in creating a robust REST API. However, if you do need to customize your type to use Codable, I highly recommend my post on improving how you decode JSON. </p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":560} -->
<figure class="wp-block-image"><img src="https://i0.wp.com/learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/03/swift-vapor-choice.jpg?fit=1024%2C512&amp;ssl=1" alt="Should you go with Vapor?" class="wp-image-560"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Vaporware or Swift-ly Switch?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To sum up, <strong>Vapor is already a healthy framework to start any new server-side application</strong>. However, I would never recommend anyone rewrite their whole application in this. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Overall, <strong>if you are already Swift team and you are looking to move some if not all your code to a new framework, I’d highly recommend taking a look Vapor as your first choice.</strong> Not to mention, if you are using a web framework that is becoming a burden and <strong>enjoy the versatility of Swift, going with Vapor would be good fit</strong>. (Besides that, the only caveat I’d make is that if you are building for the enterprise I would look into <a rel="noreferrer noopener" aria-label="Kitura (opens in a new tab)" href="https://www.kitura.io" target="_blank">Kitura</a>, the IBM team has plenty of experience in that space and <a href="https://www.kitura.io" target="_blank" rel="noreferrer noopener" aria-label="Kitura (opens in a new tab)">Kitura</a> seems more focused in those regards.)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>On the other hand, if you are using a web framework which has performed well for your team and most of your development is not in Swift, then switching to Vapor does not make sense. Lastly, I just wanted to point out, that Vapor works well outside of an Apple client application. For example, <strong><a href="https://redmushroom.club?utm_medium=web&amp;utm_source=learning-swift" target="_blank" rel="noreferrer noopener" aria-label="I successfully built a web application using VueJs and Axios (opens in a new tab)">I successfully built a web application using VueJs and Axios</a> and had no difficulty when it came to server-client communication.</strong> If you are interested in getting started, <a rel="noreferrer noopener" aria-label="subscribe to this newsletter (opens in a new tab)" href="http://eepurl.com/gk8mp5" target="_blank">subscribe to this newsletter</a>, to get started guide as well as updates on how to develop a robust application with Vapor.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>544</wp:post_id>
		<wp:post_date><![CDATA[2019-03-19 07:44:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-19 11:44:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-03-22 11:06:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-03-22 15:06:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[vapor-swift-backend-review]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="vapor"><![CDATA[Vapor]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1560407619;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:506;}i:1;a:1:{s:2:"id";i:158;}i:2;a:1:{s:2:"id";i:211;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[548]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[vapor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019-03-18]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_mess]]></wp:meta_key>
		<wp:meta_value><![CDATA[Is @codevapor the right choice for your back end? Here are some things to consider about Vapor.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_6792719]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[For Swift developers, Vapor has become an increasingly apt choice for a mobile backend. I decided to deep dive into Vapor and see if it is a viable choice.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-544]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Mac for Developers - Which One To Learn Swift in 2019?]]></title>
		<link>https://learningswift.brightdigit.com/mac-developers-learn-swift-2019/</link>
		<pubDate>Tue, 18 Jun 2019 19:48:21 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=613</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>For beginners learning Swift, it can be a challenge to find the right Mac for developers. As with many things, I strongly believe you shouldn't spend too much money until you know you will be making a real commitment to a project. Rightfully, this includes Swift and iOS development. </p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:paragraph -->
<p>Therefore, depending on your experience and your budget, here are some guidelines:</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Just starting off - under $600 - <strong>iPad</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>You can accomplish a lot with Swift Playground. Rightfully, it’s a great way to start learning Swift specifically. You want be able to deploy onto an iPhone or post to the App Store but it's great way to lightly dabble without commiting.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Under $1300 - <strong>MacBook Air, MacBook, Mac Mini</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you want to deploy and test on an actual device or you wish to post to the App Store, <strong>you need macOS and Xcode</strong>. If you don’t mind losing portability a Mac mini is worth it. Otherwise, what you sacrifice in portability you loose in speed that is building in Xcode will take longer. However now you can actually build, deploy, post an actual app to the App Store.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>Under $2200</strong> - <strong>MacBook Pro</strong>…&nbsp;<strong>However</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><strong><em>With the&nbsp;</em></strong><a href="https://www.wsj.com/graphics/apple-still-hasnt-fixed-its-macbook-keyboard-problem/"><strong><em>recent spate of keyboard issues&nbsp;</em></strong></a><strong><em>as well as&nbsp;</em></strong><a href="https://www.macrumors.com/2019/02/21/apple-custom-arm-based-chips-2020/"><strong><em>the rumored transition to ARM</em></strong></a><strong><em>,&nbsp;I’d highly recommend waiting on purchasing a  brand new MacBook Pro</em></strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>Above $2200 </strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Surprisingly, you can <strong>upgrade your MacBook Pro</strong> all the way to $6600 if you really want to but I wouldn’t recommend it. However, I've purchased an <strong>iMac</strong> which is what I use and love. Consequently, <strong>I would never recommend a developer get a  iMac Pro (unless you plan to do game development or multimedia productions) and certainly not a Mac Pro.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Mac for Developers - Other Things to Note </h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Additionally, buying used is certainly worthwhile. However, make sure that it is recent enough to support the latest as well as upcoming version of macOS. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Finding the right Mac for developers is important, so hopefully you find this helpful in your journey towards becoming an accomplished Swift and iOS developer. </p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>613</wp:post_id>
		<wp:post_date><![CDATA[2019-06-18 15:48:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-06-18 19:48:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-06-18 16:08:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-06-18 20:08:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[mac-developers-learn-swift-2019]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[614]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Mac for developers]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[73]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[With learning Swift and iOS development, it can be a challenge to find the right Mac for developers. Here are some guidelines depending on experience and budget.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-613]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[EmpowerApps.Show - WWDC 2019 - Swift UI with Jason Anderson]]></title>
		<link>https://learningswift.brightdigit.com/empowerapps-show-wwdc-2019-swift-ui-with-jason-anderson/</link>
		<pubDate>Thu, 15 Aug 2019 15:07:10 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=630</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>In this episode we talk with Jason Anderson about Swift UI and reactive Swift post-WWDC 2019:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Functional Reactive Programming</li><li>Understanding Declarative Programming</li><li>Drawbacks of using Swift UI Now</li></ul>
<!-- /wp:list -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:html -->
<figure><iframe style="width: 100%; height: 180px;" src="https://share.transistor.fm/e/03051561" width="100%" height="180" frameborder="0" scrolling="no" seamless="true"></iframe></figure>
<!-- /wp:html -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>630</wp:post_id>
		<wp:post_date><![CDATA[2019-08-15 11:07:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-08-15 15:07:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-05-13 09:10:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-05-13 13:10:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[empowerapps-show-wwdc-2019-swift-ui-with-jason-anderson]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="empowerapps-show"><![CDATA[empowerapps.show]]></category>
		<category domain="category" nicename="empowerapps-show-podcast"><![CDATA[EmpowerApps.Show Podcast]]></category>
		<category domain="post_tag" nicename="swiftui"><![CDATA[swiftui]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[631]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:2:{s:32:"37550b67d263a3ce789993dc25046c5f";a:2:{s:7:"expires";i:1565924405;s:7:"payload";a:6:{i:0;a:1:{s:2:"id";i:1690;}i:1;a:1:{s:2:"id";i:1654;}i:2;a:1:{s:2:"id";i:1513;}i:3;a:1:{s:2:"id";i:1639;}i:4;a:1:{s:2:"id";i:1425;}i:5;a:1:{s:2:"id";i:564;}}}s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1565924438;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:1690;}i:1;a:1:{s:2:"id";i:1654;}i:2;a:1:{s:2:"id";i:1513;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_heateor_sc_meta]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-630]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Get Started Developing Server Side Swift with Vapor]]></title>
		<link>https://learningswift.brightdigit.com/vapor-swift-video-swift-toronto-2019/</link>
		<pubDate>Mon, 16 Sep 2019 14:10:31 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=644</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Last month I spoke at <a rel="noreferrer noopener" aria-label="SwiftTO in Toronto (opens in a new tab)" href="https://www.swiftconf.to/" target="_blank">SwiftTO in Toronto</a>, a great conference with some great speakers. If you get a chance, check out <a rel="noreferrer noopener" aria-label="all the talks here. (opens in a new tab)" href="https://vimeo.com/swiftto" target="_blank">all the talks here.</a> My topic of choice was Vapor and how to get started. </p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:image {"id":647} -->
<figure class="wp-block-image"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/img_0040.jpg" alt="" class="wp-image-647"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Here is the talk description:</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>While Swift has been on Apple devices such as the iPhone, iPad, Apple Watch, Mac, and Apple TV, in the last few years it has started to reach the Linux Operating System. This has allowed Swift to move from client devices to servers. Now we have several server side frameworks such as Perfect, Kitura, and Vapor. In this talk, Leo Dion goes into the details of developing with Vapor on the Mac to deploying onto the server. We talk about managing multiple process in Swift-NIO, the Fluent ORM, serialization of data, and the setting up of routes and authentication. If you are interested in taking a deep dive into Vapor, you’ll want to check out this talk.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:core-embed/vimeo {"url":"https://vimeo.com/354555100","type":"video","providerNameSlug":"vimeo","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-vimeo wp-block-embed is-type-video is-provider-vimeo wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://vimeo.com/354555100
</div></figure>
<!-- /wp:core-embed/vimeo -->

<!-- wp:paragraph -->
<p>If you are interested in learning more, check out <a rel="noreferrer noopener" aria-label="my other posts here. (opens in a new tab)" href="https://learningswift.brightdigit.com/category/vapor/" target="_blank">my other posts on Vapor here</a> as well as <a rel="noreferrer noopener" aria-label="Vapor Tutorial Video Course here. (opens in a new tab)" href="https://brightdigit.us12.list-manage.com/subscribe?u=cb3bba007ed171091f55c47f0&amp;id=a9032d78e6" target="_blank">Vapor Tutorial Video Course here.</a></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>644</wp:post_id>
		<wp:post_date><![CDATA[2019-09-16 10:10:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-16 14:10:31]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-29 15:59:15]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-29 20:59:15]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[vapor-swift-video-swift-toronto-2019]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="category" nicename="vapor"><![CDATA[Vapor]]></category>
		<category domain="post_tag" nicename="vapor"><![CDATA[vapor]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[648]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-644]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[WWDC 2019 Roundup - Podcast Episode]]></title>
		<link>https://learningswift.brightdigit.com/wwdc-2019-roundup-podcast-episode/</link>
		<pubDate>Wed, 11 Sep 2019 15:42:25 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=650</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>WWDC 2019 was a major year with Catalyst, Apple Watch, iCloud and of course SwiftUI. After WWDC 2019 this summer, I did <a rel="noreferrer noopener" aria-label="three podcast episodes  (opens in a new tab)" href="https://www.empowerapps.show/" target="_blank">three podcast episodes </a>highlighting some of the important new lessons we learned.</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:heading -->
<h2><a rel="noreferrer noopener" aria-label="Apple Watch with Gary Sabo (opens in a new tab)" href="https://www.empowerapps.show/18" target="_blank">WWDC 2019 - Apple Watch with Gary Sabo</a></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a rel="noreferrer noopener" aria-label="Gary Sabo  (opens in a new tab)" href="https://twitter.com/garysabo" target="_blank">Gary Sabo</a> of <a rel="noreferrer noopener" aria-label="MyndArc LLC (opens in a new tab)" href="https://apps.apple.com/us/developer/myndarc-llc/id979588062" target="_blank">MyndArc LLC</a>, has developed a variety of sports and activity apps for the Apple Watch so it was great to have him on to give his perspective on how the device has evolved.</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>In this episode we talk with Gary Sabo about the Apple Watch post-WWDC 2019. We talk about Independent Watch Apps, Swift UI and watchOS 6, HealthKit, Fitness apps and more.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:html -->
<iframe src="https://share.transistor.fm/e/3d4c7634" width="100%" height="180"></iframe>
<!-- /wp:html -->

<!-- wp:heading -->
<h2><a rel="noreferrer noopener" aria-label="Swift UI with Jason Anderson (opens in a new tab)" href="https://www.empowerapps.show/19" target="_blank">WWDC 2019 - Swift UI with Jason Anderson</a></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://twitter.com/_jasonranderson" target="_blank" rel="noreferrer noopener" aria-label="Jason Anderson (opens in a new tab)">Jason Anderson</a> has been working with reactive frameworks in iOS for 10 years. He brings some really great advice on getting started with Swift UI and the MVVM pattern.</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>In this episode we talk with Jason Anderson about Swift UI and reactive Swift post-WWDC 2019.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:html -->
<iframe src='https://share.transistor.fm/e/03051561' width='100%' height='180' frameborder='0' scrolling='no' seamless='true' style='width:100%; height:180px;'></iframe>
<!-- /wp:html -->

<!-- wp:heading -->
<h2><a rel="noreferrer noopener" aria-label="Mac Development with Daniel Jalkut (opens in a new tab)" href="https://www.empowerapps.show/20" target="_blank">WWDC 2019 - Mac Development with Daniel Jalkut</a></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a rel="noreferrer noopener" aria-label="Daniel Jalkut (opens in a new tab)" href="https://twitter.com/danielpunkass" target="_blank">Daniel Jalkut</a> of <a rel="noreferrer noopener" aria-label="Red Sweater (opens in a new tab)" href="https://red-sweater.com/" target="_blank">Red Sweater</a> and <a href="https://coreint.org/" target="_blank" rel="noreferrer noopener" aria-label="Core Intuition (opens in a new tab)">Core Intuition</a> has been developing software for the Mac for over 20 years. If you are interested in learning how Mac development has changed whether it’s the App Store or the security features added, this is great episode.</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>In this episode we talk with Daniel Jalkut of Red Sweater Software about what’s new in Mac Development post-WWDC 2019.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:html -->
<iframe src='https://share.transistor.fm/e/4f8b37d3' width='100%' height='180' frameborder='0' scrolling='no' seamless='true' style='width:100%; height:180px;'></iframe>
<!-- /wp:html -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p><a href="https://www.empowerapps.show/subscribe" target="_blank" rel="noreferrer noopener" aria-label="Subscribe to the podcast today to stay up to date. (opens in a new tab)">Subscribe to the podcast today to stay up to date.</a></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>650</wp:post_id>
		<wp:post_date><![CDATA[2019-09-11 11:42:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-11 15:42:25]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-11 11:42:26]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-11 15:42:26]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[wwdc-2019-roundup-podcast-episode]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[WWDC]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[WWDC 2019 was a major year with Catalyst, Apple Watch, iCloud and of course SwiftUI. Therefore, I did three episodes highlighting the biggest advances.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[54]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[631]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-650]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Independent Watch App and HealthKit]]></title>
		<link>https://learningswift.brightdigit.com/independent-watch-app-healthkit-permissions/</link>
		<pubDate>Tue, 17 Sep 2019 18:45:57 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=665</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>In the development of my latest app which is an Independent Watch App that uses <a rel="noreferrer noopener" aria-label="HealthKit (opens in a new tab)" href="https://learningswift.brightdigit.com/healthkit-getting-started/" target="_blank">HealthKit</a>, I ran into an issue with App Store Connect.  <strong>App Store Connect will complain about missing </strong><em><strong>Purpose Strings</strong></em><strong>, that is the messages display to the user when access permission is asked for health information.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p><strong>ITMS-90683: Missing Purpose String in Info.plist</strong>&nbsp;- Your app's code references one or more APIs that access sensitive user data. The app's Info.plist file should contain a NSHealthShareUsageDescription key with a user-facing purpose string explaining clearly and completely why your app needs the data. Starting Spring 2019, all apps submitted to the App Store that access user data are required to include a purpose string. If you're using external libraries or SDKs, they may reference APIs that require a purpose string. While your app might not use these APIs, a purpose string is still required. You can contact the developer of the library or SDK and request they release a version of their code that doesn't contain the APIs. Learn more (<a rel="noreferrer noopener" href="https://developer.apple.com/documentation/uikit/core_app/protecting_the_user_s_privacy" target="_blank">https://developer.apple.com/d<br>ocumentation/uikit/core_app/protecting_the_user_s_privacy</a>).</p><p><br><strong>ITMS-90683: Missing Purpose String in Info.plist</strong>&nbsp;- Your app's code references one or more APIs that access sensitive user data. The app's Info.plist file should contain a NSHealthUpdateUsageDescriptio<br>n key with a user-facing purpose string explaining clearly and completely why your app needs the data. Starting Spring 2019, all apps submitted to the App Store that access user data are required to include a purpose string. If you're using external libraries or SDKs, they may reference APIs that require a purpose string. While your app might not use these APIs, a purpose string is still required. You can contact the developer of the library or SDK and request they release a version of their code that doesn't contain the APIs. Learn more (<a rel="noreferrer noopener" href="https://developer.apple.com/documentation/uikit/core_app/protecting_the_user_s_privacy" target="_blank">https://developer.apple.com/d<br>ocumentation/uikit/core_app/protecting_the_user_s_privacy</a>).</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>This is regardless of whether the Property List in the Watch App Extension includes these properties. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The Resolution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To resolve this issue, create a new <em>Property List </em><strong>with no target set</strong> in your project at the root:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":667} -->
<figure class="wp-block-image"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-17-at-2.25.49-PM.png" alt="" class="wp-image-667"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Inside that <em>Property List</em> add (or copy) the required <em>HealthKit Property Strings </em>to your new <em>Property List</em> file.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":668} -->
<figure class="wp-block-image"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-17-at-2.27.48-PM.png" alt="" class="wp-image-668"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>In short, these properties should be the only required properties in your file. Lastly, set this <em>Property List</em>  file as the property list file of your app container target:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Click on the Project File in the Navigator on the right.</li><li>Select the <em>App Container</em> target. <br><em>This should be obvious since the target does not come with a Property List file on initial creation in Xcode. </em></li><li>Go to the <strong>Build Setting</strong> tab on the top.</li><li>Search for <strong>Info.plist File</strong></li><li>In the field value enter the name of the newly created Info.plist file with your HealthKit Privacy strings set.</li></ol>
<!-- /wp:list -->

<!-- wp:image {"id":669} -->
<figure class="wp-block-image"><img src="https://i1.wp.com/learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-17-at-2.32.21-PM.png?fit=640%2C325&amp;ssl=1" alt="" class="wp-image-669"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Now go ahead and archive and distribute your app to App Store Connect from the organizer as usual. App Store should be happy moving forward.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>In Summary...</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>App Store Connect requires both your Apple Watch App Extension and your App Watch App Container to contain an Info.plist file with NSHealthUpdateUsageDescription and NSHealthShareUsageDescription strings set.</li><li>To fix this, create a new Info.plist file with those settings set for your App Container. </li><li>The new Info.plist is not to be included in your App Container but rather set as your App Container's Info.plist file in Build Settings.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Perhaps this will be fixed in the Independent Apple Watch App template in the future or in App Store Connect but for now you can easily publish your Independent Watch App to the TestFlight and the App Store.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>665</wp:post_id>
		<wp:post_date><![CDATA[2019-09-17 14:45:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-17 18:45:57]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-03-14 08:51:03]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-03-14 12:51:03]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[independent-watch-app-healthkit-permissions]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="watch"><![CDATA[Apple Watch]]></category>
		<category domain="post_tag" nicename="apple-watch"><![CDATA[apple-watch]]></category>
		<category domain="category" nicename="healthkit"><![CDATA[HealthKit]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Independent Watch App]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[75]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[In the development of my latest app which is an Independent Watch App and uses HealthKit, I ran into an issue with App Store Connect.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[672]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[independent-watch-app-and-healthkit]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-665]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Asynchronous Multi-Threaded Parallel World of Swift]]></title>
		<link>https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/</link>
		<pubDate>Wed, 25 Sep 2019 14:00:00 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=678</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Over the last 15 years, CPU clock rate has plateaued due to thermal limitations in processors. As a result, CPU manufactures have instead chosen to add more cores or processing units. <strong>Therefore nearly every device has multiple cores: from a Mac Pro to the Apple Watch. </strong>For this reason, Swift developers should take advantage of asynchronous methods.</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:core-embed/youtube {"url":"https://www.youtube.com/watch?v=GyrJYWOGXY0","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=GyrJYWOGXY0
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:image {"align":"center","id":691} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/GraphOfCPUSpeed.001-e1569273003542-1024x657.jpg" alt="Graph of CPU Speed from 1970 to 2020" class="wp-image-691"/><figcaption>Graph of CPU Speed from 1970 to 2020</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>That is to say, with asynchronous methods, <strong>we can design applications which take advantage of multiple cores and deliver a better user experience.</strong> Therefore, let’s discuss:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a href="#concepts">Understanding Parallelism, Concurrency, and Asynchronous</a></li><li><a href="#operating-systems">How Operating Systems Breakdown Operations</a></li><li><a href="#asynchronous-current">Situations Swift Developers Run Into</a></li><li><a href="#original-apis">Discrete APIs</a></li><li><a href="#queue-apis">Working with Queues</a></li><li><a href="#promise-future">Dealing with Promises and Futures</a></li><li><a href="#combine">Subscribers and Publishers with Combine</a></li><li><a href="#coroutines">The Future with Coroutines</a></li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="understanding-concepts">Understanding Concepts</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>First, we need to understand how operating systems handle tasks and how they can schedule them efficiently. As an example, lets look at the two independent operations. In this case, we have a pink one which is processing image A and a blue one which is processing image B. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Concurrency and Parallelism</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>When these operations are scheduled by the operating system, they can be run <em>concurrently</em>. <strong>Concurrency</strong> means that the operation can be partitioned and run at the same time on the same processor. </p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":681,"width":1024,"height":768} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/ParallelConcurrency.001-1024x768.jpeg" alt="The Difference Between Concurrency and Paralellism" class="wp-image-681" width="1024" height="768"/><figcaption>The Difference Between Concurrency and Paralellism</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>In addition, when the operating system has access to multiple processing units or cores, it can also run the operations in <strong>parallel</strong>. To put it differently both operations can be run on separate processing units. In essence, <strong>Parallelism</strong> differs from <strong>concurrency</strong> in that <strong>concurrency</strong> partitions each operation in order to continue different operations. Therefore, <strong>concurrency</strong> can be applied to a single processing unit. Conversely, <strong>Parallelism</strong> can only be applied to multiple processing units. Moreover, <strong>concurrency</strong> and <strong>parallelism</strong> can be applied at the same time by the operating system. Most importantly for developers is to make our operations <strong>asynchronous</strong>, in order to allow for <strong>concurrency</strong> and <strong>parallelism.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":682,"width":480,"height":360} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/The-Multi-Threaded-Asynchronous-Parallel-World-of-Swift-360iDev-copy.gif" alt="Replacing A Single Synchronous Operation with an Asynchronous Operation" class="wp-image-682" width="480" height="360"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3>Asynchronous Operations</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There are long operations, such as network requests, which are not well suited for standard synchronous operations. That is to say, by programming these calls synchronously, it will lock up other active operations such as user interface updates. Therefore making these calls asynchronous allows for other operations to be run concurrently. Specifically this is done in Swift, by including a completion closure or code block as a parameter. To put it differently, when the operation is completed that closure is executed on completion with a result passed.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For instance rather than actively waiting for a download to complete, the API allows the developer to pass what code they want the application to run when the operation is completed. Notably, this allows the operating system to schedule other operations in meantime like updating your UI. With this in mind, let’s take a look at the several ways Swift developers already run into this.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="asynchronous-current">Where do we run into asynchronous operations?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Swift developers are already taking advantage of concurrency with asynchronous functions in their applications. Primary there are three APIs we commonly see:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Network Requests </li><li>NotificationCenter</li><li>Timers</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>Network Requests and URLSession</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Network requests are the most frequent example where asynchronous calls make the most sense. While the developer can call a <code>Data</code> constructor to pull contents from a url, Apple already provides an asynchronous method to do this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let url = URL(string: 
 "https://jaspervdj.be/lorem-markdownum/markdown.txt")!
URLSession.shared.dataTask(with: url) { 
 (data, response, error) in
  ...
}.resume()
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this example, a <code>URLSessionDataTask</code> is created with a callback which takes in the binary <code>Data</code>, the <code>URLResponse</code>, and possible <code>Error</code>. The API will handle the buffering of data and calculating when the request is complete. Additionally it will do it as a separate operation. As a result, the operating system can run other operations concurrently. Likewise <code>NotificationCenter</code> does this as well. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>NotificationCenter</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>URLSession.shared.dataTask(with: url) { (data, response, error) in
  NotificationCenter.default.post(name: notificationDownloaded, object: nil)
}.resume()

NotificationCenter.default.addObserver(forName: notificationDownloaded, object: nil, queue: .main) { (notification) in
  print("Notification Sent")
  PlaygroundPage.current.finishExecution()
}

PlaygroundPage.current.needsIndefiniteExecution = true
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this example, when the download is complete, the application posts a notification to <code>NotificationCenter</code>. Additionally, theres an observer for the notification. Therefore, once the notification is received the Playground prints a message and finishes.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Timers</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The application can take this further by adding a <code>Timer</code>, another asynchronous operation. <code>Timer</code> allows developers to delay or periodically repeat an operation. Once again, the API takes advantage of concurrency rather than locking up the application. </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>NotificationCenter.default.addObserver(forName: notificationDownloaded, object: nil, queue: .main) { (notification) in
  print("Notification Received")
  Timer.scheduledTimer(withTimeInterval: 1.0, repeats: false) { _ in
    print("Timer Activated")
    PlaygroundPage.current.finishExecution()
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this example, the code doesn't print the message as before. Rather, a <code>Timer</code> is initialized with a 1 second delay. Therefore when the time approaches, the Playground prints the message and completes.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Although these asynchronous abstraction offer a convenient way to optimize your applications, there are problems which do come up. Primarily on iOS, the developer isn't able to prioritize each operation. As a result, this is most noticeable is when the developer attempts to update the user interface.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Asynchronous UI Updating with the Main Queue</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>One of the first lessons, developers learn when developing for the iPhone or iPad is necessity to make user interface updates on the main thread or <code>DispatchQueue</code>. Whether it’s simply updating a <code>UILabel</code> or a <code>UITableViewCell</code>, the UI update needs to be on the main <code>DispatchQueue</code>. Therefore, the operation needs to <em>hop</em> to another queue in order to complete the update to the user interface.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let timerSource = DispatchSource.makeTimerSource(flags: &#91;], queue: .global())
timerSource.setEventHandler {
  DispatchQueue.main.async {
    viewController.label.text = "Timer Activated"
  }
}
timerSource.schedule(deadline: .now() + 1.0)

NotificationCenter.default.addObserver(forName: notificationDownloaded, object: nil, queue: .main) { (notification) in
  print("Notification Received")
  timerSource.activate()
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this example, <code>DispatchSourceTimer</code> is created.   <code>DispatchSourceTimer</code> is similar to <code>Timer</code>,  however the developer has more control over the priority and the queue. As with the previous <code>Timer</code>, when the <code>Notification</code> is observed, the <code>Timer</code> is started with a 1 second delay. However since the <code>DispatchSourceTimer</code> is designated for using the <code>global</code> queue, it is nessecary to <em>hop</em> to the <code>main</code> <code>DispatchQueue</code> and update a <code>UILabel</code> with the text <em>Timer Activated</em>. Consequently if this is not done, the user interface will not update correctly. Before I explain further how <code>DispatchQueue</code> and <em>Grand Central Dispatch</em> works, let’s breakdown how operating systems schedule operations.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":719} -->
<figure class="wp-block-image"><img src="https://i1.wp.com/learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-24-at-2.04.19-PM.png?fit=640%2C438&amp;ssl=1" alt="An example of the top command view of processes and threads" class="wp-image-719"/><figcaption>An example of the <em>top</em> command view of processes and threads</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2 id="operating-systems">How Operating Systems Handle Operations</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Operating System have two level of controlling operations: Processes and Threads. A process is a running instance of an application such as this running instance of <em>Activity Monitor </em>listing out actual processes<em>:</em></p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":688} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://i0.wp.com/learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/Screen-Shot-2019-09-23-at-5.30.47-PM.png?fit=640%2C414&amp;ssl=1" alt="List of Processes Running In Activity Monitor" class="wp-image-688"/><figcaption>List of Processes Running In Activity Monitor</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Moreover, a developer can breakdown a process into <strong>threads</strong>. A <strong>thread </strong>is a small sequence of instructions within a process which the operating system can schedule individually. In other words, a developer can breakdown a running application into parts which give the operating system more leeway in scheduling tasks. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Therefore, let's discuss the various ways developers can organize individuals  operations in Swift. Firstly let's discuss the most direct control of threads and processes and slowly evolve into the more abstract and easy to manage.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":720} -->
<figure class="wp-block-image"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/493303884_5c71fbcefb_o.jpg" alt="" class="wp-image-720"/><figcaption>Original Mac <br>(courtesy of <a rel="noreferrer noopener" aria-label="https://www.flickr.com/photos/befuddledsenses/493303884 (opens in a new tab)" href="https://www.flickr.com/photos/befuddledsenses/493303884" target="_blank">https://www.flickr.com/photos/befuddledsenses/493303884</a>)</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3 id="original-apis">Original Apple APIs</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Over the years, Apple has evolved its API for giving developers control over their operations and their scheduling. At first, the API was pretty basic and direct but has become increasing developer-friendly and given more control to the operating system as to how to manage it. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Thread Class</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Although this may be true, let's start by at least touching upon that most direct API: <strong><a rel="noreferrer noopener" aria-label="Thread (opens in a new tab)" href="https://developer.apple.com/documentation/foundation/thread" target="_blank">Thread</a></strong> (or NSThread in Objective-C). The Thread class gives the developer direct access to creating actual threads. Their are two ways to do this: pass in a closure to the initializer or subclass and override the <em>main</em> method. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Although this API is available, I would recommend against using it unless you absolutely have to. As you'll see, there are better abstractions which give better control to the operating system and are easy to maintain for the developer. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Process Class (for macOS only)</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>However there are occasions on the Mac, where you need to run a command or external application. In that case it's best to use <a rel="noreferrer noopener" aria-label="the Process class (opens in a new tab)" href="https://developer.apple.com/documentation/foundation/process" target="_blank">the </a><strong><a rel="noreferrer noopener" aria-label="the Process class (opens in a new tab)" href="https://developer.apple.com/documentation/foundation/process" target="_blank">Process </a></strong><a rel="noreferrer noopener" aria-label="the Process class (opens in a new tab)" href="https://developer.apple.com/documentation/foundation/process" target="_blank">class</a> (or NSTask in Objective-C). With the Process class, you provide a url to the executable and run:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let process = Process()
process.executableURL = URL(fileURLWithPath: "/bin/ls")
process.terminationHandler = {
  _ in
  PlaygroundPage.current.finishExecution()
}

try process.run()</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>While directly creating threads takes control away from the API and operating system, I think this is perfectly reasonable. In instances where a piece of functionality is already available on macOS running another outside process makes sense. As with many operations, it is important to make sure it does not interfere with the user experience. While there's the function <code>waitUnitExit</code> in order which provides a synchronous result from the operation, using the property <code>terminationHandler</code>, allows for asynchronous callback. That is to stay, using <code>terminationHandler</code> allows the application to do other operation as it waits for that process to finish.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/1o77vgbvkxq.jpg" alt="An example of people in a queue"/><figcaption>Queues</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3 id="queue-apis">Working with Queues and Asynchronous Operations</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While the Process and Thread class gives developers direct control, Apple has introduced more abstract ways of dealing with operations. At the top of those abstraction is the all important <strong>Grand Central Dispatch.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Grand Central Dispatch</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Grand Central Dispatch is by far the most used API for dealing with parallelism and concurrency through asynchronous operations. Specially, the most important class in that API is the <strong>DispatchQueue</strong> class. DispatchQueue allows for the developer to control the scheduling of operations. Additionally, the developer can guide some more abstract aspects regarding how the operating system organizes the operations.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For instance, if we were to count from 0 to 1000 within a Playground in two different DispatchQueues: the high-priority main queue and the lower-priority global queue, the code would look like this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>PlaygroundPage.current.needsIndefiniteExecution = true

DispatchQueue.global().async {
  var value = 0
  repeat {
    print("glob", value)
    value += 1
  } while(value &lt; 1000)
}

DispatchQueue.main.async {
  var value = 0
  repeat {
    print("main", value)
    value += 1
  } while(value &lt; 1000)
  PlaygroundPage.current.finishExecution()
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>By doing this, we would see the counting for each queue interleaved with each other: </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...
main 947
glob 814
glob 815
main 948
glob 816
main 949
glob 817
main 950
glob 818
main 951
glob 819
main 952
main 953
...</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In the example above the developer can control the priority or queue of the code block, however there are more ways we can control the DispatchQueue through the use of flags, quality of service and attributes:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let barrierQ = DispatchQueue(label: "barrier", qos: .default, attributes: .concurrent)
…
barrierQ.async{
  markdownFiles.append(text)
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As we can see, we've created our own DispatchQueue and noted that it is <em>concurrent</em>. In other words, while the each operation we add is run in order, the following operation will not wait for the previous operation to complete. What must be remembered is that running multiple operations concurrently can result in what's called a<strong> Race Condition</strong>. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>Dealing with Race Conditions in GCD</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A Race Condition is where multiple operations are dependent on a single changeable object or variable resulting in the possibility in an error. For instance here's an example of a Race Condition issue using the Thread class API:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>func increaseTo(_ max: Int) {
  var next:Int
  repeat {
    next = (items.last ?? 0) + 1
    Thread.sleep(forTimeInterval: 0.1)
    items.append(next)
  }
  while (next &lt;= max)
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As a result of running this in two separate threads, we could get something like this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>1
2
3
4
5
6
7
8
9
10
10 // 😱 Oh No! 😱 
11 // 😢
11 // 😭</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Luckily Grand Central Dispatch provides two ways of resolving this through barriers: semaphores and flags.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":6} -->
<h6>Semaphores in GCD</h6>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p> A great use of the DispatchSemaphore is in the Thread example:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let semaphore = DispatchSemaphore(value: 1)

func increaseTo(_ max: Int) {
  var next:Int
  repeat {
    semaphore.wait()
    next = (items.last ?? 0) + 1
    Thread.sleep(forTimeInterval: 0.1)
    items.append(next)
    semaphore.signal()
  }
  while (next &lt;= max)
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this example, we are more or less locking down the reading and writing to the array so it only can be executing by one thread at a time. In other words, the operation between <code>.wait()</code> and <code>.signal()</code> is executing <em>atomically</em>. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":6} -->
<h6>Barriers using DispatchWorkItemFlags</h6>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In contrast, with a DispatchQueue, we can provide a flag to ensure the <code>markdownFiles</code> is accessed <em>atomically</em>, we can use the <code>.barrier</code> flag:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let barrierQ = DispatchQueue(label: "barrier", qos: .default, attributes: .concurrent)
…
barrierQ.async(group: nil, qos: .default, flags: .barrier) {
  markdownFiles.append(text)
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":5} -->
<h5>Organizing Multiple Operations with DispatchGroup</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Besides DispatchQueue another great use of Grand Central Dispatch is <strong>DispatchGroup</strong>. For instance, if you have multiple asynchronous operations which are not dependent on each other such multiple url calls, DispatchGroup is perfect. DispatchGroup allows the developer to track their asynchronous completion as a whole:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let group = DispatchGroup()
let count = 20
var markdownFiles = &#91;String](repeating: "", count: count)

for index in (0..&lt;count) {
  group.enter()
  DispatchQueue.global(qos: .background)
  .async {
    markdownFiles&#91;index] = 
      try! String(contentsOf: url)
    group.leave()
    print(index)
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In the example above, we create a DispatchGroup. Next, the code asynchronously downloads 20 markdown files and sets the result in the array. Markedly, each time <code>group.enter()</code> is called when the process starts and <code>group.leave()</code> is called to note that particular operation is completed. Lastly, the developer can call either <code><a rel="noreferrer noopener" aria-label="notify (opens in a new tab)" href="https://developer.apple.com/documentation/dispatch/dispatchgroup/2016084-notify" target="_blank">notify</a></code> or <code><a rel="noreferrer noopener" aria-label="wait (opens in a new tab)" href="https://developer.apple.com/documentation/dispatch/dispatchgroup/1780590-wait" target="_blank">wait</a></code> on the DispatchGroup depending on whether to wait asynchronously or synchronously.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>One of the more complex natures of multiple asynchronous operations is organizing dependencies. Therefore let's discuss the next level of abstraction which specialized in dependencies -  OperationQueues.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Operation Queues</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>An older yet more abstract API for dealing with multiple Operations is the OperationQueue (or NSOperationQueue in Objective-C). A preferred method for dealing with operations, OperationQueues are fairly to simple to get started:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let operation = BlockOperation {
  for index in 1...100 {
    print(index)
  }
}
OperationQueue.main.addOperation(operation)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this example, we simply add a BlockOperation to the main queue and it will automatically start printing out 1 to 100. Most importantly, its with dependencies where OperationQueue shows their potential:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let operation = BlockOperation {
  for index in 1...100 {
    print(index)
  }
}
let anotherOperation = BlockOperation {
  for index in 101...200 {
    print(index)
  }
}
anotherOperation.addDependency(operation)
OperationQueue.main.addOperation(anotherOperation)
OperationQueue.main.addOperation(operation)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In the above example, we add a dependency of one operation (0...100) to another (101...200) to ensure that the counting is in the correct order. As a result, regardless of the order of how the operations are added, dependent operation is executed first. For this reason, the developer can add operations in whatever fashion as long as their dependencies are setup beforehand.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>Problems with OperationQueue</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While dependency management is easier with OperationQueues, there a couple of issues which showcase it's dated Objective-C outlook. Firstly, there is no native method for doing asynchronous operations in the Operation (or BlockOperation) class. In other words, the developer must subclass the Operation and optimize the code for asynchronous operations or convert the underlying method to an synchronous method. Secondly, there is no native way to deal with results or errors of each operation. Therefore, the developer must handle the result of each operation outside of the operation.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Instead a more modern and functional method for handling asynchronous methods and their results or errors comes in the form of Promises and Futures.</p>
<!-- /wp:paragraph -->

<!-- wp:block {"ref":744} /-->

<!-- wp:image {"align":"center","id":728} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/zolfyh_ygpw-e1569349209279.jpg" alt="A Rainbow" class="wp-image-728"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3 id="promise-future">Promises and Futures of Better Asynchronous APIs</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While Apple provides some abstractions for asyncronous operations, Swift developer will often run into the dreaded <em>callback hell</em></p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>doThis{
  thenThis{
  andThenThis{
    lastlyThis{
      }
  }
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>This awful mess of code can be difficult to manage especially when catching error and dealing with various logic. As much as closures are superior to Objective-C code blocks, other programming languages such as JavaScript and C# have improved on this with the concept of <em>promises</em> and <em>futures</em>. In short, where a synchronous function returns a value, this abstraction allows for the returning of a <em>promised future</em> value. </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let thatPromise = doThis(...)
let thenThisPromise = thatPromise.then(thenThis)
let andThenThisPromise = thenThisPromise.then(andThenThis)
let lastPromise = andThenThisPromise.then(lastlyThis)
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Therefore, let’s take a look at a couple of Swift libraries: SwiftNIO and Google’s Promise library.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>SwiftNIO - Asynchronous on the Server</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While Swift's largest focus has been on the iPhone, it is important to note that the server is where asynchronous operations often occur. Whether the server is making HTTP calls to the outside or accessing a database, it has to wait for the completion of network requests. Therefore, it’s no wonder that SwiftNIO the backbone of the main server-side frameworks, Kitura and Vapor, employs its own Promise and Future infrastructure. While server-side Swift mostly uses SwiftNIO, Apple devices such as the iPhone can also use the package.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>public func setupSite(_ site: Site, withTheme theme: Theme, _ completed: @escaping (Error?) -> Void)

public func setupSite(_ site: Site, withTheme theme: Theme, using eventLoop: EventLoop) -> EventLoopFuture&lt;Site> {
  let promise = eventLoop.makePromise(of: Site.self)
  eventLoop.execute {
    self.setupSite(site, withTheme: theme) { error in
      if let error = error {
        promise.fail(error)
      } else {
        promise.succeed(site)
      }
    }
  }

  return promise.futureResult
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this example, there is an asynchronous function which sets up a website based on a theme. Namely, this function takes as parameters, the site, the theme, and a closure which takes in an <code>Error</code> if the operation failed. Given that, for the purpose of using Futures, there is a new method which returns SwiftNIO’s <code>Future</code> or <code>EventLoopFuture</code> with the resulting <code>Site</code> object.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Notably, in Swift, some sort of queue, thread, or loop must be specified in order to assign where the operation will be executed. Likewise, SwiftNIO uses the <code>EventLoop</code> to designate where the operation will be executed. Therefore, from the <code>EventLoop</code>, an <code>EventLoopPromise</code>  is created. Next, from the <code>EventLoop</code> a closure is passed where the original asynconous <code>setupSite</code> function is called. From inside the closure, a success or failure state on the promise is set using <code>.fail</code> and <code>.succeed</code>. Lastly, the promise has a property which contains the <em>future</em> using <code>.futureResult</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let future = setupSite(site, withTheme: theme, using: eventLoop)
future.whenComplete {
  ...
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In most cases, the <code>EventLoop</code> is accessed from originating <code>HTTPRequest</code> or <code>Application</code>.  In any case, to call our <code>Future</code> returning function and do something with the value, <code>whenComplete</code> to set the callback on the resulting operation. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>Functional Programming in SwiftNIO</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The other advantage of <em>promises</em> and <em>futures</em>, is being able to apply functional programming concepts to <em>future</em> results.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let futureSite = setupSite(site, withTheme: theme, using: eventLoop)
// returns a Future&lt;String>
let futureString = futureSite.map{
  $0.name
}

// flatMap "flattens" the Future&lt;Future&lt;String>> to just
// Future&lt;String>
let futureHTML = futureSite.flatMap{
  // return Future&lt;String>
   promise(fromAsyncLoadingSite: $0)
}

let sites: &#91;Future&lt;Site>]
// flatten "flattens" &#91;Future&lt;String>] to Future&lt;&#91;String]>
let siteNamesFuture = sites.map{ site in site.map{ 
  $0.name   
}.flatten(using: eventLoop)

let nameAndHTML : Future&lt;(String, String)> = futureString.and(futureHTML)
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Therefore, with SwiftNIO:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><code>.map</code><br><ul>
      <li>converts <code>Future&lt;A&gt;</code> to <code>Future&lt;B&gt;</code> by</li>
      <li>taking in a closure of type: <code>(A) -&gt; (B)</code></li>
    </ul></li><li><code>.flatMap</code><br><ul>
      <li>converts <code>Future&lt;A&gt;</code> to <code>Future&lt;B&gt;</code> by</li>
      <li>taking in a closure of type: <code>(A) -&gt; (Future&lt;B&gt;)</code></li>
    </ul></li><li><code>.flatten</code><br><ul>
      <li>converts <code>[Future&lt;A&gt;]</code> to <code>Future&lt;[A]&gt;</code> by</li>
      <li>taking in an <code>EventLoop</code></li>
    </ul></li><li><code>.and</code><br><ul>
      <li>on <code>Future&lt;A&gt;</code> and takes in a <code>Future&lt;B&gt;</code> <strong>or</strong> <code>B</code></li>
      <li>returns a <code>Future</code> tuple of type <code>Future&lt;(A,B)&gt;</code></li>
    </ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Unfortunately since network operation and server-side communication are at the center of SwiftNIO, the only way currently to create an <code>EventLoop</code> on iOS is by using a <code>MultithreadedEventLoopGroup</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let pool = MultiThreadedEventLoopGroup(numberOfThreads: 5)
let eventLoop = pool.next()</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>However, a better library to implement <em>promises</em> on iOS (and other client devices) is Google’s own <em>Promise</em> framework.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4><a rel="noreferrer noopener" aria-label="Google Promise (opens in a new tab)" href="https://github.com/google/promises" target="_blank">Google Promises</a> - Asynchronous on the Client</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While Apple makes SwiftNIO and it contains a great implementation of <em>Futures</em> and <em>Promises</em>, it is focuses on server-side and networking related implementation. However, on the client, Google Promises might be amongst the best <em>Promise</em> APIs for Swift. </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>public func setupSite(_ site: Site, 
  withTheme theme: Theme, 
  on queue: DispatchQueue = .main) -> Promise&lt;Site> {
  return Promise&lt;Site>(on: queue) { success, failure in
    self.setupSite(site, withTheme: theme) { error in
      if let error = error {
        failure(error)
      } else {
        success(site)
      }
    }
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>While SwiftNIO required the proprietary <code>EventLoop</code>, <strong>Google Promises</strong> requires the familiar <code>DispatchQueue</code>.  Therefore to create a  <code>Promise</code> oriented version of <code>setupSite</code>, the function needs a <code>DispatchQueue</code> parameter and needs to return a <code>Promise</code> on that <code>DispatchQueue</code> with a closure that calls either <code>success</code> or <code>failure</code> depending on the result. Therefore to call the method, the code needs to pass a <code>DispatchQueue</code> and on the <code>Promise</code> call <code>.then</code> to use the result. </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let futureSite = setupSite(site, withTheme: theme, on: .main)
// returns a Promise&lt;String>
let futureString = futureSite.then{
  $0.name
}

// returns a Promise&lt;String>
let futureHTML = futureSite.then{
  // return Promise&lt;String>
   promise(fromAsyncLoadingSite: $0)
}

let sites: &#91;Promise&lt;Site>]
// `all` "flattens" &#91;Promise&lt;String>] to Future&lt;&#91;Promise]>
let siteNamesFuture = all(sites.then{ site in
  site.map{ 
    $0.name   
  }
)

let nameAndHTML : Promise&lt;(String, String)> = all(futureString, futureHTML)</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":5} -->
<h5>Functional Programming in Google Promise</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Additonally while SwiftNIO differentiated <code>.map</code>, <code>.flatMap</code>, and <code>.whenComplete</code>, <strong>Google Promise</strong> simplifies it into <code>.then</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><code>.then</code><ul><li>converts <code>Promise&lt;A&gt;</code> to <code>Promise&lt;B&gt;</code> by</li><li>taking in a closure of type: <ul><li><code>(A) -&gt; (B)</code> or</li><li><code>(A) -&gt; (Promise&lt;B&gt;)</code></li></ul></li></ul></li><li><code>all</code><ul><li>converts <code>[Promise&lt;A&gt;]</code> to <code>Promise&lt;[A]&gt;</code>  or</li><li>converts <code>(Promise&lt;A&gt;, Promise&lt;B&gt;, …)</code> into <code>Promise&lt;(A,B,…)&gt;</code></li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Additionally, Google Promises also has a specific method for dealing with Error or failure states:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><code>.catch</code><ul><li>a <code>Void</code> method which takes a closure of type: <code>(Error) -&gt; Void</code></li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>As a result to fulfill a <code>Promise</code>, use either <code>then</code> and <code>catch</code> or <code>fulfill</code> and <code>reject</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let future = setupSite(site, withTheme: theme, on: .main)
future.fulfill {
  // on success
  ...
}.reject{
  // on error
  …
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4><a href="https://github.com/mxcl/PromiseKit" target="_blank" rel="noreferrer noopener">PromiseKit</a> - Popular Alternative</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The most popular alternative for Swift and Objective-C is PromiseKit by Max Howell. PromiseKit uses a more English-like syntax then the previous examples. </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>public func setupSite(_ site: Site, 
  withTheme theme: Theme) -> Promise&lt;Site> {
  return Promise&lt;Site>{ resolver in
    self.setupSite(site, withTheme: theme) { error in
      if let error = error {
        resolver.reject(error)
      } else {
        resolver.fulfill(success)
      }
    }
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>While you can specify the <code>DispatchQueue</code>, with PromiseKit <a href="https://github.com/mxcl/PromiseKit/blob/master/Documentation/FAQ.md#how-do-i-change-the-default-queues-that-handlers-run-on" target="_blank" rel="noreferrer noopener">it's typically not necessary</a>. Promises use a <code>Resolver</code> which has methods which can take variety of combinations for success or failure including a Result object. Similar to Google Promises, you can call <code>.then</code> to make another asynchronous call or <code>.map</code> for a synchronous mapping.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let futureSite = setupSite(site, withTheme: theme)
// returns a Promise&lt;String>
let futureString = futureSite.map{
  $0.name
}

// returns a Promise&lt;String>
let futureHTML = futureSite.then{
  // return Promise&lt;String>
   promise(fromAsyncLoadingSite: $0)
}

let sites: &#91;Promise&lt;Site>]
// `all` "flattens" &#91;Promise&lt;String>] to Future&lt;&#91;Promise]>
let siteNamesFuture = when(sites.map{ site in
  site.map{ 
    $0.name   
  }
)

let nameAndHTML : Promise&lt;(String, String)> = when(futureString, futureHTML)</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":5} -->
<h5>Functional Programming in PromiseKit</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Similar to SwiftNIO, PromiseKit differentiates between synchronous and asynchronous mappings:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><code>.map</code><ul><li>converts <code>Promise&lt;A&gt;</code> to <code>Promise&lt;B&gt;</code> by</li><li>taking in a closure of type: <code>(A) -&gt; (B)</code></li></ul></li><li><code>.then</code><ul><li>converts <code>Promise&lt;A&gt;</code> to <code>Promise&lt;B&gt;</code> by</li><li>taking in a closure of type: <code>(A) -&gt; (Promise&lt;B&gt;)</code></li></ul></li><li><code>when</code><ul><li>converts <code>[Promise&lt;A&gt;]</code> to <code>Promise&lt;[A]&gt;</code> or</li><li>converts <code>(Promise&lt;A&gt;, Promise&lt;B&gt;, …)</code> into <code>Promise&lt;(A,B,…)&gt;</code></li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Additionally, similar to Google Promises, PromiseKit has two ways of handling errors:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><code>.catch</code><ul><li>a <code>Void</code> method which takes a closure of type: <code>(Error) -&gt; Void</code></li></ul></li><li><code>.recover</code><ul><li>a <code>Promise&lt;T&gt;</code> method which takes a closure of type: <code>(Error) -&gt; Promise&lt;T&gt;</code></li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>As a result to fulfill a <code>Promise</code>, use <code>done</code> and <code>catch</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let future = setupSite(site, withTheme: theme)
future.done {
  // on success
  ...
}.catch{
  // on error
  …
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>However while <em>Promises</em> and <em>Future</em> are certainly a better way to avoid <em>callback hell</em>, there are recent updates which emphasis the important of user interface responsive. That is to say rather functional emphasis on optimal operations, this emphasizes the reactive nature of UI development: <strong>Combine</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="combine">Combine-ing It All Together</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>With <strong>SwiftUI</strong>, Apple has snuck in a whole other framework for managing asynchronous tasks: <strong>Combine</strong>. With <strong>Combine</strong>, Apple is introducing an asynchronous model more reflecting the Subscriber-Publisher model used in reactive programming.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Reactive UI Focused Asynchronous Operations</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While Promises and Futures handle how to deal with the results of asynchronous operations, Combine focuses on reacting to multiple changes in multiple locations. For instance, a Publisher issues changes to data and a Subscriber listens to the those changes. Therefore SwiftUI becomes the ideal use case for using Combine with data changes. For instance, if we have a SwiftUI View which displays the header from a downloaded markdown file:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>struct ContentView: View {
  @ObservedObject var nameObject: ContentObject
  
  var body: some View {
    Text(nameObject.name)
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this case, this SwiftUI View contains a ObservedObject with a name property, which is the name or header of the ContentObject. Therefore, let’s take a look at the content object:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class ContentObject: ObservableObject {
  let publisher : AnyPublisher&lt;String, Never>
  var cancellable : AnyCancellable!
  @Published var name : String = "" {
    willSet {
      objectWillChange.send()
    }
  }
  
  static fileprivate func markdownTitlePublisher(fromURL url: URL) -> AnyPublisher&lt;String, Never> { … }
  
  init () {
    self.publisher = ContentObject.markdownTitlePublisher(fromURL: ContentObject.url)
    self.cancellable = self.publisher.receive(on: DispatchQueue.main).sink{ self.name = $0 }
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this instance, there is an initializer which creates the publisher for the markdown file’s <code>h1</code> name .  Inside the initializer, we create a publisher for the name, followed by setting up the assignment of the result to the name property. Firstly, it creates the publisher. Next, similar to before with UIKit updates, the code tells the publisher that it must receive the changes on the main DispatchQueue.  Lastly, it tells the publisher to assign the value to the name property on self. With the initializer, the code has setup the publisher for the <code>name</code> of the content, a cancellable for the publisher assignment, and the <code>@Published</code> property of the name.  Therefore, let’s breakdown how the publisher is created in <code>ContentObject.markdownTitlePublisher(forURL:)</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>static fileprivate func markdownTitlePublisher(fromURL url: URL) -> AnyPublisher&lt;String, Never> {
  return URLSession.shared.dataTaskPublisher(for: url).tryMap { (arg: URLSession.DataTaskPublisher.Output) throws -> String  in
    let (data, _) = arg
    let text = String(data: data, encoding: .utf8)
    guard let value = text?.components(separatedBy: .newlines).first else {
      throw InvalidTextError()
    }
    return value
  }.catch({ (error) in
    return Just(nil)
  }).compactMap{ $0 }.eraseToAnyPublisher()
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":5} -->
<h5>Functional Programming with Combine</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Luckily, Combine provides already built-in methods for publishers for the three main asynchronous APIs, which I talked about previously: NotificationCenter, Timer, and URL tasks. In this case, let’s look at how URL Task publisher transforms to useable String value for the name property:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li><code>tryMap</code> reads the first line of text by decoding the binary <code>data</code> into text and reading the first line.</li><li><code>catch</code>  converts the useless error into nil... <br><strong>For a SwiftUI View to use a publisher, the publisher must always handle the error in order to assign the value.</strong></li><li><code>compactMap</code> removes any nil values from the publisher pipeline</li><li><code>eraseToAnyPublisher</code> uses type erasure to remove the specifics conversions taken place.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Therefore, with all the plumbing in place, SwiftUI and Combine will display the display the first line of the markdown file.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In conclusion, Combine really shows it’s power when it comes to UI updates (not just SwiftUI but UIKit, AppKit, etc…) and any situation where reactive programming makes sense such as when there are multiple publishers and subscribers. However if you are comfortable with Promises and Futures and your code is more simple and straightforward it’s perfectly reasonable to go with that method.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":731} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2019/09/vk284nkoavu-e1569349443454-300x300.jpg" alt="Virtual Reality" class="wp-image-731"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3 id="coroutines">Coroutines - The Future of Asynchronous Operations</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Before closing out, there has been proposals for making Promises and Futures native in Swift along with the syntactic sugar some common in other languages known as <strong>Coroutines</strong>. (Read more about <strong>Coroutines</strong> in <a href="https://gist.github.com/lattner/429b9070918248274f25b714dcfc7619">Chris Latner’s proposal</a>.) Let’s take a look at our earlier example:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let url = URL(string: 
 "https://jaspervdj.be/lorem-markdownum/markdown.txt")!
URLSession.shared.dataTask(with: url) { 
 (data, response, error) in
  …
}.resume()</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this case, a closure is based as a parameter along with a task. However a Promise or Future might look something like this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let url = URL(string: 
 "https://jaspervdj.be/lorem-markdownum/markdown.txt")!
let promise : Future&lt;(Data?, HttpResponse?, Error?)> = URLSession.shared.data(with: url) </code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>With syntactic sugar like <code>async</code> and <code>await</code>, it become even cleaner with:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let url = URL(string: 
 "https://jaspervdj.be/lorem-markdownum/markdown.txt")!
let response = await URLSession.shared.data(with: url) </code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>To declare a method as being asynchronous and wrap a previous method (using a <code>callbackWrap</code> method for now) such as <code>setupSite</code> previously:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>public func setupSite(_ site: Site, withTheme theme: Theme) async throws -> Site {
  return await callbackWrap { continuation in
  self.setupSite(site, withTheme: theme) { error in

      if let error = error {
        continuation(error)
      } else {
        continuation(site)
      }
    }
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>With <code>async</code> and <code>await</code> along with <code>Combine</code>, Swift can really take advantage of asynchronous programming both from the simple Promise/Future mindset as well as the Reactive programming paradigm. </p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {"url":"https://www.youtube.com/watch?v=GyrJYWOGXY0","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=GyrJYWOGXY0
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>What’s the Right Toolset?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In conclusion, developers have some key decisions when it comes to the best way to deal with asynchronous, parallelism, and concurrency:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Take Advantage of Your Hardware - make sure not to lock down the whole device or application with one thread but allow for many actions to take place simultaneously </li><li>Avoid Convoluted Logic in favor of Easy Maintenance - make it easier for the <em>next</em> developer to update your code, don’t over optimize without componentizing</li><li>Provide Fast UI Experience over a Speedier Logic - giving healthy feedback to the user of what’s going on is more important than a faster application - again avoid freezing your app and device</li><li>Use Abstractions As Much As Possible - unless you are into highly processor intense applications - use Apple’s provided abstractions (i.e. Combine, etc..) rather lower-level direct APIs (i.e. Threads)</li><li>Avoid Callback Hell with Promises and Futures - for simple non-UI code use Promises and Futures to organize multiple asynchronous calls as opposed to a pyramid of callbacks</li><li>For UIs on the latest Operating Systems (iOS 13, watchOS 6, tvOS 13, Catalina) use Combine - Combine gives the OS better control of the flow multiple asynchronous operations  using reactive patterns</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Hopefully this article gives you more guidance on how to better manage multiple operations and optimize your application for a better user experience. I am looking forward to even better APIs with Swift in the future.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you have any questions, reply to me on <a href="https://twitter.com/leogdion" target="_blank" rel="noreferrer noopener" aria-label="Twitter @leogdion (opens in a new tab)">Twitter @leogdion</a> and if you want to learn more fill out the form below:</p>
<!-- /wp:paragraph -->

<!-- wp:block {"ref":744} /-->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>678</wp:post_id>
		<wp:post_date><![CDATA[2019-09-25 10:00:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-25 14:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-04-30 16:13:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-04-30 20:13:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[asynchronous-multi-threaded-parallel-world-of-swift]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="combine"><![CDATA[combine]]></category>
		<category domain="post_tag" nicename="gcd"><![CDATA[GCD]]></category>
		<category domain="category" nicename="guides"><![CDATA[Guides]]></category>
		<category domain="post_tag" nicename="promises"><![CDATA[promises]]></category>
		<category domain="post_tag" nicename="swiftui"><![CDATA[swiftui]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[19]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[asynchronous]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[73]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[From the Mac Pro to the Apple Watch developers need to design thier applications to best take advantage of multiple cores in Swift using asynchronous methods.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[707]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-678]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[EmpowerApps.Show &#8211; Upgrading Your Skills in 2020 with Paul Hudson]]></title>
		<link>https://learningswift.brightdigit.com/empowerapps-show-upgrading-your-skills-in-2020-with-paul-hudson/</link>
		<pubDate>Mon, 03 Feb 2020 17:21:28 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=810</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>In this episode, Leo is joined by Paul Hudson of hackingwithswift.com about how to upgrade your skills and your team’s skills in 2020.</p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<figure></figure>
<!-- /wp:html -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>810</wp:post_id>
		<wp:post_date><![CDATA[2020-02-03 12:21:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-02-03 17:21:28]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-07 00:17:56]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-07 05:17:56]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[empowerapps-show-upgrading-your-skills-in-2020-with-paul-hudson]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="empowerapps-show-podcast"><![CDATA[EmpowerApps.Show Podcast]]></category>
		<category domain="post_format" nicename="post-format-video"><![CDATA[Video]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[631]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"37550b67d263a3ce789993dc25046c5f";a:2:{s:7:"expires";i:1580793595;s:7:"payload";a:6:{i:0;a:1:{s:2:"id";i:1873;}i:1;a:1:{s:2:"id";i:1777;}i:2;a:1:{s:2:"id";i:1612;}i:3;a:1:{s:2:"id";i:1882;}i:4;a:1:{s:2:"id";i:1775;}i:5;a:1:{s:2:"id";i:1545;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_heateor_sc_meta]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-810]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Swift Package Continuous Integration Guide]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/</link>
		<pubDate>Mon, 02 Mar 2020 15:00:00 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=842</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Swift packages offer an easy manageable way to share code and functionality. If you wish to create your own package, it’s important to make sure your code works where it's supposed to and the quality is good. Most importantly, continuous integration is a great way to ensure that. If you are interested in learning why continuous integration is important, <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://brightdigit.com/blog/2020/03/02/ios-continuous-integration-avoid-merge-hell/" target="_blank">check out this article on avoiding <em>merge hell</em></a>. Therefore, in this article I am going to show you how to setup Swift package continuous integration. </p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:paragraph -->
<p>Specifically, I am going to break down the following:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong><a href="#getting-started">Basics of Creating a Package</a></strong></li><li><a href="#specifying-platforms-devices"><strong>Designating Platforms and Operating Systems</strong></a></li><li><a href="#continuous-integration"><strong>Setting Up Travis-CI and GitHub Actions</strong></a></li><li><strong><a href="#linux-ci">Adding Linux Support</a></strong></li><li><a href="#testing"><strong>Testing and Code Coverage</strong></a></li><li><strong><a href="#code-quality">Linting, Formatting, and Code Quality</a></strong></li><li><strong><a href="#documentation">Automating Code Documentation</a></strong></li><li><strong><a href="#distrbuting">Distributing and Sharing</a></strong></li><li><strong><a href="#examples-integration">Samples and Examples </a></strong></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>What's important to realize is that Swift packages are reusable pieces of code which encapsulate a set of functionality. In the end, there are two ways to create a Swift package: via <em>Xcode</em> or command line.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="getting-started">Getting Started</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Under the Xcode menu, go to <code>File &gt; New &gt; Swift Package</code> and follow the corresponding dialog. Alternatively, you can use the swift command line tool to create your package. First, create an empty directory and run the create package subcommand:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>> mkdir New-Package
> swift package init</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In the end, you should have:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>A <em>Source</em> directory for your main source code</li><li>A <em>Tests</em> directory for your testing code</li><li>A <em>Package.swift</em> containing the configuration in Swift of your code</li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="specifying-platforms-devices">Specifying Platforms and Devices</h2>
<!-- /wp:heading -->

<!-- wp:image {"id":871,"width":1864,"height":878,"sizeSlug":"full"} -->
<figure class="wp-block-image size-full is-resized"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/03/platforms-and-devices.png" alt="" class="wp-image-871" width="1864" height="878"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Before distributing your Swift package, it’s important to note which operating systems or platforms your code can run on. In the past I’ve reasonably assumed a Swift package would work on watchOS or Linux for instance. Only after adding the dependency and attempting to compile, did I realize the incompatibility issue. If you use an API that is limited to certain platforms, you have two options. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Specify via Package</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Firstly, you can specify an operating system and version in the <code>Package.swift</code> under the <code>platforms</code> property:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...
	platforms: [
        .macOS(.v10_15),
        .iOS(.v13),
        .watchOS(.v5),
        .tvOS(.v13)
    ]
...</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>Using Attributes and API Availability</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>On the other hand, you may want to offer some functionality on some devices. With this in mind, you can use the attributes and API availability checks.  In other words the <code>available</code> attribute allows you to mark certain functionality of your Swift package unavailable on certain operating systems and versions. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In addition, by doing API availability checks you can supply the correct implementation based on operating system and version. Furthermore, whenever you may need to import certain frameworks which may be required but may not be available, you can use <code>canImport</code>, as well.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Here's an example of extending <code>CGFloat</code> for all operating systems, but importing <code>CoreGraphics</code>, when possible:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#if canImport(CoreGraphics)
  import CoreGraphics
#endif

extension CGFloat {
  var clean: String {
    truncatingRemainder(dividingBy: 1) == 0 ? String(format: "%.0f", self) : description
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p>Be that as it may, if you are planning on supporting all operating systems which support Swift then there is no need to do this. Regardless, it may be worth spending some time verifying and updating this property accordingly.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="continuous-integration">Why Continuous Integration?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Having properly setup your package and provided correct compatibility, it’s important to make sure your package works. Additionally, you may want to make sure each change to your code works correctly. Luckily, this is where Continuous Integration comes in. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Continuous integration (CI) is the software practice where small code changes are frequently tested with the rest of the code to ensure nothing breaks as it changes. In other words, with CI we can make sure each change works correctly by integrating a service with our code.</p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<figure><iframe src="https://share.transistor.fm/e/a14f868f" width="100%" height="180" frameborder="0" scrolling="no" seamless="true" style="width:100%; height:180px;"></iframe></figure>
<!-- /wp:html -->

<!-- wp:heading {"level":3} -->
<h3>Choosing a service for Swift Package Continuous Integration</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>What’s important to realize is that by using a cloud service for your Swift package, you can make sure your package works everywhere. Often times, we may be have some source, artifact, or tool required to build our code. However with a cloud service, you can ensure that if your Swift package builds and tests in the cloud it will work for anyone else.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Luckily, there are some great services out there to help your Swift package especially if it’s a public GitHub repository. At the present time, unfortunately, some services <strong>only</strong> support Continuous Integration for iOS Applications rather than Swift packages such as <strong><a href="https://circleci.com" target="_blank" rel="noreferrer noopener" aria-label="Circle CI (opens in a new tab)">Circle CI</a></strong> and <strong><a href="https://www.bitrise.io" target="_blank" rel="noreferrer noopener" aria-label="Bitrise (opens in a new tab)">Bitrise</a></strong>. Be that as it may, <strong><a href="https://travis-ci.com" target="_blank" rel="noreferrer noopener" aria-label="Travis-CI (opens in a new tab)">Travis-CI</a></strong> as well as the most recent <strong><a href="https://github.com/features/actions" target="_blank" rel="noreferrer noopener" aria-label="GitHub Actions (opens in a new tab)">GitHub Actions</a></strong> allow for Swift Package Continuous Integration.<img width="642" height="201" class="alignnone size-full wp-image-841" src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/TravisCI-Full-Color-2.png"></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Travis-CI</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><strong><a rel="noreferrer noopener" href="https://travis-ci.com" target="_blank">Travis-CI</a></strong> is one of the older Continuous Integration services out there. Most importantly for public repositories, <strong><a rel="noreferrer noopener" href="https://travis-ci.com" target="_blank">Travis-CI</a></strong> is completely free. In other words, you can configure your Swift package on <strong><a rel="noreferrer noopener" href="https://travis-ci.com" target="_blank">Travis-CI</a></strong>. In order to configure your repository, signup with <strong><a rel="noreferrer noopener" href="https://travis-ci.com" target="_blank">Travis-CI</a></strong> by linking your GitHub account or organization. Next you need to setup your <code>.travis.yml</code> file.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Notably, there are three key components for setting up a Swift package in Travis-CI: </p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Specifying the correct operating system and Xcode version</li><li>Building and testing your code</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>For example, here is a simple <code>.travis.yml</code> file:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>language: objective-c
os: osx
osx_image: xcode11.3
script:
  - swift build
  - swift test</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>The first three properties setup the virtual machine which <strong><a rel="noreferrer noopener" href="https://travis-ci.com" target="_blank">Travis-CI</a></strong> uses. Next, the lines under <code>script</code> specify the commands Travis-CI needs to run to verify the Swift package is working.   In this case, <strong>since we are not building from an Xcode project or workspace, we need to specify our own <em>custom</em> commands.</strong> In other words, rather than using <em>xcodebuild</em>, the Swift command line tool will build and test our package.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>While Travis-CI is the most experienced cloud CI service out there, recently GitHub has also offered its own service with <strong><a rel="noreferrer noopener" href="https://github.com/features/actions" target="_blank">GitHub Actions</a></strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":840} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/44036562-2.png" alt="" class="wp-image-840"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3>Github Actions</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>With the fairly recent release of <strong><a rel="noreferrer noopener" href="https://github.com/features/actions" target="_blank">GitHub Actions</a></strong>, you can setup Swift package continuous integration right from your repo. Most importantly <strong><a rel="noreferrer noopener" href="https://github.com/features/actions" target="_blank">GitHub Actions</a></strong> is completely free for public repositories. Therefore, let’s breakdown the functionality of <strong><a rel="noreferrer noopener" href="https://github.com/features/actions" target="_blank">GitHub Actions</a></strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>GitHub Actions Components - Workflows, Actions, Jobs and more</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In order to setup our Swift package continuous integration in GitHub Actions, we need to understand the components. Similar to Travis-CI, GitHub uses YAML for its configuration. Specifically these YAML files are known as workflow files. For example, here is a sample with the name <code>macOS</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>name: macOS

on: [push]

jobs:
  build:  
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: swift build
    - name: Run tests
      run: swift test</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In contrast to Travis-CI, you can setup multiple of these files. Therefore as long as you store them in your repository under the <code>.github/workflow</code> folder, <strong><a rel="noreferrer noopener" href="https://github.com/features/actions" target="_blank">GitHub Actions</a></strong> will execute each of these workflow files on trigger.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Speaking of <em>trigger</em>, you can specify many triggers. However in the case of our Swift package, we will only be using the <code>push</code> trigger to activate this workflow. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Below the <code>on</code> trigger, we have setup one job under <code>jobs</code> called <code>build</code>. With in the <code>build</code> job, we have specified the runner type (i.e virtual environment) of <code>macOS-latest</code>. In other words, it will be using the latest version of macOS to run the series of steps.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: swift build
    - name: Run tests
      run: swift test</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":5} -->
<h5>GitHub Actions - Step By Step</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Below the runner type property are the series of steps specified. In this case, the first step with the single <code>uses</code> property checks out the code from the repository. While the following steps have a <code>name</code> label and a <code>run</code> command to execute: first building the Swift package (<code>swift build</code>) then running tests provided (<code>swift test</code>). </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>What’s important to note is that each needs a custom command (via <code>run</code>) with a <code>name</code> or to use a prebuilt action from the GitHub repo such as <code>actions/checkout@v2</code> to pull the source code from the repository. Unfortunately many of the GitHub Actions provided on GitHub may not be compatible with macOS due to various requirements.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Luckily you should have Continuous Integration setup for your Swift package in both Travis-CI and GitHub Actions. However if you wish to support Linux with your Swift package, it is import to configure the Swift package continuous integration for a Linux environment as well.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":839,"width":379,"height":86} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/ubuntu_black-orange_hex.png" alt="" class="wp-image-839" width="379" height="86"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3 id="linux-ci">Linux Support for Swift Package Continuous Integration </h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you wish for your Swift package to be supported everywhere, it might be a good idea to support Linux. Therefore, it’s important to have your Swift package Continuous integration to extend to Linux. Thankfully both Travis-CI and GitHub Action support Linux (i.e. Ubuntu) as well as the configuration of more than one environment per repository. First, let’s understand how build matrices work in Travis-CI.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Configuring Travis-CI for Linux</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>With Travis-CI, we can use a build matrix to include more than one environment. In other words, Travis-CI will run each environment in the build matrix in parallel. Therefore, let’s swap the top section specifying only macOS from above with a build matrix including both macOS and Linux (i.e. Ubuntu 18.04-bionic):</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>jobs:
  include:
    - os: linux
      dist: bionic
      sudo: required
    - os: osx
      osx_image: xcode11.3</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now, it will run each phase in parallel on Ubuntu as well as macOS. However we'll need to make changes to both of the these sections in order to support Linux. Most importantly, we will need to install Swift.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Therefore, we will move or create the <code>script</code> and <code>before_install</code> phases into separate bash scripts and update <code>.travis.yml</code>  accordingly:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>jobs:
  include:
    - os: linux
      dist: bionic
      sudo: required
    - os: osx
      osx_image: xcode11.3
before_install:
  - ./Scripts/before_install.sh
script:
  - ./Scripts/script.sh</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Next let’s create a script for <code>before_install</code> named <code>before_install.sh</code> under the <code>Scripts</code> folder with the following code:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#!/bin/bash

if &#91;&#91; $TRAVIS_OS_NAME = 'osx' ]]; then
  # install macOS prerequistes
elif &#91;&#91; $TRAVIS_OS_NAME = 'linux' ]]; then
  # download swift
  wget https://swift.org/builds/swift-5.2-release/ubuntu1804/swift-5.2-RELEASE/swift-5.2-RELEASE-ubuntu18.04.tar.gz
  # extract the archive
  tar xzf swift-5.2-RELEASE-ubuntu18.04.tar.gz
  # include the swift command in the PATH
  export PATH="${PWD}/swift-5.2-RELEASE-ubuntu18.04/usr/bin:$PATH"
fi</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Within the bash script, we check the environment variable <code>TRAVIS_OS_NAME</code> setup by Travis-CI. With the variable, we check whether it is <code>osx</code> for a macOS environment or <code>linux</code> for the Ubuntu environment. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Since Xcode is not available on Ubuntu, we need to manually within the bash script, download and extract Swift. Lastly we need to include the directory path of the Swift command tool within the environment <code>PATH</code> variable.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Correspondingly we need to make sure the <code>PATH</code> is updated in the <code>Scripts/script.sh</code> file:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#!/bin/bash

if &#91;&#91; $TRAVIS_OS_NAME = 'osx' ]]; then
  # What to do in macOS
elif &#91;&#91; $TRAVIS_OS_NAME = 'linux' ]]; then
  # What to do in Ubunutu
  export PATH="${PWD}/swift-5.2-RELEASE-ubuntu18.04/usr/bin:$PATH"
fi

swift build
swift test</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Therefore the only major change within the <code>script</code> section of the Travis-CI configuration is including the path to the Swift command line tool.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>As a result, each time a push is made to the repository, Travis-CI will run both a macOS and Ubuntu process. In effect, we have setup Swift package continuous integration for both operating systems in Travis-CI. Accordingly, let’s do the same thing for GitHub Actions.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Configuring GitHub Actions for Linux</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While Travis-CI requires us to check the operating system within the build script, GitHub Actions allows us to use separate workflow files for each operating system.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>name: ubuntu

on: &#91;push]

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Download Swift 5.2
      run: wget -q https://swift.org/builds/swift-5.2-release/ubuntu1804/swift-5.2-RELEASE/swift-5.2-RELEASE-ubuntu18.04.tar.gz
    - name: Extract Swift 5.2
      run: tar xzf swift-5.2-RELEASE-ubuntu18.04.tar.gz
    - name: Add Path
      run: echo "::add-path::$GITHUB_WORKSPACE/swift-5.2-RELEASE-ubuntu18.04/usr/bin"
    - name: Build
      run: swift build
    - name: Run tests
      run: swift test</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this case, each command is stored within an individual step. As can be seen, the one custom part is the method we use to add the path using GitHub Actions logging commands and variables. With <code>echo "::add-path::$GITHUB_WORKSPACE/swift-5.2-RELEASE-ubuntu18.04/usr/bin"</code>, we update the <code>PATH</code> variable.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>As a result, your Swift package continuous integration should support Linux via Travis-CI and GitHub Action. However, there are a few steps in order to support Linux when it comes to testing.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="testing">Testing, CI, and Linux</h2>
<!-- /wp:heading -->

<!-- wp:image {"id":875,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://i1.wp.com/learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/03/linux-test-swift.png?fit=640%2C316&amp;ssl=1" alt="" class="wp-image-875"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>When it comes to verifying whether your package works correctly, having the right unit tests are a major component of that. Luckily, if you are using the XCTest framework and setup the CI scaffold previously described, you should be good to go. However with Linux, XCTest will not automatically provide all the correct tests in your application without some modifications. There are a few ways of doing this:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Manually update your XCTestManifests.swift and LinuxMain.swift  :(</li><li>Run <code>swift test --generate-linuxmain</code> <strong>before commit on your macOS machine</strong> to let the swift command line tool update your LinuxMain.swift.</li><li><strong>Update your CI for Linux</strong> to run <code>swift test --enable-test-discovery</code> which will automatically discover and run your tests.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>If you are interested in learning more about this check out Ole Begemann’s piece on <a href="https://oleb.net/blog/2017/03/keeping-xctest-in-sync/">keeping XCTest in sync</a> as well as <a href="https://oleb.net/2020/swift-test-discovery/">how automatic test discovery works</a>. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Now that we have our unit tests working correctly, let's look into keeping tracking of code coverage.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Integrating Code Coverage</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Code coverage is a good way to keep track of how well your unit tests are handling. Luckily there are some great services out there to keep track of your code coverage as you build your Swift package.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":838,"width":150,"height":150} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/7c4f41a-pink.png" alt="" class="wp-image-838" width="150" height="150"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":4} -->
<h4>CodeCov</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><strong><a href="http://codecov.io/" target="_blank" rel="noreferrer noopener" aria-label="CodeCov.io (opens in a new tab)">CodeCov.io</a></strong> is one such service which we can plugin into our Swift Package Continuous Integration setup. However, once you have signed up and added your public repository, it will take some configuration to make it work completely.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For instance, we must make sure that the tests, build a report, convert the report to a compatible format, then lastly upload the the report to <strong><a href="http://codecov.io/" target="_blank" rel="noreferrer noopener" aria-label="CodeCov.io (opens in a new tab)">CodeCov.io</a></strong>. Building the report when you run the unit tests is fairly easy. In this case, we simply need to add the flag <code>--enable-code-coverage</code> to our  <code>swift test</code>  for both Travis-CI and GitHub Actions; macOS and Linux:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>swift test --enable-code-coverage</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Next, we need to prepare the report for upload using <code>llvm-cov</code>. With this in mind, on macOS you can use <code>xcrun</code> to run <code>llvm-cov</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>xcrun llvm-cov export -format="lcov" .build/debug/${{FRAMEWORK_NAME}}PackageTests.xctest/Contents/MacOS/${{FRAMEWORK_NAME}}PackageTests -instr-profile .build/debug/codecov/default.profdata > info.lcov</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Corresponding in Linux, we can run <code>llvm-cov</code> manually:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>llvm-cov export -format="lcov" .build/x86_64-unknown-linux-gnu/debug/${{FRAMEWORK_NAME}}PackageTests.xctest -instr-profile .build/debug/codecov/default.profdata > info.lcov</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Simply replace <code>${{FRAMEWORK_NAME}}</code> with your Swift package name or even better setup an environment variable in Travis-CI and GitHub Actions.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Lastly, we need to upload the report using the Bash script provided by CodeCov.io:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>bash &lt;(curl https://codecov.io/bash)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>While Travis-CI automatically integrates with CodeCov.io, GitHub does require <a href="https://docs.codecov.io/docs/about-the-codecov-bash-uploader">manually setting up the token for CodeCov.io</a>:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>First, go to your project in CodeCov.io and copy the token from the project overview.</li><li>Go to your GitHub repository settings and under <em>Secrets</em> add the token under the name <code>CODECOV_TOKEN</code>.</li><li>Under both the macOS and ubuntu workflow files, add the <code>CODECOV_TOKEN</code> as the environment variable under the upload step.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>For example, here’s the Ubuntu workflow file which uses an environment variable for the Swift package name and maps the <code>CODECOV_TOKEN</code> secret to the uploader command environment variable:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...    
    - name: Run tests
      run: swift test --enable-code-coverage
    - name: Prepare Code Coverage
      run: llvm-cov export -format="lcov" .build/x86_64-unknown-linux-gnu/debug/${{ env.PACKAGE_NAME }}PackageTests.xctest -instr-profile .build/debug/codecov/default.profdata > info.lcov
    - name: Upload to CodeCov.io
      run: bash &lt;(curl https://codecov.io/bash)
      env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now that we have completed setting up a code coverage report with <strong>CodeCov.io</strong>, Let’s talk about ensuring good code quality.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":837,"sizeSlug":"thumbnail"} -->
<div class="wp-block-image"><figure class="aligncenter size-thumbnail"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/02/medal-150x150.png" alt="" class="wp-image-837"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2 id="code-quality">Code Quality and CI </h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There are some great automated ways we can keep up code quality inside our Swift package continuous integration. However, nothing replaces a good code review. If you can, have some sort of code review process by someone else. If it’s difficult to find someone else, I suggest reviewing a Swift package’s code after some down time to ensure you can have a fresh look at your code.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Regardless, let’s look at some of the ways we can automate code quality checks.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Formatting, Beautification, and Linting</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There are two command line tools I use to maintain quality code while keeping formatting consistent: <strong><a rel="noreferrer noopener" href="https://github.com/nicklockwood/SwiftFormat" target="_blank">SwiftFormat</a></strong> and <strong><a rel="noreferrer noopener" aria-label="SwiftLint (opens in a new tab)" href="https://github.com/realm/SwiftLint" target="_blank">SwiftLint</a></strong>. Fortunately, each application can be installed via Homebrew. Therefore, we can use Homebrew bundle to automate the installation of both applications inside our Swift package continuous integration. With this in mind, add a file called <code>Brewfile</code> to the root of repository with the following text:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>brew "swiftformat"
brew "swiftlint"</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Next we need to add the installation these applications in the earliest part of our CI setup. However these applications will only work on macOS and we need to verify that as well. Therefore we modify our <code>before_install.sh</code> script for Travis-CI with:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...
if [[ $TRAVIS_OS_NAME = 'osx' ]]; then
  brew update
  brew bundle
elif [[ $TRAVIS_OS_NAME = 'linux' ]]; then
...</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Meanwhile, for Github Actions, we simply need to add steps to our macOS workflow file:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...
  steps:
    - uses: actions/checkout@v2
    - name: Prepare Build
      run: brew bundle
...</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Lastly we need to add the following command to verify code quality after the installation:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>swiftformat --lint . &amp;&amp; swiftlint</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In short, this command will run both applications in the CI process. Specifically we run <code>swiftformat</code> in linter mode, since our expectation is that the developer has already formatted the code correctly before commit. Correspondingly, with <code>swiftlint</code>, you can use the <code>autocorrect</code> subcommand to fix some linter errors in your code before commit.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Again, for Travis-CI, verify the <code>$TRAVIS_OS_NAME</code> is <code>osx</code>, so the CI doesn’t run the tool in Linux.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Beside installation and execution of the tools within the Swift package continuous integration, you should probably add configuration files for both tools. In brief, these are <code>.swiftformat</code> and <code>.swiftlint.yml</code>. Futhermore, check out both the <strong><a rel="noreferrer noopener" href="https://github.com/nicklockwood/SwiftFormat" target="_blank">SwiftFormat</a></strong> and <strong><a rel="noreferrer noopener" href="https://github.com/realm/SwiftLint" target="_blank">SwiftLint</a></strong> projects for details on how setup these configurations.</p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<figure><iframe src="https://share.transistor.fm/e/99f236b1" width="100%" height="180" frameborder="0" scrolling="no" seamless="true" style="width:100%; height:180px;"></iframe></figure>
<!-- /wp:html -->

<!-- wp:heading {"level":3} -->
<h3>Cloud-Based Code Quality Services</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Besides <strong><a href="https://github.com/nicklockwood/SwiftFormat" target="_blank" rel="noreferrer noopener" aria-label="SwiftFormat (opens in a new tab)">SwiftFormat</a></strong> and <strong><a rel="noreferrer noopener" href="https://github.com/realm/SwiftLint" target="_blank">SwiftLint</a></strong>, there are a few cloud based code quality tools which easily integrate with your public GitHub repository. Therefore, you may be interested in:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong><a href="https://www.codefactor.io/" target="_blank" rel="noreferrer noopener" aria-label="CodeFactor.io (opens in a new tab)">CodeFactor.io</a></strong></li><li><strong><a href="https://codebeat.co">CodeBeat</a></strong></li><li><strong><a href="https://codeclimate.com" target="_blank" rel="noreferrer noopener" aria-label="CodeClimate (opens in a new tab)">CodeClimate</a></strong></li><li><strong><a href="https://houndci.com" target="_blank" rel="noreferrer noopener" aria-label="HoundCI (opens in a new tab)">HoundCI</a></strong></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>After having setup these various tools, it’s worth taking a look at some various issues which may crop up.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Common Code Quality Issues </h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Now that we have setup our Swift package continuous integration and plugged in several services, there are few issues you could resolve which will show up:</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Cyclomatic Complexity</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><em>Cyclomatic Complexity</em> refers to the complexity of the code specifically when it comes to testability. In the end, if your code contains several logical paths, it is best to break these up. For instance, using <em>Protocol Oriented Programming</em>, you can have a protocol to test the case. Then, for each case use individual implementations and store them in an array. For instance, rather than:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>if a == 0 {
	if b == 0 {
	} ...
...
} else if a == 1 {
...
} else if a == 2
...
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Use a protocol which does:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>protocol Doer {
  func test (_ a: Int, _ b: Int) -> Result?
}

let implementations : [Doer] = [FooDoer(), BarDoer()]

var result : Result?

for implementation in implmentations while result == nil {
  result = implementation(a, b)
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As a result, testing and maintaining this code becomes much more simple.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Cognitive Complexity</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While Cyclomatic Complexity determines how difficult your code will be to test, Cognitive Complexity is how difficult it is to read and understand. Therefore much of this involves breaks in logic, and unnecessary loop statements. However by making your code flow clearly from top to bottom this can be avoided.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>File and Function Too Long </h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>One of the easiest metrics of complexity is the length of your files and functions. In the end, simply refactoring should resolve the issue. To put it differently, break down large functions, classes, and structs into smaller components. At the same time, you may find a class which is difficult to split up such as a <code>UITableViewController</code>. In this case, Swift extensions are a great way to resolve this.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Assignment Branch Condition</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Assignment Branch Condition typically is calculated based on the number of assignments, branches, and conditions as opposed to simply length. Therefore, this can be resolved by separating your functions into smaller pieces. In other words, reduce these complex elements from one function into several.</p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p>Many of these code quality issues should be resolved, however it is good to not be overly concerned with some of these metrics. Similar to code coverage, it is much more a case-by-case need for resolution. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Additionally there can easily be instances of false positives such as <em>identical code</em> issues. In the end, it’s important to have a measured but determined approach to code quality.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":877,"sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/03/book-2.png" alt="" class="wp-image-877"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2 id="documentation">Documenting Your Swift Package</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you intend to distribute your Swift package to the public then it’s important to document your code and make that documentation easily available. In the first place, take a look at <a href="https://developer.apple.com/library/archive/documentation/Xcode/Reference/xcode_markup_formatting_ref/" target="_blank" rel="noreferrer noopener" aria-label="Apple’s guidance on documenting Swift code (opens in a new tab)">Apple’s guidance on documenting Swift code</a> as well as:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a rel="noreferrer noopener" aria-label="Swift Documentation by Sarun Wongpatcharapakorn (opens in a new tab)" href="https://sarunw.com/posts/swift-documentation/" target="_blank"><strong>Swift Documentation</strong> by Sarun Wongpatcharapakorn</a></li><li><a href="https://nshipster.com/swift-documentation/"><strong>Swift Documentation</strong> - NSHipster</a></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Once you’ve properly documented your Swift package API, let’s add code documentation to our Swift package continuous integration.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Primarily, you have the option of using either <strong><a rel="noreferrer noopener" aria-label=" Jazzy by Realm (opens in a new tab)" href="https://github.com/realm/jazzy" target="_blank">Jazzy by Realm</a></strong> or <a rel="noreferrer noopener" aria-label="SourceDocs (opens in a new tab)" href="https://github.com/eneko/SourceDocs" target="_blank"><strong>SourceDocs</strong></a>. Each has their advantage depending on whether you wish to build a complete static HTML site. In that case, I would recommend <strong><a rel="noreferrer noopener" href="https://github.com/realm/jazzy" target="_blank">Jazzy</a></strong>. Especially considering the maturity of <strong><a rel="noreferrer noopener" href="https://github.com/realm/jazzy" target="_blank">Jazzy</a></strong>, it can be an excellent tool. On the other hand, if you wish to simply output Markdown for your package documentation, I’d recommend <a rel="noreferrer noopener" href="https://github.com/eneko/SourceDocs" target="_blank"><strong>SourceDocs</strong></a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Using SourceDocs</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To build documentation using <code>sourcedocs</code>, first build your Swift package using <code>swift build</code>. Once your package is built, you run <code>sourcedocs</code> using:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>sourcedocs generate --spm-module PACKAGE_NAME</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Additionally, you can use a different output directory besides <code>Documentation</code>, such as <code>docs</code>. In order to do that, you can use the flag <code>--output-folder</code> like so:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>sourcedocs generate --spm-module PACKAGE_NAME --output-folder docs</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Furthermore, we can take the next step and integrate <code>sourcedocs</code> into our Swift package Continuous Integration.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Adding SourceDocs to Swift Package Continuous Integration</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Similar to our other tools, we need to add <code>sourcedocs</code> to our Homebrew bundle file:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>brew "swiftformat"
brew "swiftlint"
brew "sourcedocs"</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Next in our macOS GitHub Action workflow file, we can add a step to build the documentation:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>    - name: Build Documentation
      run: sourcedocs generate --spm-module ${{ env.PACKAGE_NAME }} --output-folder docs</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Lastly, in order to make sure our change is pushed, we need to add a step to commit and push any documentation changes:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git status
        git add [DOCUMENTATION DIRECTORY]
        git diff-index --quiet HEAD || git commit -m "[github action] Update Docs"
        git push</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>A point often overlooked, is that this will fail if there is an already existing push committed while this CI takes place. Therefore, in those cases, the CI will fail. If you are concerned, I would recommend looking at using a pull request rather than a direct push to the branch.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>After having built documentation for our swift package, it is important to make our package discoverable to others.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="distrbuting">Making Your Swift Package Available</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Now that we have setup:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>CI based on the supported platforms such as Linux</li><li>linting and code quality checks</li><li>code documentation</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>… let’s discuss how we can properly distribute the package to others.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>SwiftPM</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While Swift packages can easily be added simply as a few lines in a <code>Package.swift</code>, discoverability can be difficult. Luckily thanks to the work of Dave Verwer, the community has a great site with <strong><a rel="noreferrer noopener" aria-label="swiftpm.co (opens in a new tab)" href="http://swiftpm.co" target="_blank">swiftpm.co</a></strong>. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>However there are some checks we should add to make sure your Swift package is valid. Additionally we can add these checks to the Swift package continuous integration.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Using <code>jq</code> to Verify Products</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>With this intention, we need to make sure that our swift package has at least one valid product. For instance, under the product section of my <code>Package.swift</code> for my package <strong><a href="https://github.com/brightdigit/AssetLib" target="_blank" rel="noreferrer noopener" aria-label="AssetLib (opens in a new tab)">AssetLib</a></strong>, it has a library product listed:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...
  products: [
    // Products define the executables and libraries produced by a package, and make them visible to other packages.
    .library(
      name: "AssetLib",
      targets: ["AssetLib"]
    )
  ],
...</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Fortunately, we can automate this by dumping the JSON of the package and verifying the products listed using <strong><a rel="noreferrer noopener" aria-label="jq (opens in a new tab)" href="https://stedolan.github.io/jq/" target="_blank">jq</a></strong>. <strong><a rel="noreferrer noopener" href="https://stedolan.github.io/jq/" target="_blank">jq</a></strong> is a fantastic command-line tool for processing JSON data similar to <em>sed</em>. Therefore by piping the JSON from the swift subcommand <code>package dump-package</code> to <code>jq</code>, we can check the number products:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>swift package dump-package | jq -e ".products | length > 0"</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As can be seen, we are using the filter string to check the <code>length</code> property of the property <code>products</code>  to see if there is more than one product.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Lastly, we can submit our Swift package for review by:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Forking <strong><a href="https://github.com/daveverwer/SwiftPMLibrary" target="_blank" rel="noreferrer noopener" aria-label="the Repo (opens in a new tab)">the Repo</a></strong></li><li>Adding our repos to <code>packages.json</code></li><li>Making sure <code>packages.json</code> is sorted via <code>jq</code> by running:<br><code>echo "$(jq 'sort_by(ascii_downcase)' packages.json)" &gt; packages.json</code></li><li>Run <code>validate.sh</code> </li><li>Create a pull request in GitHub</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Then wait for acceptance to see your package listed at <strong><a href="http://swiftpm.co" target="_blank" rel="noreferrer noopener" aria-label="swiftpm.co (opens in a new tab)">swiftpm.co</a></strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Cocoapods Compatibility</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While Swift packages are the future of dependency management, there are several reasons why <strong><a rel="noreferrer noopener" aria-label="Cocoapods (opens in a new tab)" href="https://cocoapods.org" target="_blank">Cocoapods</a></strong> is still in use. For this reason, it’s a good idea to add support for <strong><a rel="noreferrer noopener" href="https://cocoapods.org" target="_blank">Cocoapods</a></strong> to your library. Luckily, there are only a few simple steps to add for making our Swift package is compatible.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Once you have <strong><a rel="noreferrer noopener" href="https://cocoapods.org" target="_blank">Cocoapods</a></strong> installed, create the <strong><a rel="noreferrer noopener" href="https://cocoapods.org" target="_blank">Cocoapods</a></strong> spec by running:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>pod spec create $(git remote get-url origin)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>At the present time, you should have a <code>.podspec</code> file named after your library. Inside the <code>.podspec.</code> file, add or set:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Long description under <code>spec.description</code></li><li>Short summary under <code>spec.summary</code></li><li><a href="https://help.github.com/en/github/building-a-strong-community/adding-a-license-to-a-repository">Create License File</a> and set the set license type and file name under <code>spec.license</code></li><li>Your name and email address under <code>spec.author</code></li><li><a href="https://guides.cocoapods.org/syntax/podspec.html#deployment_target">The deployment targets for each operating system</a></li><li>The <code>spec.source</code> to the repository url and git tag of the target version</li><li><code>spec.source_files</code> to <code>Sources/**/*.swift</code></li><li>The <code>spec.swift_versions</code></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Lastly we can verify our package is valid in our existing continuous integration by including <code>pod lib lint</code> within the macOS sections of our script.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>Setting Up An Example Project</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Additionally I would encourage creating an example project using your library with targets in each operating system. Moreover, we can also verify our example project builds. After creating the example project in a directory called Example, create a Podfile using <code>pod init</code>. Then update the <code>Podfile</code> by adding a reference to your pod in the parent directory:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...
target 'iOS Example' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!
  pod 'PackageName', :path => '../'

  # Pods for iOS Example

end
...</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Next to verify the build in our macOS continuous integration, include the following lines:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>if [[ $TRAVIS_OS_NAME = 'osx' ]]; then
...
  swift package generate-xcodeproj
  pod install --silent --project-directory=Example
  xcodebuild -quiet -workspace Example/Example.xcworkspace -scheme "iOS Example"  ONLY_ACTIVE_ARCH=NO  CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO  CODE_SIGNING_ALLOWED=NO
  xcodebuild -quiet -workspace Example/Example.xcworkspace -scheme "tvOS Example"  ONLY_ACTIVE_ARCH=NO   CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO  CODE_SIGNING_ALLOWED=NO
  xcodebuild -quiet -workspace Example/Example.xcworkspace -scheme "macOS Example"  ONLY_ACTIVE_ARCH=NO CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO  CODE_SIGNING_ALLOWED=NO
...</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In other words, this script example for Travis-CI, will:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Generate the Xcode project <strong><a rel="noreferrer noopener" href="https://cocoapods.org" target="_blank">Cocoapods</a></strong> needs. </li><li>Install the <strong><a rel="noreferrer noopener" href="https://cocoapods.org" target="_blank">Cocoapod</a></strong> and create the workspace file</li><li>Build each application target for each operating system</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Therefore, we have created a <code>.podspec</code> and added continuous integration for the pod as well as the example project. Lastly, we need to push the repository to GitHub and tag it with the proper version. Once that’s done, make sure you have a <strong><a rel="noreferrer noopener" href="https://cocoapods.org" target="_blank">Cocoapods</a></strong> account setup and run: <code>pod trunk push NAME.podspec</code> to push our repo. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="examples-integration">Examples and Integration</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In the end, it's important to make sure your package maintains good quality, works on its designated platforms, is easily available, and is fully tested. If you are interested, you can check out packages which I have implemented using these practices:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong><a rel="noreferrer noopener" aria-label="Base32Crockford (opens in a new tab)" href="https://github.com/brightdigit/Base32Crockford" target="_blank">Base32Crockford</a></strong> - the Swift implementation of&nbsp;<a href="https://www.crockford.com/base32.html">the Base32Crockford encoding</a></li><li><strong><a rel="noreferrer noopener" aria-label="AssetLib (opens in a new tab)" href="https://github.com/brightdigit/AssetLib" target="_blank">AssetLib</a></strong> - which reads and updates app icon and image set information used in Xcode Asset Libraries</li><li><strong><a rel="noreferrer noopener" aria-label="SwiftVer (opens in a new tab)" href="https://github.com/brightdigit/swiftver" target="_blank">SwiftVer</a></strong> - reads version information from Bundles and Plists as well as information stored from version control using&nbsp;<a href="https://autorevision.github.io/">autorevision</a></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Furthermore, you can use my GitHub template <strong><a href="https://github.com/brightdigit/EggSeed" target="_blank" rel="noreferrer noopener" aria-label="EggSeed (opens in a new tab)">EggSeed</a></strong>, which automates most of what we've talked about here:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>creation of a Swift package library</li><li>creation of Cocoapod spec </li><li>setup of example projects</li><li>SwiftLint and SwiftFormat tooling</li><li>code documentation setup</li><li>CI Integration with Travis-CI, GitHub Actions, and CodeCov.IO</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Additionally, badges are included from <strong><a href="https://shields.io">shields.io</a></strong> to showcase the quality of your Swift package continuous integration.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Feel free to reach out if you have any additional questions <a id="signup" rel="noreferrer noopener" aria-label="on Twitter @leogdion  (opens in a new tab)" href="https://twitter.com/leogdion" target="_blank">on Twitter <strong>@leogdion</strong> </a>or signup for the newsletter below to get the latest tutorials and guides on Swift development.</p>
<!-- /wp:paragraph -->

<!-- wp:jetpack/mailchimp {"emailPlaceholder":"leo@brightdigit.com","interests":["aca014a037","04079f1525","992209701b"],"signupFieldValue":"swift-package-continuous-integration"} /-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>842</wp:post_id>
		<wp:post_date><![CDATA[2020-03-02 10:00:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-03-02 15:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-08-19 10:17:24]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-08-19 14:17:24]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[swift-package-continuous-integration-guide]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="continuous-integration"><![CDATA[continuous-integration]]></category>
		<category domain="category" nicename="guides"><![CDATA[Guides]]></category>
		<category domain="post_tag" nicename="swift-package"><![CDATA[swift-package]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Swift Package Continuous Integration]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Swift Packages offer an easy manageable way to share code and functionality. We are going to show you how to setup Swift package continuous integration.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[73]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[19]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[874]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-842]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[flatMap, Double Optionals, and Functional Programming]]></title>
		<link>https://learningswift.brightdigit.com/flatmap-double-optionals-functional-programming/</link>
		<pubDate>Tue, 07 Apr 2020 18:20:39 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=929</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>A while ago <a rel="noreferrer noopener" href="https://learningswift.brightdigit.com/understanding-optionals-in-swift/" target="_blank">I did an article on the basics of <strong>Optionals</strong></a> and how they work in Swift. However, it seems there's some confusion as to how one particular method works in Swift when it comes to a collection of <strong>Optionals</strong>: <em>flatMap</em>. </p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:paragraph -->
<p>With all the talk regarding<em> flattening the curve</em>, today I want to explain exactly what it means to flatten in the context of functional programming. Additionally, it not only can be used on <strong>Arrays</strong> but single <strong>Optionals</strong> as well. In the end, using them correctly will make your code easier to read.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>flatMap vs map and Generic</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Before we dive into what <em><strong>flatMap</strong></em> does, let's talk about <strong>what flatten actually means</strong>. Most importantly, <em>flatMap</em> is typically a <em>map</em> coupled with a <em>flatten</em> operation. The flatten operation typically is used in the context of <strong>Generics</strong>, such as <strong>Arrays</strong>, <strong>Promises</strong>, <strong>Publishers</strong>, and even <strong>Optionals</strong> (<em>remember Optionals are Generic enums</em>).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Let's create our own Generic to show how this would work:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>struct Foo&lt;Value> {
  let value : Value
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Here's a simple Generic <code>Foo</code> which contains a value. Therefore, let's add a simple map function in case the developer wants to convert the value into something else:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>extension Foo {
  func map&lt;Output>( _ callback: (Value) -> (Output) ) -> Foo&lt;Output> {
    let output = callback(self.value)
    return Foo&lt;Output>(value : output)
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now we have simple map method which works similar to others, where the developer can convert the <code>Foo</code> into some other type. For instance:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let firstItem = Foo(value: 3.0)
let secondItem = firstItem.map{ $0.description }</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this case, we have a <code>Foo&lt;Double&gt;</code> which is converted into a <code>Foo&lt;String&gt;</code> using our new map function. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>However there are instances where this can cause issues.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Arrays of Arrays</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The simplest case where map doesn't quite do what you want would be when you need a flat list. For instance, let's say you want to get a flat list of books from their authors:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>struct Author {
  ...
  let name : String
  let books : &#91;String]
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Then you have a list of authors and their books in JSON:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>&#91;
  {
    "Franz Kafka": &#91;
      "Stories",
      "The Trial",
      "The Castle"
    ]
  },
  {
    "Fyodor Dostoevsky": &#91;
      "Crime and Punishment",
      "The Idiot",
      "The Possessed",
      "The Brothers Karamazov"
    ]
  },
  {
    "Leo Tolstoy": &#91;
      "War and Peace",
      "Anna Karenina",
      "The Death of Ivan Ilyich"
    ]
  },
  {
    "William Shakespeare": &#91;
      "Hamlet",
      "King Lear",
      "Othello"
    ]
  }
]</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Unfortunately, map would only return an <strong>Array of an Array</strong> or <strong>Jagged Array</strong> of books (i.e. <code>[[String]]</code>):</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let authors : &#91;Author] = ...
let books : &#91;&#91;String]] = authors.map {
  $0.books
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As a result, we get:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>&#91;
  &#91;
    "Stories",
    "The Trial",
    "The Castle"
  ],
  &#91;
      "Crime and Punishment",
      "The Idiot",
      "The Possessed",
      "The Brothers Karamazov"
   ],...</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>However, this is where a <strong><em>flatMap</em></strong> would be useful:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let authors : &#91;Author] = ...
let books : &#91;String] = authors.flatMap {
  $0.books
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now, rather than returning an Array of Arrays, <em>flatMap</em> automatically flattens the result. Not only does this work with Arrays but other <strong>Generics</strong> as well. A great example of this is in use with asynchronous methods. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you are interested in learning more about how SwiftNIO and Google Futures does this with Promises and Futures, check out my <a rel="noreferrer noopener" href="https://learningswift.brightdigit.com/asynchronous-multi-threaded-parallel-world-of-swift/" target="_blank">article on asynchronous programming here.</a><strong> </strong>Additionally Combine, which is frequently used with SwiftUI, contains a <a rel="noreferrer noopener" href="https://developer.apple.com/documentation/combine/publisher/3204718-map" target="_blank">map</a> and <a rel="noreferrer noopener" href="https://developer.apple.com/documentation/combine/publisher/3204712-flatmap" target="_blank">flatMap</a> for its Publishers as well.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Besides Arrays, Promises, and Combine Publishers, there was one other Generic we are forgetting to cover which often can cause issues. If you have run into the elusive <code>Type??</code> value then you have probably run into an instance where <strong><em>flatMap</em></strong> should be used on <strong>Optionals</strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>flatMap and the elusive Double Optional??</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>So let's say we have a generic function which returns an optional:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>func maybe&lt;T>(_ value: T) -> T? {
  Bool.random() ? value : nil
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Then you've created a optional value:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let optionalValue : Int? = Int.random(in: 0...10)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Next, you decide to call that function which returns an optional on the option value and you end up with something that makes very little sense:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let optionalOptional : Int?? = maybe(optionalValue)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>What is an <code>Int??</code>...?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>As stated earlier <strong>an Optional is really another Generic type.</strong> Here's a small snippet of the Generic Enumeration behind the scenes:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>public enum Optional&lt;Wrapped> {
    case none
    case some(Wrapped)
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As you can see the '?' is simply syntactic sugar. So for instance an <code>Int?</code> is really an <code>Optional&lt;Int&gt;</code>. Therefore, we can surmise that an <code>Int??</code> is really a <code>Optional&lt;Optional&lt;Int&gt;&gt;</code>. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Therefore, we need to make sure that our result is flattened in order to use it. Luckily, <strong>Optional</strong> provides a <strong><em>flatMap</em></strong> function as well. For this reason, we can use <a rel="noreferrer noopener" href="https://developer.apple.com/documentation/swift/optional/1540500-flatmap" target="_blank"><code>Optional.flatMap</code></a> to fix our result:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let betterOptionalValue : Int? = optionalValue.flatMap(maybe(_:))</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>By using <strong><em>flatMap</em></strong>, it flattens the result to return a <em>single</em> <strong>Optional</strong>. It's important to note, that <code>optionalValue</code> does not contain the <code>?</code> suffix since we want to call <strong><em>flatMap</em></strong> on <code>Optional&lt;Int&gt;</code> as opposed to Int. Likewise, <strong>Optional</strong> also contains a map function for when your method will return a non-optional value and does not require flattening.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>flatMap, parsing, and conversion</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There are a few use cases where <strong><em>flatMap</em></strong> on an <strong>Optional</strong> are useful. For instance, when you are parsing a value, there are cases where you wish to throw an error depending whether the value is invalid or missing (i.e. <code>nil</code>). However in some instances, you don't care whether the value is invalid or <code>nil</code> and want to just return <code>nil</code> if it fails. In this case, <strong><em>flatMap</em></strong> fits perfectly well:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>func parse (_ rawValue : RawType) -> ParsedType?

let parsedValue = optionalRawValue.flatMap(parse)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>For instance, parsing UUID from a String, rather than:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let uuid : UUID?

if let uuidString = dictionary&#91;"VCS_UUID"] {
  uuid = UUID(uuidString: uuidString)
} else {
  uuid = nil
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>... we can use:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let uuid = dictionary&#91;"VCS_UUID"].flatMap(UUID.init(uuidString:))</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Besides parsing, I've used <strong><em>flatMap</em></strong> in instances where I need to convert a successful <code>Result</code> or value to a SwiftUI <code>View</code> as well:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  var iconImage: some View {
    return self.icon.flatMap { icon in
      guard case let .image(name) = icon else {
        return nil
      }
      return name
    }.map {
      Image($0).renderingMode(.template)
    }
  }</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this case if the <code>self</code> <code>View</code> contains an <code>icon</code> with the case <code>image</code> then use the <code>name</code> and create templated <code>Image</code> for the <code>View</code>. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>While there are instances where <strong><em>flatMap</em></strong> is useful, more often than not you may just wish to filter the <strong>Optional</strong> results from a map operation. This is where <strong><em>compactMap</em></strong> comes in.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>flatMap vs compactMap</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In many instances, you probably want simply remove Optionals from your Array or having a map return only non-Optional values. Before Swift 4.1, there was only one method for doing this as well as the traditional <strong><em>flatMap</em></strong> mentioned previously. Unfortunately as stated in <a rel="noreferrer noopener" href="https://github.com/apple/swift-evolution/blob/master/proposals/0187-introduce-filtermap.md" target="_blank">the implemented proposal,</a> this caused much confusion. Therefore <strong><em>compactMap</em></strong> was added in Swift 4.1. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>While <strong><em>flatMap</em></strong> concerns the returning of a flat Array of values, <strong><em>compactMap</em></strong> is specifically for instances where you need to make sure the Array returned contains no Optional values. In effect, <strong>if the closure for each item can return multiple items then a flatMap is right; otherwise if the closure can return either no items (i.e. nil) or one then compactMap makes the most sense.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>So for example, if we have <code>Node</code> struct and an Array of optional Nodes: </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>struct Node&lt;Value> {
  let value : Value
  let children : &#91;Node&lt;Value>]
}

let items : &#91;Node&lt;Int>?]</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Therefore, let's see what happens when we use a combination of <strong><em>flatMap</em></strong> and <strong><em>compactMap</em></strong> in various ways:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// returns an array with no Optionals
let array : &#91;Node&lt;Int>] = items.compactMap{ $0 }

// returns and array of array of Nodes
let arrayArray : &#91;&#91;Node&lt;Int>]] = items.compactMap{ $0?.children }

// assumes same as previous compactMap and issues a warning
let arrayArrayWithWarning : &#91;&#91;Node&lt;Int>]] = items.flatMap{ $0?.children }

// returns flat array of Nodes from children
let flatArray = items.flatMap{ $0?.children ?? &#91;Node]() }

// returns flat array of Nodes from children as well
let flatCompactArray = items.compactMap{ $0 }.flatMap{ $0.children }</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Most importantly, <strong><em>flatMap</em></strong> is not supposed to return a <code>nil</code> (otherwise the compiler assumes it's <strong><em>compactMap</em></strong> and issues a warning). Therefore, you can either use <a rel="noreferrer noopener" href="https://docs.swift.org/swift-book/LanguageGuide/BasicOperators.html#ID72" target="_blank">the nil-coalesce operator</a> to return an empty Array or use <strong><em>compactMap</em></strong> beforehand to ensure there will never be <code>nil</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>flatMap and flattening the Optionals and Generics</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In this article, you've learned a few key points with regards to <strong><em>flatMap</em></strong> and its relationship to <strong>Generics</strong> and specifically <strong>Optionals</strong>:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>The term <strong><em>flatten</em></strong> in functional programming means to remove a secondary generic into a one-dimensional result such as returning a <code>Value?</code> rather than <code>Value??</code> or <code>[Value]</code> rather than [<code>[Value]]</code></li><li><strong><em>flatMap</em></strong> is to be used when you have an Array of Arrays and wish to flatten those Collections into a simple one-dimensional Array</li><li>Use <strong><em>flatMap</em></strong> when you are returning a result of the same <strong>Generic</strong> type as opposed to map when you are just returning a value such as a <strong>Promise</strong>, <strong>Future</strong>, or <strong>Combine</strong> <strong>Publisher</strong></li><li><strong><em>flatMap</em></strong> is important for <strong>Optionals</strong> in removing <strong>Double Optionals</strong> (i.e. <code><strong>Type??</strong></code>) from your code</li><li><strong>flatMap</strong> is also useful for <strong>Optional</strong> when you are mapping an <strong>Optional</strong> value and <strong>don't need to distinguish between a nil or invalid input value</strong></li><li><strong><em>compactMap</em></strong> is specifically for the removing nil results from an one-dimensional array</li><li>If a <strong><em>flatMap</em></strong> closure can return nil, return an empty Array instead</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Feel free to reach out if you have any additional questions <a rel="noreferrer noopener" href="https://twitter.com/leogdion" target="_blank">on Twitter <strong>@leogdion</strong> </a>or signup for the newsletter below to get the latest tutorials and guides on Swift development.</p>
<!-- /wp:paragraph -->

<!-- wp:jetpack/mailchimp {"interests":["aca014a037"],"signupFieldValue":"flatmap-double-optionals-functional-programming"} /-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>929</wp:post_id>
		<wp:post_date><![CDATA[2020-04-07 14:20:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-04-07 18:20:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-04-16 08:46:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-04-16 12:46:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[flatmap-double-optionals-functional-programming]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="functional-programming"><![CDATA[functional programming]]></category>
		<category domain="post_tag" nicename="optionals"><![CDATA[optionals]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[flatMap]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[It seems there's some confusion when it comes to flatMap and Optionals. In the end, using flatMap correctly will make your code easier to read.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[78]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[941]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-929]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Swift on ARM - Supporting ARM in Swift Package CI]]></title>
		<link>https://learningswift.brightdigit.com/swift-on-arm-supporting-arm-in-swift-package-ci/</link>
		<pubDate>Sat, 13 Jun 2020 22:01:34 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=982</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>In<a rel="noreferrer noopener" href="https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/" target="_blank"> a previous post,</a> I already talked about how to setup your Swift package for CI success. However, I recently came across how to run your CI in Travis and GitHub Actions to test on Linux ARM machines. In this article, I'm going to go over how to setup your Linux CI for ARM architecture as well as how to install Swift on those ARM machines.</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:heading -->
<h2>ARM in Travis-CI</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Currently on Travis-CI, different CPU architectures are supported in an alpha stage. However it is fairly easy to setup. Within your <code>travis-ci.yml</code> file, simply specify your CPU architecture. For instance, if you'd like to test on both with a build matrix, you can start your file with:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>arch:
  - amd64
  - arm64
os: linux  # different CPU architectures are only supported on Linux</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As you can see we are using the default version of Linux supported by Travis-CI. If you wish to expand your matrix, and specify different versions of Ubuntu, you can by:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>jobs:
  include:
    - os: linux
      dist: bionic
      arch: amd64
    - os: linux
      dist: focal
      arch: amd64
    - os: linux
      dist: bionic
      arch: arm64
    - os: linux
      dist: focal
      arch: arm64</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>This will allow us to test on four VMs each using Ubuntu 18.04 and Ubuntu 20.04 while testing both x86/AMD64 and 64-bit ARM. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>ARM in GitHub Actions</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Likewise, in GitHub Actions, you can do this, however you'll need to use QEMU to emulate the ARM architecture. Luckily there's a <a href="https://github.com/uraimo/run-on-arch-action" target="_blank" rel="noreferrer noopener">GitHub Action</a> to simplify this. Using<a href="https://github.com/uraimo/run-on-arch-action" target="_blank" rel="noreferrer noopener"> this run-on-arch-action</a>, we then add a script to install Swift and run our test.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For instance, I will setup a separate workflow file for ARM <code>arm.yml</code>. Inside I setup a build matrix for each version of Ubuntu as well as for ARM. As we'll see there are separate procedures for installing Swift on ARM, which we'll need to follow. Therefore, it's best to keep a separate workflow file for arm as opposed to standard x86.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Inside the workflow file <code>arm.yml</code>, I start off with:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>name: arm

on: &#91;push]

jobs:
  build:
    env:
      PACKAGE_NAME: {{ Insert Package Name Here }}
      SWIFT_VER: 5.2.4

    strategy:
      matrix:
        architecture:  &#91;aarch64]
        distribution: &#91;ubuntu16.04,ubuntu18.04,ubuntu20.04]
    steps:
    - uses: actions/checkout@v2
    - name: Build with Swift on arm
      uses: uraimo/run-on-arch-action@master
      env:
         {{ any environment keys here }}
      with:
        architecture: ${{ matrix.architecture }}
        distribution: ${{ matrix.distribution }}
        run: |
...</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now we have the beginning of the setup for Travis-CI and GitHub for ARM on Linux. However, the challenge will be installing Swift.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Preparing Swift on ARM</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Before running your test and building your Swift package, you need make sure your CI instance is ready. This includes installing prerequisites and installing Swift. There are a few differences in preparing your instance on GitHub and Travis-CI due to how they implement the different CPU architectures. However I will do my best to note those differences below.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Installing Prerequisites on GitHub</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Since Travis-CI uses LXD and the GitHub Action uses QEMU, it seems GitHub requires more prerequisites to install Swift. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>With Travis-CI, we can simply follow guidelines of what required for various Linux distributions. However GitHub needs a few other requirements:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><code>curl</code>, <code>sudo</code> which are need for installation are not included</li><li><code>tzdata</code> which is required for installing Swift requires the time zone be set beforehand. Otherwise, the installation will stall on a terminal dialog.</li><li>In order dynamically install prerequisites based on Linux distribution, we need <code>lsb_release</code> installing to do some logic in our script.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Therefore before installing our prerequisites we need to do this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code># tell the installation this is non-interactive
          export DEBIAN_FRONTEND=noninteractive
# set your time zone here
          ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
# install sudo, curl, lab-release, and clang
          apt update
          apt install -y curl lsb-release sudo clang
# grab the release name, number in dot (18.04) and non-dot (1804 format
          RELEASE_DOT=$(lsb_release -sr)
          RELEASE_NUM=${RELEASE_DOT//&#91;-._]/}
          RELEASE_NAME=$(lsb_release -sc)</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>Installing Swift Prerequisites</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Following <a href="https://swift.org/getting-started/#installing-swift" target="_blank" rel="noreferrer noopener">the guidelines provided by the Swift team,</a> we can simply check the Ubuntu version and install our prerequisites. Here's a snippet which checks for Ubuntu Focal Fossa 20.04, and installs the required packages:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>          if &#91;&#91; $RELEASE_DOT == "20.04" ]]; then
            sudo apt-get -y install \
                    binutils \
                    git \
                    gnupg2 \
                    libc6-dev \
                    libcurl4 \
                    libedit2 \
                    libgcc-9-dev \
                    libpython2.7 \
                    libsqlite3-0 \
                    libstdc++-9-dev \
                    libxml2 \
                    libz3-dev \
                    pkg-config \
                    tzdata \
                    zlib1g-dev
            elif &#91;&#91; $RELEASE_DOT == "16.04" ]]; then
...</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>On GitHub, after installing <code>tzdata</code> make sure run:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>dpkg-reconfigure --frontend noninteractive tzdata</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now we can move forward with actually installing Swift.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Installing Swift on ARM</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Installing Swift on ARM will simply need adding the repository and installing via <code>apt</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>curl -s https://packagecloud.io/install/repositories/swift-arm/release/script.deb.sh | sudo bash
apt-get install -y swift5</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>While typically, you may need to add the <code>PATH</code>, since we are using <code>apt-get install</code> <code>swift</code> is already added to our path.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you are using a single script on Travis-CI for both amd64 and arm64, you can use some logic to differentiate the installation process using the <code>TRAVIS_CPU_ARCH</code> variable:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  if &#91;&#91; $TRAVIS_CPU_ARCH == "arm64" ]]; then
    curl -s https://packagecloud.io/install/repositories/swift-arm/release/script.deb.sh | sudo bash
    sudo apt-get install swift5
  else 
     wget https://swift.org/builds/swift-${SWIFT_VER}-release/ubuntu${RELEASE_NUM}/swift-${SWIFT_VER}-RELEASE/swift-${SWIFT_VER}-RELEASE-ubuntu${RELEASE_DOT}.tar.gz
     tar xzf swift-${SWIFT_VER}-RELEASE-ubuntu${RELEASE_DOT}.tar.gz
  fi </code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>For this point, you can run <code>swift build</code> or <code>swift test</code> easily in your CI's build process.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Getting Ready for Swift on ARM</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>With the increased use of ARM on a variety of devices, it's important to make sure your Swift package works everywhere. For instance, you may want to build an IOT device and make sure your package works on a Raspberry PI. If that's the case, this is great way to get started. If you'd like more guidance, feel free to look at my current example on EggSeed and other Swift Packages. Once this is implemented on your CI setup, you can be confident your Swift package is ARM-ready.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>982</wp:post_id>
		<wp:post_date><![CDATA[2020-06-13 18:01:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-13 22:01:34]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-13 18:44:12]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-13 22:44:12]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[swift-on-arm-supporting-arm-in-swift-package-ci]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[swift on arm]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[In this article, I'm going to go over how to setup your CI and install Swift in Travis-CI and GitHub Actions for ARM architectures.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[990]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-982]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Combine & CoreLocation, Part 3 - Integrations with flatMap]]></title>
		<link>https://learningswift.brightdigit.com/combine-corelocation-swiftui-delegates/</link>
		<pubDate>Tue, 01 Sep 2020 11:38:33 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=1016</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>In our <a href="https://learningswift.brightdigit.com/combine-corelocation-receiving-handling-events/" target="_blank" rel="noreferrer noopener">previous post</a>, I explained how to hook up our new CLManagerDelegate publishers for CLAuthorizationStatus to the ObservableObject using Combine. In this post, we be transforming the CLLocation publisher data into something useful using flatMap and the built-in publisher, Sequence.</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:list -->
<ul><li><a href="https://learningswift.brightdigit.com/combine-corelocation-publishers-delegates/" target="_blank" rel="noreferrer noopener">Creating Publishers from Delegates</a></li><li><a href="https://learningswift.brightdigit.com/combine-corelocation-receiving-handling-events/" target="_blank" rel="noreferrer noopener">Using Function Reactive Programming to Transform Values</a></li><li><strong>Understanding FlatMap and Built-In Publishers</strong></li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Using Combine for Complex Transformations</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While we can simply assign the value from the authorizationPublisher to our authorizationStatus property, locationPublisher requires more work.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CoreLocationObject: ObservableObject {
  @Published var location: CLLocation?
  ...
}

protocol CLLocationManagerCombineDelegate: CLLocationManagerDelegate {
  func locationPublisher() -> AnyPublisher&lt;&#91;CLLocation], Never>
  ...
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>While our locationPublisher returns a <code>[CLLocation]</code> result, our location property is <code>CLLocation?</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>That is to say we are going to need to do some functional programming to transform the result of our publisher:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Turn the Array itself into a Sequential Publisher of each value</li><li>Use <code>flatMap</code> to return a new Publisher</li><li>Cast the CLLocation into the matching <code>CLLocation?</code> (i.e. <code>Optional&lt;CLLocation&gt;</code>)</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Here is our result:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>      locationPublisher
        // convert the array of CLLocation into a Publisher itself
        .flatMap(Publishers.Sequence.init(sequence:))
        // in order to match the property map to Optional
        .map { $0 as CLLocation? }
        // since this is used in the UI,
        //  it needs to be on the main DispatchQueue
        .receive(on: DispatchQueue.main)
        // store the value in the location property
        .assign(to: &amp;$location)
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Let’s break each of these steps down starting with <code>Publishers.Sequence</code>. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Built-In Publishers from Combine</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Combine comes with several built-in Publishers we can use. </p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><code>Just</code> - single value</li><li><code>Future</code> - handling asynchronous callbacks</li><li><code>Sequence</code> - publishing individual values from a sequence in order</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>We already talked about <code>Just</code> which takes in a single value. Another popular built-in publisher to use with asynchronous calls is <code>Future</code> which takes in a result type for when a call is completed. In this case, we are using <code>Sequence</code> which transforms a sequence type object into a Publisher stream of sequential values. Therefore when CLLocationManagerDelegate receives multiple locations, the publisher acts as if each location from that array received in order.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>However, as <code>Just</code> is a Publisher so is <code>Sequence</code>, therefore we can not use <code>.map</code> but <code>.flatMap</code> since we want the values from the Publisher not the publisher itself. <code>flatMap</code> is especially powerful in Combine since it allows us to integrate Publishers from multiple technologies.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Integrations in Combine</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://learningswift.brightdigit.com/flatmap-double-optionals-functional-programming/" target="_blank" rel="noreferrer noopener">I’ve talked previously about what <code>flatMap</code> does in the functional sense whether that be Arrays or Optionals.</a> The same goes for Publishers as well.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Here’s an example of a piece of code to download json from <strong><a href="https://baconipsum.com/json-api/" target="_blank" rel="noreferrer noopener">the Bacon Ipsum JSON API</a></strong>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  let url = URL(string: "https://baconipsum.com/api/?type=all-meat&amp;sentences=1&amp;format=json")!
   
  let urlPublisher = URLSession.shared.dataTaskPublisher(for: url)
    .map(\.data)
    .decode(type: &#91;String].self, decoder: JSONDecoder())
    .replaceError(with: &#91;String]())
    .compactMap{ $0.first }
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>This uses the dataTaskPublisher available on URLSession and transforms it to a single String. Here is step-by-step how:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Create DataTaskPublisher from URL</li><li>Use the <code>map</code> function to get the <code>data</code> property from the tuple</li><li>Decode the JSON into an Array of Strings</li><li>In order to assign the value, we change the Failure type to Never. In this case, we are replacing each Error instance with an empty Array of Strings.</li><li>Lastly, we use compactMap to get the first string and therefore ignore all empty Arrays.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Depending on your app and the data you are looking for, you’ll want change the transformations and error handle but typically this is the basics for handling a data task in Combine. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Combine System Publishers with <code>flatMap</code> </h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Along with URLSession.dataTaskPublisher there are other System publishers available to use:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><code>URLSession.dataTaskPublisher</code></li><li><code>NotificationCenter.publisher</code></li><li>Key Value Observation via <code>NSObject.publisher</code></li><li><code>Timer.publisher</code></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>With this in mind, let’s use the Timer publisher and use flatMap to update our String from the Bacon Ipsum JSON API at a regular interval. Firstly, let’s create a Timer publisher:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>let timerInterval:TimeInterval = 1.0
let timerPublisher = Timer.publish(every: timerInterval, on: .current, in: .default)
      .autoconnect()</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this instance, we are creating a Timer publisher on the current RunLoop using the default mode for every 1 second. Lastly is <code>autoconnect</code> which ensure the publisher connects when subscribed.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Now we can use flatMap to initiate a new dataTaskPublisher each second:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>timerPublisher.flatMap {_ in urlPublisher }
      .receive(on: DispatchQueue.main)
      .assign(to: &amp;$publishedStringProperty)
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>With this we can automate the assignment of the String value, as each dataTask is completed. In other words, our string property will update every second as the url is called.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Let’s again take a look at our code for updating CLLocation:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>      locationPublisher
        // convert the array of CLLocation into a Publisher itself
        .flatMap(Publishers.Sequence.init(sequence:))
        // in order to match the property map to Optional
        .map { $0 as CLLocation? }
        // since this is used in the UI,
        //  it needs to be on the main DispatchQueue
        .receive(on: DispatchQueue.main)
        // store the value in the location property
        .assign(to: &amp;$location)
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>By using Sequence to create a Publisher and flatMap to flatten and return the values from the Sequence Publisher, we have transformed the value from <code>[CLLocation]</code> to <code>CLLocation</code> without losing any data. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>However the <code>location</code> property type and the Publisher result type must match. Therefore since our property takes into not having <code>CLLocation</code> as a possibility, we need to transform the <code>CLLocation</code> to an <code>Optional&lt;CLLocation&gt;</code> (i.e. <code>CLLocation?</code>).</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Combine with other Delegates</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While I've demonstrated how to use CoreLocation with Combine, this can be useful for other uses of Delegation APIs.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Recently, I've used these <em>Publicists</em> in my app, <a href="https://heartwitch.app" target="_blank" rel="noreferrer noopener">Heartwitch</a>, which is an Apple Watch app for broadcasting your heart rate to a live stream, as you are playing games or doing presentations. Likewise with HealthKit workouts, I've used the same pattern of creating publishers.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...   
    public let coalesce: CoalescePublicist
    public let failurePublisist: FailurePublicist
    public let fullIdentifier: FullIdentifierPublicist
    public let metadata: MetadataPublicist
    public let optional: OptionalPublicist
    public let transition: TransitionPublicist
    public let workoutCreation: WorkoutCreationPublicist
    public let workoutDataUpdate: WorkoutDataUpdatePublicist
    public let workoutStart: WorkoutStartPublicist
...</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>This same pattern can be used with other Delegation APIs such as:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>CoreBluetooth</li><li>UINotificationCenter</li><li>AVFoundation etc...</li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Other Resources</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you are interested in catching this in video format, be sure to check out my presentation from 360iDev 2020:</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {"url":"https://www.youtube.com/watch?v=zkFxOlmLWoA","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=zkFxOlmLWoA
</div><figcaption>Combine-ing the Old with the New from 360iDev</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>If you are interested in learning more about Combine, I highly recommend checking out:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a href="https://heckj.github.io/swiftui-notes/" target="_blank" rel="noreferrer noopener">Using Combine by Joseph Heck</a></li><li><a href="https://www.donnywals.com" target="_blank" rel="noreferrer noopener">Donny Wals</a> and <a href="https://practicalcombine.com" target="_blank" rel="noreferrer noopener">His Book<em> Practical Combine</em></a></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Donny also appeared on my podcast EmpowerApps.Show:</p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<iframe width="100%" height="180" frameborder="no" scrolling="no" seamless="" src="https://share.transistor.fm/e/8442feb7"></iframe>
<!-- /wp:html -->

<!-- wp:paragraph -->
<p>For code samples, check out my repositories here:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a href="https://github.com/leogdion/PublisherSample.playground">https://github.com/leogdion/PublisherSample.playground</a></li><li><a href="https://github.com/brightdigit/CombineAPIHarvesterApp">https://github.com/brightdigit/CombineAPIHarvesterApp</a></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>If you have any questions or comments on this series, reach out to me on Twitter <a href="http://twitter.com/leogdion" target="_blank" rel="noreferrer noopener">@leogdion</a>. If you are interested in learning more about Combine, drop me your email and I'll let you know when the next Combine or Swift article is out.</p>
<!-- /wp:paragraph -->

<!-- wp:block {"ref":1064} /-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1016</wp:post_id>
		<wp:post_date><![CDATA[2020-09-01 07:38:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-09-01 11:38:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-03-29 12:27:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-03-29 16:27:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[combine-corelocation-swiftui-delegates]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="watch"><![CDATA[Apple Watch]]></category>
		<category domain="post_tag" nicename="combine"><![CDATA[combine]]></category>
		<category domain="post_tag" nicename="functional-programming"><![CDATA[functional programming]]></category>
		<category domain="post_tag" nicename="gcd"><![CDATA[GCD]]></category>
		<category domain="category" nicename="guides"><![CDATA[Guides]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[19]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[combine]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Most of the older APIs from Apple use the Delegation Pattern. The challenge is adapting this pattern for SwiftUI through Combine.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[73]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_is_cornerstone]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1079]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-1016-1604765182]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Combine & CoreLocation, Part 2 - Receiving & Handling Events]]></title>
		<link>https://learningswift.brightdigit.com/combine-corelocation-receiving-handling-events/</link>
		<pubDate>Mon, 24 Aug 2020 04:31:00 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=1022</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p><a href="https://learningswift.brightdigit.com/combine-corelocation-publishers-delegates/" target="_blank" rel="noreferrer noopener">In our previous post,</a> we talked about how to build a Publisher Factory or Publicist. In this post, we'll talk about how receiving and handling Events in our ObservableObject from our new Publicist class.</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:list -->
<ul><li><a rel="noreferrer noopener" href="https://learningswift.brightdigit.com/combine-corelocation-publishers-delegates/" target="_blank">Creating Publishers from Delegates</a></li><li><strong>Using Function Reactive Programming to Transform Values</strong></li><li><a href="https://learningswift.brightdigit.com/combine-corelocation-swiftui-delegates/">Understanding flatMap and Built-In Publishers (Part 3)</a></li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Receiving and Handling Events in our ObservableObject</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Our <code>ObservableObject</code> needs to accomplish a few things to update our SwiftUI while listening to our <em>CoreLocation</em> publishers. First of all we need to:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Create the CoreLocation Manager</li><li>Create our CoreLocation Publicist</li><li>Connect the Publicist as the Delegate of the Manager</li><li>Create our Authorization Status and Location Publishers</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>With this in mind, here is how that looks:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CoreLocationObject: ObservableObject {
  @Published var authorizationStatus = CLAuthorizationStatus.notDetermined
  @Published var location: CLLocation?

  let manager: CLLocationManager
  let publicist: CLLocationManagerCombineDelegate

  var cancellables = &#91;AnyCancellable]()

  init() {
    let manager = CLLocationManager()
    let publicist = CLLocationManagerPublicist()

    manager.delegate = publicist

    self.manager = manager
    self.publicist = publicist

    let authorizationPublisher = publicist.authorizationPublisher()
    let locationPublisher = publicist.locationPublisher()
	...
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Next, we can actually deal with receiving and handling events from our Publishers. Firstly, let’s deal with the <code>CLAuthorizationStatus</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Receiving and Handling Events with Sink and Assign</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>As far the CLAuthorizationStatus, there are two things we need to do when the authorization status changes:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Trigger Location Update when <code>CLAuthorizationStatus</code> is valid</li><li>Assign the <code>CLAuthorizationStatus</code> to our <code>@Published CLAuthorizationStatus</code> Property <code>authorizationStatus</code></li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>Using Sink For Calling Methods</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Let’s first deal with triggering location updates by creating a method to begin those updates:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CoreLocationObject: ObservableObject {
  @Published var authorizationStatus = CLAuthorizationStatus.notDetermined
  @Published var location: CLLocation?

  let manager: CLLocationManager

...

  func beginUpdates(_ authorizationStatus: CLAuthorizationStatus) {
    if authorizationStatus == .authorizedAlways || authorizationStatus == .authorizedWhenInUse {
      manager.startUpdatingLocation()
    }
  }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Our <code>beginUpdate</code> method will take in the <code>CLAuthorizedStatus</code> as it comes in from the <code>Publisher</code>. As a result,<strong> if the status allows for location update then it calls <code>startUpdatingLocation</code> on the <code>CLLocationManager</code>. </strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>With this in mind, let’s connect the <code>authorizationPublisher</code> to the <code>beginUpdates</code> method:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CoreLocationObject: ObservableObject {

  ...
  var cancellables = &#91;AnyCancellable]()

  init() {
    let publicist = CLLocationManagerPublicist()
   
    ...
    
    let authorizationPublisher = publicist.authorizationPublisher()

    // trigger an update when authorization changes
    authorizationPublisher
      .sink(receiveValue: beginUpdates)
      .store(in: &amp;cancellables)
	...
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In this case, we are using <code>sink</code> and passing a reference to our new method. <code>sink</code> returns a <code>Cancellable</code> which we’ll need to make sure is disposed properly. Therefore, we use <code>.store</code> to make sure that <code>Cancellable</code> is stored correctly in our `cancelables` <code>Array</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Now we should be correctly starting location updates when permission is granted. Next, let’s store the <code>CLAuthorizationStatus</code> in our <code>@Published</code> property so we can display it in our SwiftUI view.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Receiving and Handling Events with Assign (in iOS 13 and iOS 14)</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><strong>One of the first things you learn as an iOS developer using UIKit is the importance of making UI updates on the main dispatch queue. </strong>In other words, failure to do this results in incorrect UI updates or even crashing your app. Likewise, in SwiftUI, you need to specify UI updates on the main dispatch queue. Therefore we can use <code>receive</code> to ensure updates are on the main <code>DispatchQueue</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...
      authorizationPublisher
        // since this is used in the UI,
        //  it needs to be on the main DispatchQueue
        .receive(on: DispatchQueue.main)
		...
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>As far as assigning we have a few options, we can stick with  <code>sink</code> to assign our value the published property:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...
      authorizationPublisher
        // since this is used in the UI,
        //  it needs to be on the main DispatchQueue
        .receive(on: DispatchQueue.main)
		.sink(receiveValue: {
          self.authorizationStatus = $0
        })
...
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>However, we could simplify this with <code>assign</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>...
      authorizationPublisher
        // since this is used in the UI,
        //  it needs to be on the main DispatchQueue
        .receive(on: DispatchQueue.main)
        // store the value in the authorizationStatus property
        .assign(to: &amp;$authorizationStatus)
...
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p><a href="https://developer.apple.com/documentation/combine/publisher/assign(to:)" target="_blank" rel="noreferrer noopener">This new assign available in all the new 2020 OSes (iOS 14, macOS 11, watchOS 7, etc…)</a> allows us to assign the value directly to the publisher using the &amp; (for an in-out parameter) and $ (for the publisher).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Additionally no <code>Cancellable</code> is returned and therefore not needed to be stored.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Sink vs Assign when Receiving and Handling Events</h2>
<!-- /wp:heading -->

<!-- wp:image {"align":"center","id":1062,"sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/Combine-ing-the-Old-with-the-New.001-1024x204.png" alt="" class="wp-image-1062"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Choosing the correct method can be difficult but here's some guidelines:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>If you are doing some additional logic besides just assigning a value, use <code>sink</code></li><li>For just assigning a value, use <code>assign</code></li><li>When assigning a value which is being used directly by the UI (i.e. UIKit View or SwiftUI View), use <a href="https://developer.apple.com/documentation/combine/publisher/receive(on:options:)" target="_blank" rel="noreferrer noopener"><code>.receive(on: DispatchQueue.main)</code></a></li><li>Make sure when using <code>sink</code> or the <a href="https://developer.apple.com/documentation/combine/publisher/assign(to:on:)" target="_blank" rel="noreferrer noopener">2019 version of <code>assign</code></a> (i.e. <code>assign(to:on:)</code>), save the resulting <code>Cancellable</code> by <a href="https://developer.apple.com/documentation/combine/anycancellable/store(in:)-6cr9i" target="_blank" rel="noreferrer noopener">using <code>.store</code></a></li><li>When there's more than one <code>AnyCancellable</code> property, consider using a <a href="https://developer.apple.com/documentation/combine/anycancellable/store(in:)-3hyxs"><code>Set</code> or <code>Array</code> for storing the <code>Cancellables</code></a> </li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>In the next blog post, I'll cover some more advance functional programming techniques in Combine when we transform our <code>CLLocation</code> to something more useful.</p>
<!-- /wp:paragraph -->

<!-- wp:block {"ref":1064} /-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1022</wp:post_id>
		<wp:post_date><![CDATA[2020-08-24 00:31:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-24 04:31:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-03-29 12:27:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-03-29 16:27:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[combine-corelocation-receiving-handling-events]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="watch"><![CDATA[Apple Watch]]></category>
		<category domain="post_tag" nicename="combine"><![CDATA[combine]]></category>
		<category domain="post_tag" nicename="functional-programming"><![CDATA[functional programming]]></category>
		<category domain="post_tag" nicename="gcd"><![CDATA[GCD]]></category>
		<category domain="category" nicename="guides"><![CDATA[Guides]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[19]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Receiving and Handling Events]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[In our previous post, we talked about how to build a Publisher Factory. Here, we'll talk about how to use the factory for receiving and handling events.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[71]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_dp_original]]></wp:meta_key>
		<wp:meta_value><![CDATA[1016]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1062]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-1022-1604014912]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Combine & CoreLocation, Part 1 - Publishers & Delegates]]></title>
		<link>https://learningswift.brightdigit.com/combine-corelocation-publishers-delegates/</link>
		<pubDate>Wed, 19 Aug 2020 04:31:00 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=1023</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Most of the APIs from Apple come from an era of Objective-C and the Delegation Pattern. With this in mind, the challenge is figuring how to adapt for SwiftUI. Specifically we want to create Publishers from delegates using Combine.</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:paragraph -->
<p>For instance, <a href="https://heartwitch.app" target="_blank" rel="noreferrer noopener">my app Heartwitch is an Apple Watch app for live streamers</a>. In this case, It uses HealthKit which implants the delegation pattern frequently. Additionally, I am using newer technologies such as Vapor 4, Independent Watch Apps, and most importantly SwiftUI.</p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p>I recently covered <a href="https://www.youtube.com/watch?v=zkFxOlmLWoA" target="_blank" rel="noreferrer noopener">this topic at 360iDev 2020</a>, so in this series of articles, I’d like to go into detail regarding the process. That is the process of adapting an older API for Combine. Specifically <strong>we are going to be building a basic SwiftUI app which displays your latitude and longitude with CoreLocation. </strong>This includes:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Creating Publishers from Delegates</li><li><a href="https://learningswift.brightdigit.com/combine-corelocation-receiving-handling-events/">Using Function Reactive Programming to Transform Values (Part 2)</a></li><li><a href="https://learningswift.brightdigit.com/combine-corelocation-swiftui-delegates/">Understanding FlatMap and Built-In Publishers (Part 3)</a></li></ul>
<!-- /wp:list -->

<!-- wp:group -->
<div class="wp-block-group"><div class="wp-block-group__inner-container"><!-- wp:paragraph -->
<p>For this part, we'll be getting into how to create a <code>Protocol</code> and <code>Class</code> which will act as a go-between for the <em>Delegation Pattern</em> and the <em>Reactive Functional Programming </em>of <strong>SwiftUI</strong> and <strong>Combine</strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Gonna Delegate Like It’s 2009</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For over a decade, Apple frequently used the Delegation Pattern for giving developers the ability to respond, update, and act in place of a UI object. This pattern has a plethora of benefits especially in Objective-C. However, with Swift and especially SwiftUI, this pattern becomes awkward.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This is where it becomes necessary to make a delegate respond in such a way that SwiftUI can handle updates.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>With Apple’s older APIs, we typically see this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>protocol NSDelegate : NSObjectProtocol {
  func manager(_ manager: NSManager, doneWith data: AnyObject)
  func manager(_ manager: NSManager, grantedPermission: Bool)
}
class NSManager : NSObject {
  weak var delegate : NSDelegate?
  
  func requestAuthorization() {}
  func doThing () {}
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In the case of <strong>CoreLocation</strong> we see this:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>protocol CLLocationManagerDelegate : NSObjectProtocol {
  func locationManager(_: CLLocationManager, didUpdateLocations locations: &#91;CLLocation])
  func locationManager(_: CLLocationManager, didChangeAuthorization status: CLAuthorizationStatus)
}
class CLLocationManager : NSObject {
  weak var delegate : CLLocationManagerDelegate?
  
  func requestWhenInUseAuthorization() {}
  func startUpdatingLocation () {}
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In other words, we’ll need to create Combine <em>Publishers</em> which our <code>ObservableObject</code> can listen or react to. Once the <code>ObservableObject</code> reacts properly, then the <code>View</code> will update accordingly. In the end, we should see this in our application:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":1036,"sizeSlug":"medium"} -->
<div class="wp-block-image"><figure class="aligncenter size-medium"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/CoreLocation-AppPreview-300x125.jpg" alt="What we building" class="wp-image-1036"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Before we setup our publishers, let's scaffold our <code>View</code> and <code>ObservableObject</code>.</p>
<!-- /wp:paragraph --></div></div>
<!-- /wp:group -->

<!-- wp:group -->
<div class="wp-block-group"><div class="wp-block-group__inner-container"><!-- wp:heading -->
<h2>SwiftUI Scaffolding</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Let's first start by building our SwiftUI View. In this case, we'll be creating a SwiftUI view along with an <code>ObservableObject</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>struct LocationView: View {
  // CLLocationManager is basically a singleton so an EnvironmentObject ObservableObject makes sense
  @EnvironmentObject var locationObject: CoreLocationObject
  var body: some View {
    VStack {
      // use our extension method to display a description of the status
      Text("\(locationObject.authorizationStatus.description)")
        .onTapGesture {
          self.locationObject.authorize()
        }
      // use Optional.map to hide the Text if there's no location
      self.locationObject.location.map {
        Text($0.description)
      }
    }
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>This <code>LocationView</code> will simply display one line with a description of the location with a line describing the <code>CLAuthorizationStatus</code> using this extension:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>extension CLAuthorizationStatus: CustomStringConvertible {
  public var description: String {
    switch self {
    case .authorizedAlways:
      return "Always Authorized"
    case .authorizedWhenInUse:
      return "Authorized When In Use"
    case .denied:
      return "Denied"
    case .notDetermined:
      return "Not Determined"
    case .restricted:
      return "Restricted"
    @unknown default:
      return "🤷‍♂️"
    }
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now let's go ahead and define our <code>ObservableObject</code>, named <code>CoreLocationObject</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>import Combine
import CoreLocation
import SwiftUI
class CoreLocationObject: ObservableObject {
  @Published var authorizationStatus = CLAuthorizationStatus.notDetermined
  @Published var location: CLLocation?
  init() { }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Lastly, make sure that you set the <code>EnvironmentObject</code> in your application using:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>LocationView().environmentObject(CoreLocationObject())</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Now, we have our scaffolding setup, let's plug-in <em>CoreLocation</em>.</p>
<!-- /wp:paragraph --></div></div>
<!-- /wp:group -->

<!-- wp:heading -->
<h2>Extending Delegates into Combine Publishers</h2>
<!-- /wp:heading -->

<!-- wp:image {"id":1040,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/Combine-ing-the-Old-with-the-New-360iDev-August-2020.001-2-1024x538.png" alt="How to interface between the delegate and the ObservableObject" class="wp-image-1040"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>With the Delegation Pattern, the Delegate (in this case <code>CoreLocationManagerDelegate</code>) will receive location updates. Therefore it is the ideal object to create publishers for our <code>ObservableObject</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In order for our <code>ObservableObject</code> to react to <em>CoreLocation</em> changes, the delegate will have to create <em>Publishers</em> for us. With this in mind, I have extended to delegate to be a <em><strong>Publicist</strong></em>. That is to say the <em>Delegate</em> will also be a <em>Publisher Factory</em>.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>protocol CLLocationManagerCombineDelegate: CLLocationManagerDelegate {
  func authorizationPublisher() -> AnyPublisher&lt;CLAuthorizationStatus, Never>
  func locationPublisher() -> AnyPublisher&lt;&#91;CLLocation], Never>
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In the case of our application, we are displaying the authorization status of <em>Core Location </em>as well as the latitude and longitude. Therefore, we only need two methods implemented for our publishers.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Here is the implementation of our new protocol:	</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CLLocationManagerPublicist: NSObject, CLLocationManagerCombineDelegate {
  let authorizationSubject = PassthroughSubject&lt;CLAuthorizationStatus, Never>()
  let locationSubject = PassthroughSubject&lt;&#91;CLLocation], Never>()
  func authorizationPublisher() -> AnyPublisher&lt;CLAuthorizationStatus, Never> {
    return Just(CLLocationManager.authorizationStatus())
      .merge(with:
        authorizationSubject.compactMap { $0 }
      ).eraseToAnyPublisher()
  }
  func locationPublisher() -> AnyPublisher&lt;&#91;CLLocation], Never> {
    return locationSubject.eraseToAnyPublisher()
  }
  func locationManager(_: CLLocationManager, didUpdateLocations locations: &#91;CLLocation]) {
    locationSubject.send(locations)
  }
  func locationManager(_: CLLocationManager, didFailWithError _: Error) {
    // Implement to avoid crashes
    // Extra Credit: Create a publisher for errors :/
  }
  func locationManager(_: CLLocationManager, didChangeAuthorization status: CLAuthorizationStatus) {
    authorizationSubject.send(status)
  }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Let’s breakdown how this class works.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The Power of Type Erasing Publishers</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><strong>Our Publicist doesn’t need to hold onto any values. In the end, it solely serves the purpose of transforming data from the <code>CoreLocationManager</code> to the <code>ObservableObject</code>.</strong> For this reason, we’ll be using a <code>PassthroughSubject</code> for the <code>CLLocation</code> and <code>CLAuthorizationStatus</code>. That is to say, <code>PassthroughSubject</code> doesn't hold any values as they receive values but passes them on. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>With the <code>PassthroughSubject</code> properties in place, our delegate can send the values received from the delegate methods to the subjects. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Creating our first <em>publisher</em> for <code>CLLocation</code> is fairly simple:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>class CLLocationManagerPublicist: NSObject, CLLocationManagerCombineDelegate {
...
  let locationSubject = PassthroughSubject&lt;&#91;CLLocation], Never>()
  func locationPublisher() -> AnyPublisher&lt;&#91;CLLocation], Never> {
    return locationSubject.eraseToAnyPublisher()
  }
  func locationManager(_: CLLocationManager, didUpdateLocations locations: &#91;CLLocation]) {
    locationSubject.send(locations)
  }
...
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>What’s important to realize is that we need to implement type erasure using <code>eraseToAnyPublisher</code>. The introduction of SwiftUI and Combine included improvements to Swift. These improvement allow for powerful transformations which can result in fairly complex Generic Types. For instance our <code>authorizationPublisher</code> has a return type <code>AnyPublisher</code>: </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  func authorizationPublisher() -> AnyPublisher&lt;CLAuthorizationStatus, Never> {
    return Just(CLLocationManager.authorizationStatus())
      .merge(with:
        authorizationSubject.compactMap { $0 }
      ).eraseToAnyPublisher()
  }</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Without <code>eraseToAnyPublisher</code>, the return type would be:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>Publishers.Merge&lt;Just&lt;CLAuthorizationStatus>, Publishers.CompactMap&lt;PassthroughSubject&lt;CLAuthorizationStatus, Never>, CLAuthorizationStatus>></code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Likewise with the <code>locationPublisher</code>, the return type would be:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>PassthroughSubject&lt;&#91;CLLocation], Never></code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>In the end, this makes creating Protocols and Return Types fairly complex. <strong>As far as the <code>ObservableObject</code> is concerned, it doesn’t care how the publisher is transformed but the result types returned. </strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Therefore our Protocol only needs a <code>AnyPublisher</code> return type. In the end, we can both simplify and hide the method of functional transformation using <code>eraseToAnyPublisher</code>. Likewise, the implementation calls <code>eraseToAnyPublisher</code> to reduce the return type and match the Protocol's method signature. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Now that we have figured out how to creating matching Publisher types, let’s transform <code>CLAuthorizationStatu</code>s so it is usable within the view.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Transforming Authorization Status into a Publisher</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>While our <code>locationSubject</code> reflects the values from <em>CoreLocation</em>, the <code>authorizationSubject</code> will be out of sync from the reality of <em>CoreLocation</em>’s status. For this reason, we’ll need to write some code include the initial status along with whatever the <code>PassthroughSubject</code> receives.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>  func authorizationPublisher() -> AnyPublisher&lt;CLAuthorizationStatus, Never> {
    return Just(CLLocationManager.authorizationStatus())
      .merge(with:
        authorizationSubject
      ).eraseToAnyPublisher()
  }</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>While <code>CoreLocationManagerDelegate</code> sends updates to <code>authorizationStatus</code>, we need to have access to the initial status via <code>CLLocationManager.authorizedStatus</code>. Luckily, Combine includes a built-in <em>Publisher</em> for single values using <code>Just</code>. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>Just</code> gives us the initial value published however we need to include the remaining published values from our <code>PassthroughSubject</code>. For this reason, we can use <code>merge</code> to join the intial value with the result from the our <code>authorizationSubject</code>:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":1044,"sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2020/08/optimized.gif" alt="How to transform CLAuthorizationStatus into something useful" class="wp-image-1044"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>We have the publisher factories setup now!</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>What's Next?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In our next part in this series, we'll learn how to use this implementation in our <code>ObservableObject</code> <code>CoreLocationObject</code>. <strong>Specifically, we'll be getting into power of function programming within Reactive Functional Programming.</strong> Enjoy!</p>
<!-- /wp:paragraph -->

<!-- wp:block {"ref":1064} /-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1023</wp:post_id>
		<wp:post_date><![CDATA[2020-08-19 00:31:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-19 04:31:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-03-29 12:27:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-03-29 16:27:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[combine-corelocation-publishers-delegates]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="watch"><![CDATA[Apple Watch]]></category>
		<category domain="post_tag" nicename="combine"><![CDATA[combine]]></category>
		<category domain="post_tag" nicename="functional-programming"><![CDATA[functional programming]]></category>
		<category domain="post_tag" nicename="gcd"><![CDATA[GCD]]></category>
		<category domain="category" nicename="guides"><![CDATA[Guides]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[19]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[publishers]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Many APIs from Apple come from an era of Objective-C and Delegate Patterns. How do we adapt those APIs for SwiftUI and create Publishers from delegates?]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[78]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_dp_original]]></wp:meta_key>
		<wp:meta_value><![CDATA[1016]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1040]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-1023-1604765296]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Swift Packages - Dependency Management of the Future]]></title>
		<link>https://learningswift.brightdigit.com/swift-dependency-management-spm/</link>
		<pubDate>Mon, 03 May 2021 14:46:49 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=1129</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Package Management has been around for decades. There’s everything from APT to Maven to chocolatey. For those who work in the Apple space we are probably more familiar with Cocoapods and Homebrew. However since the introduction of Swift, the Apple team has given us a new package manager: <strong>Swift Package Manager</strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:more -->
<!--more-->
<!-- /wp:more -->

<!-- wp:paragraph -->
<p>In this article, I'll cover:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>what iOS and other Swift developers can use</li><li>the advantages of SPM (Swift Package Manager) from its predecessors</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>First, let's get into <strong>why you'd want to use any package manager in the first place</strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:gallery {"ids":[1145],"linkTo":"none","align":"wide"} -->
<figure class="wp-block-gallery alignwide columns-2 is-cropped"><ul class="blocks-gallery-grid"><li class="blocks-gallery-item"><figure><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/030-puzzle-17054.png" alt="" data-id="1146" class="wp-image-1146"/></figure></li><li class="blocks-gallery-item"><figure><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/029-delivery-17051.png" alt="" data-id="1145" class="wp-image-1145"/></figure></li></ul></figure>
<!-- /wp:gallery -->

<!-- wp:heading -->
<h2>Modularity and Reuse - Benefits of Package Management</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><strong>One key component of package management is the ability to share code or an executable</strong> - whether that's publicly or just within your internal dev team. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Part of doing that is breaking your code into separate pieces. This is where package managers encourage <strong>modularization</strong>. In other words components can be separated out, tested properly, and used by others. </p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<iframe width="100%" height="180" frameborder="no" scrolling="no" seamless="" src="https://share.transistor.fm/e/c8f9aa41"></iframe>
<!-- /wp:html -->

<!-- wp:paragraph -->
<p>Once you’ve separated that piece of functionality, you can include support across a variety of devices and operating systems.<strong> In the Apple ecosystem, this could mean supporting not only the iPhones but anything from Linux servers to the Apple Watch.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Another nice feature of package management is that you can lock onto specific versions. Usually you can specify a <em><a href="https://semver.org" target="_blank" rel="noreferrer noopener">semver</a></em> compatible version number related to a version tag or even a branch name. Let's get into the different package managers for developers in the Apple ecosystem.</p>
<!-- /wp:paragraph -->

<!-- wp:gallery {"ids":[1148,1149],"linkTo":"none"} -->
<figure class="wp-block-gallery columns-2 is-cropped"><ul class="blocks-gallery-grid"><li class="blocks-gallery-item"><figure><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/colored-14344.png" alt="" data-id="1148" data-link="https://learningswift.brightdigit.com/?attachment_id=1148" class="wp-image-1148"/></figure></li><li class="blocks-gallery-item"><figure><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/pasted-image-small-14348.png" alt="" data-id="1149" data-full-url="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/pasted-image-small-14348.png" data-link="https://learningswift.brightdigit.com/?attachment_id=1149" class="wp-image-1149"/></figure></li></ul></figure>
<!-- /wp:gallery -->

<!-- wp:heading -->
<h2>What Came Before... and is Still Around</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Swift Package Manager is fairly a new addition for Swift developers let alone iOS and macOS developers. Let's talk about what what has come before for developers.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Carthage</strong> has been around since the advent of Swift. Carthage really specializes in building the binary frameworks and sharing those within your project. Before Carthage, there was <strong>CocoaPods</strong> which has been around since the early days of Objective-C.  </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>One drawback is that Cocoapods is built in Ruby and is therefore dependent on having the correct versions of Ruby installed while Carthage is built in Swift. Another drawback for Cocoapods is that <strong>it requires modification of your Xcode projects and workspaces</strong>. Carthage gets around this by having the user <strong>add the built frameworks the manually the first time they integrate it.</strong> If you are interested in some of the choices where Carthage differs from Cocoapods, check out <a href="https://github.com/Carthage/Carthage#differences-between-carthage-and-cocoapods" target="_blank" rel="noreferrer noopener">this piece the Carthage README.</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Lastly, if neither works for your project, there's <strong><a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" target="_blank" rel="noreferrer noopener">git submodules</a></strong>. Git Submodules are the most difficult to deal with, but perhaps the most versatile. They simply require an available git repo to link to a subdirectory. If you plan editing your dependency, git submodules may be required.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>If you are going to use a package manager, choose one at best and stick with it. </strong>However your best bet is migrating to Swift Package Manager.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":1151,"sizeSlug":"large","linkDestination":"none"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/Xcode_Icon-small-15043.png" alt="" class="wp-image-1151"/></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Why Swift Package Manager?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Swift Package Manager brings plenty of benefits along with it. Along with it's versatile handing of versioning, SPM (Swift Package Manager) is natively supported in Swift. While tools like CocoaPods require Ruby and other Gem dependencies, there's no need with SPM. SPM simply requires either Swift or Xcode be installed on your macOS  or Linux machine.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>SPM is also open-source while also being supported by Apple. This means you get the benefits of seeing how something works and being open to the community as well as in Apple's best interest to support it.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Really it comes down to whether your current line of dependencies support SPM. At this point, the list of Cocoapods and Carthage packages which also support SPM continues to grow as SPM expands its support for features like binary packages (i.e. XCFrameworks).</p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://www.youtube.com/watch?v=2ZhvfG_vd5Y","type":"video","providerNameSlug":"youtube","responsive":true,"className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://www.youtube.com/watch?v=2ZhvfG_vd5Y
</div></figure>
<!-- /wp:embed -->

<!-- wp:paragraph -->
<p>Not only does SPM provide benefits in your Xcode projects but also in the way you modularize and share your code.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Why Publish with Swift Package Manager?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There are plenty of reasons to break apart your application or even publish your library or executable via Swift Package Manager. For one thing, i<strong>t becomes easier to build your application completely in Swift - from server to device.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Full Stack Swift</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For instance, you can build your supporting server application in Swift whether that’s Vapor, Lambda, Smoke, or Hummingbird. By doing that, <strong>you can share code between client (iOS application) and server.</strong> Specifically Codable models can be shared on both iOS and the server. Even if you have an existing server, you can build a mock server in Swift for testing. </p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// an example of sharing server-side and client-side code via SPM

// HeartwitchKit/WorkoutData.swift
public struct WorkoutData {
  public let heartRate: Double?

  public init(heartRate: Double? = nil) {
    self.heartRate = heartRate
  }

  public func updated(with new: WorkoutData) -&gt; WorkoutData {
    let heartRate = new.heartRate ?? self.heartRate
    return WorkoutData(heartRate: heartRate)
  }
}

extension WorkoutData: Codable {}

// HeartwitchKitServer/WorkoutData
import Vapor
extension WorkoutData: Content {}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>If you are going the route of building both ends of your application in Swift, SPM is the only way to go. In fact for parts of your code that can be abstracted away from the device, SPM has advantages over Xcode when it comes to testing.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Testability</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The ease of testing through SPM is really nice as well. Especially when it’s difficult and slow to do in simulator. For instance before Xcode 12.5 supported watchOS testing, it was nearly impossible to run unit tests for watchOS. </p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://youtu.be/fzLkHAku1mc?t=1723","type":"video","providerNameSlug":"youtube","responsive":true,"className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://youtu.be/fzLkHAku1mc?t=1723
</div><figcaption>Interested in learning more about developing a Full Stack Swift application?<br>Check out my talk from iOSDevCampDC2020</figcaption></figure>
<!-- /wp:embed -->

<!-- wp:paragraph -->
<p>However by having most of your Apple Watch application code in a Swift package, I can easily test code which doesn't require watchOS specifically. <strong>This circumvents the issue but also makes it easier without needing an actual device or via simulator.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In spots where code is only applicable and available on the watch, such as SwiftUI or HealthKit code I can use a combination of preprocessor directives to mark availability:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// using canImport and os to disable applicable code

#if canImport(HealthKit)
  import HealthKit

  extension HKHealthStore: HealthInterface {
    public func workout(withConfiguration configuration: WorkoutConfiguration) throws -&gt; Workout {
      let hkConfig = HKWorkoutConfiguration()
      hkConfig.activityType = configuration.activityType.healthKitType
      #if os(watchOS)
        return try HealthKitLiveWorkout(fromHealthStore: self, withConfiguration: hkConfig)
      #else
        return try HealthKitWorkout(fromHealthStore: self, withConfiguration: hkConfig)
      #endif
    }
  }
#endif</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>Not only that but as I develop a server-side application I may not want to run the watchOS application every time to test capabilities on the server. This is where refactoring into a Swift package is also useful. By having a library which contains most of my watchOS code, I can simulate the heart rate in the Apple Watch application by creating a simple command line application.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Command Line Tools</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><strong>SPM allows me to duplicate the functionality of Heartwitch, my watchOS app, into a command line tool</strong> which replicates the heart rate sensor feature. This makes it easier to test the server application without having to run the Heartwitch app on my Apple Watch or via simulator.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1165,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image size-large"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/hwmonitor-1024x495.gif" alt="" class="wp-image-1165"/><figcaption>Faking a Watch App with a Command Line Tool</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>One of my favorite tools out there is <a href="https://github.com/apple/swift-argument-parser">the Swift Argument Parser by the Swift team</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Swift Argument Parser builds on the great ideas from Swift UI (i.e. Property Wrappers) and Codable and brings that to the command line. </strong>You can do things like subcommands, helpful feedback, options, and flags. In my case, I use it to enable faster server-side development. Specifically I built a command line tool to replicate the heart rate monitoring feature of the Apple Watch app and feed my server simulated heart rates. </p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<iframe width="100%" height="180" frameborder="no" scrolling="no" seamless="" src="https://share.transistor.fm/e/4d6360c9"></iframe>
<!-- /wp:html -->

<!-- wp:heading -->
<h2>Power of SPM</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In this article we covered package management and the advantages of SPM over other managers. Consider using SPM and learning the ins and outs of integrating Swift Packages into your projects. If you are using Cocoapods or Carthage, consider migrating your applications over. In the next article, I'll talk about creating a Swift Package from scratch as well as the most important part - Package.swift - the Swift Package Manifest file.</p>
<!-- /wp:paragraph -->

<!-- wp:jetpack/mailchimp -->
<!-- wp:jetpack/button {"element":"button","uniqueId":"mailchimp-widget-id","text":"Join my email list"} /-->
<!-- /wp:jetpack/mailchimp -->]]></content:encoded>
		<excerpt:encoded><![CDATA[Add Examples]]></excerpt:encoded>
		<wp:post_id>1129</wp:post_id>
		<wp:post_date><![CDATA[2021-05-03 10:46:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-03 14:46:49]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-11 10:05:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-11 14:05:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[swift-dependency-management-spm]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="guides"><![CDATA[Guides]]></category>
		<category domain="post_tag" nicename="swift-package-manager"><![CDATA[swift-package-manager]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[Package Management has been around for decades. However since the introduction of Swift, the Apple team has given us a new package manager.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1144]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[19]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-1129-1620053468]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Package.swift - Getting Started with the SPM Manifest file]]></title>
		<link>https://learningswift.brightdigit.com/swift-package-manifest-file/</link>
		<pubDate>Tue, 11 May 2021 14:05:16 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=1139</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p><a href="https://learningswift.brightdigit.com/swift-dependency-management-spm/">In the previous article</a>, I talked about why Swift Package Manager has so many advantages over older package managers. In this article we'll talk about getting started: </p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>using a package in Xcode</li><li>creating a package in Xcode or with the <code>swift</code> command</li><li>how the manifest Package.swift file for your Swift Package works</li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Using a Package in Your App</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There are two ways to get started using Swift Package Manager for your project in Xcode.</p>
<!-- /wp:paragraph -->

<!-- wp:gallery {"ids":[1154,1155],"linkTo":"none","align":"wide"} -->
<figure class="wp-block-gallery alignwide columns-2 is-cropped"><ul class="blocks-gallery-grid"><li class="blocks-gallery-item"><figure><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Untitled-17069-1-825x1024.gif" alt="" data-id="1154" data-link="https://learningswift.brightdigit.com/?attachment_id=1154" class="wp-image-1154"/></figure></li><li class="blocks-gallery-item"><figure><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Screen-Shot-2020-10-19-17067-1006x1024.png" alt="" data-id="1155" data-full-url="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Screen-Shot-2020-10-19-17067.png" data-link="https://learningswift.brightdigit.com/?attachment_id=1155" class="wp-image-1155"/></figure></li></ul></figure>
<!-- /wp:gallery -->

<!-- wp:paragraph -->
<p>First, you can simply drag the folder into your Xcode project. This is the ideal way, when you are planning on working on the Xcode project while working on its dependent Swift Package. Otherwise, you can add the package dependency within the file menu in Xcode. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Creating a Package</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Xcode also allows you to create a new package. You can do this by going to file new and Swift package to create a package in Xcode.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1157,"width":274,"height":353,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image size-large is-resized"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Screen-Shot-2020-11-02-at-5.23.03-PM-14359.png" alt="" class="wp-image-1157" width="274" height="353"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Besides Xcode, you can also create one via the command line as well. Assuming you have Xcode or Swift installed on your machine, you could simply run:</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>&gt; mkdir New-Package
&gt; swift package init</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>By default, it'll use the directory name for the name of your package. Otherwise you can customize the name with the command line option <code>--name</code>. Additionally  you can also specify the type of package you want with the option <code>--type</code>. By default it'll use the library package type. When it creates a library package, it'll create the Package.swift file, the sources directory as well as one for your tests. If you create an executable, it will create a main dot Swift for your executable to run. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Either Xcode or the Swift command line will create the necessary files and directories to get started. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In the end, you should have:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Source directory for your main source code</li><li>Tests directory for your testing suite</li><li>Package.swift, the core of every Swift package</li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Package.swift - Anatomy of a Manifest File</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The main piece that specifies the configuration of your package is the Package. swift file. Let's take a look at the anatomy of this special file</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>swift tools version</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>At the very top, we see it specifies the Swift tools version this package requires. If you want to support some of the newer features like binary targets or newer operating systems, you're going to have to specify a newer version of Swift. Otherwise you can always use the minimum version required.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>A Package <em>Instance</em></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>At its core, the <code>Package.swift</code> is a Swift file and therefore contains Swift code for describing the package. Therefore you need to import the PackageDescription module, which is built in.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>From here we can begin to describe the package by creating an instance of a package object inside. The first required parameter for our package is the name followed by our package’s dependencies. </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Defining Dependencies</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Now let's talk about how to dependencies are defined in a Package.swift file. Typically there 3 components:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>the name of the dependency</li><li>The git url or local path of the dependency - if you intend to work on the dependencies simultaneously you’ll need to use a local path</li><li>the version number or some sort of git reference </li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>In all cases some sort version is required for all dependencies. There are multiple ways to specify the version you want. Most involve the semver numbering system.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":1160,"sizeSlug":"large","linkDestination":"none"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/Untitled-2-1024x512.png" alt="" class="wp-image-1160"/><figcaption>Components of SemVer</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":4} -->
<h4>How SemVer in Dependencies work</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There are typically three components: major, minor, and patch. For instance with the string “4.0.1”:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Major is 4</li><li>Minor is 0</li><li>Patch is 1 </li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>In most cases, you’ll want to just use the semver string which is automatically resolved up to the next major version based on the repository’s available tags. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you wish to be more specific about the version you wish to use, there are enumerations available to you to do just that.</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><code>upToNextMajor</code> is which equivalent to just using a string will search for tags from the version to the next major version, so 4.0.1 resolves from 4.0.1 to 5.0.0 but not including</li><li><code>upToNextMinor</code> will search for tags from the version to the next minor version, so 4.0.1 resolves from 4.0.1 to 4.1.0 but not including</li><li><code>exact</code> will search for tags with the exact version number only</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Not only can use a semver string but you can specify a branch or revision hash as well. However in most cases, the practice is to use just the semver string which is equivalent to <code>upToNextMajor</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Targets and Products</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Targets are the building blocks of your Swift package. Your targets will reference a set of Swift files which will be compiled into a module or test suite. There are four targets you should know about:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><code>target</code> -  a set of code to be used in a library (or main target in executable if swift-tools-version 5.3 or older)</li><li><code>testTarget</code> - a set of code to be used in a test suite</li><li><code>binaryTarget</code> - an compiled binary XCFramework </li><li><code>executableTarget</code> - a set of code to be used as the main target (i.e. <code>main</code> entry point) in a executable for swift tools version 5.4 and newer</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Targets can refers to other targets in the same package as dependencies. Additionally with our dependencies defined in this file, we can access their products as well. Specifically, we can refer to the products of those dependencies in our target’s dependencies. Once that’s done, we can access that dependency’s API in our code.  In most cases you can simply use a string referring to product name of the dependency. However in same instance you need to specify the source package using the static func <code>Target.Dependency.product</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If we want our executable or library available outside of the package, we need to define products in our Package.swift file as well. In this case, there are only two types of products: executable or library. Both require parameters for name and targets it contains. Additionally with libraries you can specify whether your library should static or dynamically linked.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To clarify the differences between products and targets:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Targets are internal; Products are external (i.e. available to anyone)</li><li>Targets can depend on other targets; products can contain multiple targets; targets can depend on dependency products</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Typically you’ll have one product per target as well as a test target for your product. In more complex packages such as <a href="https://github.com/apple/swift-package-manager/blob/main/Package.swift">the SPM package itself</a>, you can see how multiple targets are organized and used.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>More Resources</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you are interested in learning more about the<em> Package.swift</em> file, check these resources out:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a href="https://theswiftdev.com/the-swift-package-manifest-file/" target="_blank" rel="noreferrer noopener"><strong>The Swift package manifest file</strong> - Tibor Bödecs</a></li><li><a href="https://github.com/apple/swift-package-manager/tree/main/Documentation" target="_blank" rel="noreferrer noopener"><strong>SPM Repo Documentation</strong></a></li><li><a href="https://swift.org/package-manager/" target="_blank" rel="noreferrer noopener"><strong>Swift.org SPM Documentation</strong></a></li><li><a href="https://developer.apple.com/documentation/swift_packages" target="_blank" rel="noreferrer noopener"><strong>Apple SPM Documentation</strong> </a></li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Xcode Not Required</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>One important thing to note is that you do not need to open Xcode to compile the Swift package. Obviously there are benefits to using Xcode for editing your Swift code. However you can use any text editor to create and edit your files. (Or use the terminal to create your file via <code>touch FileName.swift</code>. To compile the package you can simply type in the terminal: <code>swift build</code>. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>As a matter of factor you don't even need a Mac. <a href="https://learningswift.brightdigit.com/swift-package-continuous-integration-guide/">In the next article, we'll talk about some ways to automate and verify your build with CI and git hook integration.</a></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1139</wp:post_id>
		<wp:post_date><![CDATA[2021-05-11 10:05:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-11 14:05:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-11 10:05:37]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-11 14:05:37]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[swift-package-manifest-file]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>1</wp:is_sticky>
										<category domain="post_tag" nicename="swift-package"><![CDATA[swift-package]]></category>
		<category domain="post_tag" nicename="swift-package-manager"><![CDATA[swift-package-manager]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Package.swift]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[We'll talk about using a package in Xcode, creating a package in Xcode or with the swift command as well as how the manifest Package.swift works.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[71]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_skip_19180323]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-1139-1620741920]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Asynchronous Mailchimp Form]]></title>
		<link>https://learningswift.brightdigit.com/untitled-reusable-block/</link>
		<pubDate>Tue, 24 Sep 2019 18:47:22 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/untitled-reusable-block/</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:html -->
<!-- Begin Mailchimp Signup Form -->
<link href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css" rel="stylesheet" type="text/css">
<style type="text/css">
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
	/* Add your own Mailchimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
</style>
<style type="text/css">
	#mc-embedded-subscribe-form input[type=checkbox]{display: inline; width: auto;margin-right: 10px;}
	#mergeRow-gdpr {margin-top: 20px;}
	#mergeRow-gdpr fieldset label {font-weight: normal;}
	#mc-embedded-subscribe-form .mc_fieldset{border:none;min-height: 0px;padding-bottom:0px;}
</style>
<div id="mc_embed_signup">
<form action="https://brightdigit.us12.list-manage.com/subscribe/post?u=cb3bba007ed171091f55c47f0&amp;id=584d0d5c40" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
    <div id="mc_embed_signup_scroll">
	<h2>How can I deliver a better user experience with asynchronous operations?</h2>
<div class="indicates-required"><span class="asterisk">*</span> indicates required</div>
<div class="mc-field-group">
	<label for="mce-EMAIL">Email Address  <span class="asterisk">*</span>
</label>
	<input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL">
</div>
<div class="mc-field-group">
	<label for="mce-FNAME">First Name  <span class="asterisk">*</span>
</label>
	<input type="text" value="" name="FNAME" class="required" id="mce-FNAME">
</div>
<div class="mc-field-group">
	<label for="mce-LNAME">Last Name  <span class="asterisk">*</span>
</label>
	<input type="text" value="" name="LNAME" class="required" id="mce-LNAME">
</div>
<div class="mc-field-group input-group" style="display: none;">
    <strong>Interests </strong>
    <ul><li><input type="checkbox" value="1" name="group[19229][1]" id="mce-group[19229]-19229-0"><label for="mce-group[19229]-19229-0" checked>Swift</label></li>
<li><input type="checkbox" value="2" name="group[19229][2]" id="mce-group[19229]-19229-1"><label for="mce-group[19229]-19229-1">Productivity</label></li>
<li><input type="checkbox" value="8" name="group[19229][8]" id="mce-group[19229]-19229-2"><label for="mce-group[19229]-19229-2">Vapor</label></li>
<li><input type="checkbox" value="16" name="group[19229][16]" id="mce-group[19229]-19229-3"><label for="mce-group[19229]-19229-3" checked>Async</label></li>
</ul>
</div>
<div class="mc-field-group input-group" style="display: none;">
    <strong>Products </strong>
    <ul><li><input type="checkbox" value="4" name="group[19233][4]" id="mce-group[19233]-19233-0"><label for="mce-group[19233]-19233-0">Speculid</label></li>
</ul>
</div>
<div id="mergeRow-gdpr" class="mergeRow gdpr-mergeRow content__gdprBlock mc-field-group">
    <div class="content__gdpr">
        <label>Marketing Permissions</label>
        <p>Please select all the ways you would like to hear from BrightDigit:</p>
        <fieldset class="mc_fieldset gdprRequired mc-field-group" name="interestgroup_field">
		<label class="checkbox subfield" for="gdpr_34225"><input type="checkbox" id="gdpr_34225" name="gdpr[34225]" value="Y" class="av-checkbox "><span>Email</span> </label>
        </fieldset>
        <p>You can unsubscribe at any time by clicking the link in the footer of our emails. For information about our privacy practices, please visit our website.</p>
    </div>
    <div class="content__gdprLegal">
        <p>We use Mailchimp as our marketing platform. By clicking below to subscribe, you acknowledge that your information will be transferred to Mailchimp for processing. <a href="https://mailchimp.com/legal/" target="_blank" rel="noopener noreferrer">Learn more about Mailchimp's privacy practices here.</a></p>
    </div>
</div>
	<div id="mce-responses" class="clear">
		<div class="response" id="mce-error-response" style="display:none"></div>
		<div class="response" id="mce-success-response" style="display:none"></div>
	</div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
    <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_cb3bba007ed171091f55c47f0_584d0d5c40" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
    </div>
</form>
</div>
<script type='text/javascript' src='//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js'></script><script type='text/javascript'>(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';fnames[2]='LNAME';ftypes[2]='text';fnames[3]='MMERGE3';ftypes[3]='text';fnames[4]='MMERGE4';ftypes[4]='number';fnames[6]='MMERGE6';ftypes[6]='number';fnames[7]='MMERGE7';ftypes[7]='text';}(jQuery));var $mcj = jQuery.noConflict(true);</script>
<!--End mc_embed_signup-->
<!-- /wp:html -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>744</wp:post_id>
		<wp:post_date><![CDATA[2019-09-24 14:47:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-24 18:47:22]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-30 17:52:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-30 21:52:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[untitled-reusable-block]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_block]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-744]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Mailchimp Series]]></title>
		<link>https://learningswift.brightdigit.com/untitled-reusable-block-2/</link>
		<pubDate>Mon, 17 Aug 2020 01:17:38 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/untitled-reusable-block-2/</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:jetpack/mailchimp {"consentText":"\u003cstrong\u003e...when the next post is out\u003cbr\u003e\u003c/strong\u003e\u003cem\u003eBy clicking submit, you agree to share your email address with the site owner and Mailchimp to receive marketing, updates, and other emails from the site owner. Use the unsubscribe link in those emails to opt out at any time\u003c/em\u003e.","interests":["aca014a037","45462d2cca"],"signupFieldValue":"combine-corelocation-publishers-delegates"} -->
<!-- wp:jetpack/button {"element":"button","uniqueId":"mailchimp-widget-id","text":"Notify Me"} /-->
<!-- /wp:jetpack/mailchimp -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1064</wp:post_id>
		<wp:post_date><![CDATA[2020-08-16 21:17:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-17 01:17:38]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-08-21 10:41:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-08-21 14:41:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[untitled-reusable-block-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_block]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_styles]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_themeisle_gutenberg_block_stylesheet]]></wp:meta_key>
		<wp:meta_value><![CDATA[post-1064]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Swift Package Manager - Dependency Management of the Future]]></title>
		<link>https://learningswift.brightdigit.com/?p=1122</link>
		<pubDate>Fri, 30 Apr 2021 18:20:27 +0000</pubDate>
		<dc:creator><![CDATA[leo]]></dc:creator>
		<guid isPermaLink="false">https://learningswift.brightdigit.com/?p=1122</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:jetpack/markdown {"source":"Package Management has been around for decades. There’s  Advanced Package Tool (api), bundler for Ruby, chocolatey for Windows and NuGet for C#, Maven for (Java), nvm and yarn for JavaScript, and more.\nFor those work in the Apple space we are probably more familiar with Cocoapods and homebrew. However since the introduction of Swift, the Apple team has given us a new Package Manager: Swift Package Manager.\nToday we will be talking about what is the Swift Package Manager (or SPM) as well:\n- what came before using and creating Swift packages\n- the anatomy of a Swift package\n- why use Swift package manager \n- preparing your package for publishing \nSo let's talk about what exactly is package management "} -->
<div class="wp-block-jetpack-markdown"><p>Package Management has been around for decades. There’s  Advanced Package Tool (api), bundler for Ruby, chocolatey for Windows and NuGet for C#, Maven for (Java), nvm and yarn for JavaScript, and more.
For those work in the Apple space we are probably more familiar with Cocoapods and homebrew. However since the introduction of Swift, the Apple team has given us a new Package Manager: Swift Package Manager.
Today we will be talking about what is the Swift Package Manager (or SPM) as well:</p>
<ul>
<li>what came before using and creating Swift packages</li>
<li>the anatomy of a Swift package</li>
<li>why use Swift package manager</li>
<li>preparing your package for publishing
So let's talk about what exactly is package management</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1122</wp:post_id>
		<wp:post_date><![CDATA[2021-04-30 14:20:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-30 18:20:27]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-04-30 14:20:27]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-30 18:20:27]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[__trashed]]></wp:post_name>
		<wp:status><![CDATA[trash]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_twitter_user]]></wp:meta_key>
		<wp:meta_value><![CDATA[@leogdion]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
		<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
		<wp:meta_value><![CDATA[1619806827]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_desired_post_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
				</channel>
</rss>
	